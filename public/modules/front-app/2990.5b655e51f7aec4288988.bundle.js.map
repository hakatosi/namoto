{"version":3,"sources":["webpack:///./resources/modules/admin/src/components/altrp-select/AltrpSelect.js","webpack:///./resources/modules/editor/src/js/classes/modules/TemplateLoader.js","webpack:///./resources/modules/editor/src/js/components/altrp-table/components/PageButton.js","webpack:///./resources/modules/editor/src/js/components/altrp-table/components/PaginationComponent.js","webpack:///./resources/modules/editor/src/js/components/altrp-table/components/Pagination.js","webpack:///./resources/modules/front-app/src/js/classes/FrontElementsFabric.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/ElementWrapperComponent.js","webpack:///./resources/modules/front-app/src/js/constants/DEFAULT_REACT_ELEMENTS.js","webpack:///./resources/modules/front-app/src/js/components/ElementWrapper.js","webpack:///./resources/modules/front-app/src/js/store/elements-storage/actions.js"],"names":["renderScrollbar","props","autoHeight","children","AltrpSelect","loadOptions","searchString","callback","options","optionsResource","search","setState","state","optionsRoute","Resource","route","selectRef","React","customStyles","control","base","boxShadow","borderColor","isFocused","menuPortal","zIndex","selectProps","onChange","this","placeholder","noOptionsMessage","styles","menuPortalTarget","document","body","menuPlacement","menuPosition","onKeyDown","components","MenusList","captureMenuScroll","isDisabled","ref","_","assign","isArray","value","map","item","_i","label","isString","isNumber","isObject","forEach","option","find","o","Component","TemplateLoader","resource","templatesCache","AltrpModel","get","window","__altrp_settings__","templateId","force","update","Number","hasProperty","Promise","resolve","reject","pendingCallbacks","push","statuses","template","setProperty","getProperty","loadTemplate","templateData","JSON","parse","frontElementsFabric","templateLoader","PageButton","index","pageIndex","gotoPage","className","onClick","styled","settings","width_count_item","getResponsiveSetting","height_count_item","size","unit","Pagination","nextPage","previousPage","setPageSize","pageCount","pageSize","widgetId","inner_page_count_options","inner_page_type","current_page_text","inner_page_count","next_icon","prev_icon","first_last_buttons_count","middle_buttons_count","posts_pagination_type","is_with_ellipsis","countOptions","useMemo","split","pageText","replace","generateButtonsArray","key","Array","hide_pre_page_button","disabled","dangerouslySetInnerHTML","__html","prev_text","renderAssetIcon","hide_pages_buttons_button","hide_next_page_button","next_text","hide_page_input","type","defaultValue","e","page","target","hide_pagination_select","classNamePrefix","isSearchable","FrontElementsFabric","object","parent","pageId","models","element","FrontElement","addModelInfo","modelName","modelId","model","length","child","frontElementsManager","checkElementExists","name","parseData","id","lastElement","dynamicContentSettings","setParent","clonedElement","cloneDeep","updateParents","c","ElementWrapperDivComponent","div","layout_column_width","_export","altrpHelpers","altrpCompare","altrpRandomId","conditionsChecker","isEditor","replaceContentWithData","setTitle","ElementWrapper","updateStore","currentModel","appStore","getState","currentUser","currentDataStorage","elementDisplay","getSettings","reactElement","elementId","getId","wrapper","elementWrapperRef","createRef","elementRef","dispatch","addElement","error","errorInfo","frontApp","onWidgetMount","isFunction","updateFonts","checkElementDisplay","stylesModule","stylesContainer","current","getElementsByClassName","prevProps","prevState","getName","title","currentTitle","altrpPage","changeCurrentPageProperty","updateToken","conditions","modelField","conditional_model_field","operator","conditional_other_operator","conditional_other_condition_value","getCurrentModel","formsStore","formId","logic","formConditions","display","field_id","hide_on_wide_screen","hide_on_desktop","hide_on_laptop","hide_on_tablet","hide_on_big_phone","hide_on_small_phone","isFixed","hide_on_trigger","tooltip_position","tooltip_text","classes","getType","getPrefixClasses","getData","style","whiteSpace","toString","componentStack","width","CSSId","ContentComponent","getComponentClass","content","createElement","rootElement","getChildren","match","altrpresponses","altrpPageState","altrpMeta","currentScreen","baseRender","history","getTemplateType","WrapperComponent","NavComponent","wrapperProps","DEFAULT_REACT_ELEMENTS","isEmpty","AltrpTooltip","position","withRouter","reactRedux","connect","forwardRef","ADD_ELEMENT","CLEAR_ELEMENTS","elementComponent","clearElements"],"mappings":"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","file":"2990.5b655e51f7aec4288988.bundle.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport AsyncSelect from \"react-select/async\";\r\nimport Resource from \"../../../../editor/src/js/classes/Resource\";\r\nimport Select from \"react-select\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport {parseParamsFromString, parseURLTemplate} from \"../../../../front-app/src/js/helpers\";\r\n\r\nexport const renderScrollbar = (props) => {\r\n  return <Scrollbars autoHeight >{props.children}</Scrollbars>;\r\n};\r\n\r\nclass AltrpSelect extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      options: props.options || [],\r\n    };\r\n    if(props.optionsRoute){\r\n      this.optionsResource = new Resource({route: props.optionsRoute});\r\n    }\r\n    this.selectRef = React.createRef();\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  async componentDidMount(){\r\n\r\n  }\r\n  /**\r\n   * изменение значения\r\n   */\r\n  onChange(){\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  loadOptions = async (searchString, callback)=>{\r\n    let options = [];\r\n    if(this.optionsResource){\r\n      options = await this.optionsResource.search(searchString);\r\n    }\r\n    this.setState(state=>({\r\n      ...state,\r\n      options\r\n    }));\r\n    return callback(options);\r\n  };\r\n\r\n  render(){\r\n    const customStyles = {\r\n      control: (base, state) => ({\r\n        ...base,\r\n        boxShadow: \"none\",\r\n        borderColor: state.isFocused ? \"hsl(0,0%,80%)\" : \"hsl(0,0%,80%)\",\r\n        \"&:hover\": {\r\n          borderColor: \"hsl(0,0%,80%)\"\r\n        }\r\n      }),\r\n      menuPortal: base => ({ ...base, zIndex: 99999 }),\r\n      // option: (provided, state) => ({\r\n      //   ...provided,\r\n      //   backgroundColor: state.isSelected ?\r\n      //     background.selected.color :\r\n      //     state.isFocused ? background.focused.color : background.normal.color\r\n      // })\r\n    };\r\n\r\n    let selectProps = {\r\n      onChange: this.onChange,\r\n      options: this.state.options || [],\r\n      placeholder: this.props.placeholder,\r\n      loadOptions: this.loadOptions,\r\n      noOptionsMessage: this.props.noOptionsMessage || (() => \"not found\"),\r\n      styles: customStyles,\r\n      menuPortalTarget: document.body,\r\n      menuPlacement: 'auto',\r\n      menuPosition: 'absolute',\r\n      onKeyDown : this.onKeyDown,\r\n      components: { MenusList: renderScrollbar },\r\n      captureMenuScroll: false,\r\n      isDisabled: this.state.isDisabled,\r\n      ref: this.selectRef,\r\n    };\r\n\r\n    _.assign(selectProps, this.props);\r\n\r\n    if(_.isArray(selectProps.value)){\r\n      selectProps.value = selectProps.value.map(item => {\r\n        let _i = {\r\n          label: '',\r\n          value: '',\r\n        };\r\n        if(_.isString(item) || _.isNumber(item)){\r\n          _i.value = item;\r\n          _i.label = item;\r\n        } else if(_.isObject(item)) {\r\n          return item;\r\n        }\r\n        if(_.isArray(selectProps.options)){\r\n          selectProps.options.forEach(option=>{\r\n            if(option.value === _i.value){\r\n              _i = {...option,};\r\n            }\r\n          });\r\n        }\r\n        return _i;\r\n      });\r\n    }\r\n    if(selectProps.value && ! _.isObject(selectProps.value)){\r\n      selectProps.value = selectProps.options.find(o=>{\r\n        return o.value == selectProps.value;\r\n      });\r\n    }\r\n    if( this.optionsResource){\r\n      return <AsyncSelect {...selectProps} />\r\n    } else {\r\n      return <Select {...selectProps} />\r\n    }\r\n  }\r\n}\r\n\r\nexport default AltrpSelect\r\n\r\n\r\n\r\n","import Resource from \"../Resource\";\r\nimport AltrpModel from \"../AltrpModel\";\r\nimport frontElementsFabric from \"../../../../../front-app/src/js/classes/FrontElementsFabric\";\r\n\r\n/**\r\n * @class TemplateLoader\r\n */\r\nexport class TemplateLoader {\r\n  /**\r\n   * Хранилище статусов получения данных, чтобы не делать много параллельных запросов\r\n   * @type {{}}\r\n   */\r\n  static statuses = {};\r\n  /**\r\n   * Хранилище обратных вызовов, чтобы не делать много параллельных запросов\r\n   * @type {{}}\r\n   */\r\n  static pendingCallbacks = {};\r\n\r\n\r\n  constructor(){\r\n    this.resource = new Resource({route: '/ajax/templates'});\r\n    this.templatesCache = new AltrpModel(_.get(window.__altrp_settings__, 'templates_data',{}));\r\n  }\r\n\r\n  /**\r\n   * Загрузить шаблон по ид\r\n   * @param {integer | string} templateId\r\n   * @param {boolean} force\r\n   * @param {*} templateId\r\n   * @return {[]}\r\n   */\r\n  async loadTemplate(templateId, force = false){\r\n\r\n    let update = force;\r\n    templateId = Number(templateId) ? Number(templateId) : templateId;\r\n\r\n    if(! update){\r\n      update = ! this.templatesCache.hasProperty(templateId);\r\n    }\r\n\r\n    if(_.get(TemplateLoader, `statuses.${templateId}`) === 'loading'){\r\n      return new Promise((resolve, reject) => {\r\n        TemplateLoader.pendingCallbacks[templateId] = TemplateLoader.pendingCallbacks[templateId] || [];\r\n        TemplateLoader.pendingCallbacks[templateId].push(resolve);\r\n      })\r\n    }\r\n\r\n    TemplateLoader.statuses[templateId] = 'loading';\r\n\r\n    try {\r\n\r\n      let template = null;\r\n\r\n      if (update) {\r\n        template = await this.resource.get(templateId);\r\n        this.templatesCache.setProperty(templateId, template);\r\n      } else {\r\n        template = this.templatesCache.getProperty(templateId);\r\n      }\r\n\r\n      if(_.isArray(TemplateLoader.pendingCallbacks[templateId])){\r\n        TemplateLoader.pendingCallbacks[templateId].forEach(callback=>{\r\n          callback(template);\r\n        });\r\n      }\r\n\r\n      TemplateLoader.statuses[templateId] = 'loaded';\r\n      TemplateLoader.pendingCallbacks[templateId] = [];\r\n      return template;\r\n\r\n    }catch(error){\r\n      if(_.isArray(TemplateLoader.pendingCallbacks[templateId])){\r\n        TemplateLoader.pendingCallbacks[templateId].forEach(callback=>{\r\n          callback(null);\r\n        });\r\n      }\r\n      TemplateLoader.statuses[templateId] = 'loaded';\r\n      TemplateLoader.pendingCallbacks[templateId] = [];\r\n      return null;\r\n    }\r\n\r\n    //return Promise.resolve(this.templatesCache.getProperty(templateId));\r\n  }\r\n\r\n  /**\r\n   * Загрузить шаблон по ид\r\n   * @param {integer | string} templateId\r\n   * @param {boolean} force\r\n   * @param {*} templateId\r\n   */\r\n  async loadParsedTemplate(templateId, force = false){\r\n\r\n    if(! templateId){\r\n      return null;\r\n    }\r\n    templateId = Number(templateId) ? Number(templateId) : templateId;\r\n\r\n    let templateData = _.get((await this.loadTemplate(templateId, force)), 'data');\r\n    templateData = JSON.parse(templateData);\r\n\r\n    return frontElementsFabric.parseData(templateData);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string} templateId\r\n   * @returns {null|{}}\r\n   */\r\n  mbGetParsedTemplate(templateId){\r\n    if(! this.templatesCache.hasProperty(templateId)){\r\n      return null;\r\n    }\r\n    let templateData = _.get(this.templatesCache.getProperty(templateId), 'data');\r\n    templateData = JSON.parse(templateData);\r\n    return frontElementsFabric.parseData(templateData)\r\n  }\r\n}\r\n\r\n window.templateLoader =  new TemplateLoader();\r\n\r\nexport default window.templateLoader;\r\n","\r\nexport default function PageButton({ index, pageIndex, gotoPage }) {\r\n  return <button\r\n      className={`altrp-pagination-pages__item ${(index === pageIndex) ? 'active' : ''}`}\r\n      onClick={() => gotoPage(index)}\r\n  >\r\n    {index + 1}\r\n  </button>\r\n}","import styled from 'styled-components';\r\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\n\r\nconst PaginationComponent = styled.div`\r\n& .altrp-pagination-pages__item{\r\n${({settings}) => {\r\n  let styles = '';\r\n  const width_count_item = getResponsiveSetting(settings, 'width_count_item');\r\n  const height_count_item = getResponsiveSetting(settings, 'height_count_item');\r\n  if (!width_count_item) {\r\n    styles += `width: 35px;`;\r\n    styles += `padding-left: 0;`;\r\n    styles += `padding-right: 0;`;\r\n  } else if(width_count_item.size && width_count_item.unit){\r\n    styles += `width: ${width_count_item.size}${width_count_item.unit};`;\r\n    styles += `padding-left: 0;`;\r\n    styles += `padding-right: 0;`;\r\n  }\r\n  if (! height_count_item) {\r\n    styles += `height: 35px;`;\r\n    styles += `padding-top: 0;`;\r\n    styles += `padding-bottom: 0;`;\r\n  } else if(height_count_item.size && height_count_item.unit){\r\n    styles += `height: ${height_count_item.size}${height_count_item.unit};`;\r\n    styles += `padding-top: 0;`;\r\n    styles += `padding-bottom: 0;`;\r\n  }\r\n  return styles;\r\n}}\r\n}\r\n`;\r\n\r\nexport default PaginationComponent;","import {generateButtonsArray, renderAssetIcon} from \"../../../../../../front-app/src/js/helpers\";\r\nimport PageButton from \"./PageButton\";\r\nimport AltrpSelect from \"../../../../../../admin/src/components/altrp-select/AltrpSelect\";\r\nimport PaginationComponent from \"./PaginationComponent\";\r\n\r\n/**\r\n *\r\n * @param {{}}settings\r\n * @param {function} nextPage\r\n * @param {function} previousPage\r\n * @param {function} setPageSize\r\n * @param {function} gotoPage\r\n * @param {int} pageIndex\r\n * @param {int} pageCount\r\n * @param {int} pageSize\r\n * @param {string} widgetId\r\n * @return {*}\r\n */\r\nexport default function Pagination(\r\n    {\r\n      settings,\r\n      nextPage,\r\n      previousPage,\r\n      setPageSize,\r\n      pageIndex,\r\n      pageCount,\r\n      pageSize,\r\n      widgetId,\r\n      gotoPage,\r\n    }) {\r\n  const {\r\n    inner_page_count_options,\r\n    inner_page_type,\r\n    current_page_text,\r\n    inner_page_count,\r\n    next_icon, prev_icon,\r\n    first_last_buttons_count,\r\n    middle_buttons_count,\r\n    posts_pagination_type ,\r\n    is_with_ellipsis\r\n  } = settings;\r\n  let countOptions =\r\n      React.useMemo(() => {\r\n        let countOptions = null;\r\n        if (inner_page_count_options) {\r\n          countOptions = inner_page_count_options.split('\\n');\r\n          countOptions = countOptions.map(o => ({ value: Number(o), label: Number(o) }));\r\n        }\r\n        return countOptions\r\n      }, [inner_page_count_options]);\r\n\r\n  const pageText = React.useMemo(() => {\r\n    let pageText = current_page_text || 'Current Page: {{page}}';\r\n    pageText = pageText.replace('{{page}}', pageIndex + 1).replace('{{page_count}}', pageCount);\r\n    if (inner_page_type === 'pages' || posts_pagination_type === 'pages') {\r\n      // let paginatePageCount = Number(inner_page_count) || pageCount;\r\n      // if (paginatePageCount <= 0 || paginatePageCount > pageCount) {\r\n      //   paginatePageCount = pageCount;\r\n      // }\r\n      // let array = [];\r\n      // for (let i = 0; i < paginatePageCount; i++) {\r\n      //   array.push(i);\r\n      // }\r\n      // let startIndex = (paginatePageCount === pageCount) ? 1 : (pageIndex + 1) - Math.floor(paginatePageCount / 2);\r\n      // if (startIndex <= 0) {\r\n      //   startIndex = 1;\r\n      // }\r\n      // if (startIndex + paginatePageCount > pageCount) {\r\n      //   startIndex = pageCount - paginatePageCount + 1;\r\n      // }\r\n      // pageText = <div className=\"altrp-pagination-pages\">{array.map((i, idx) => {\r\n      //   idx += startIndex;\r\n      //   return <button className={`altrp-pagination-pages__item ${(idx - 1 === pageIndex) ? 'active' : ''}`}\r\n      //     key={idx}\r\n      //     onClick={() => {\r\n      //       gotoPage(idx - 1);\r\n      //     }}>\r\n      //     {idx}\r\n      //   </button>\r\n\r\n      // })}</div>\r\n      return <div className=\"altrp-pagination-pages\">\r\n        {(pageCount > first_last_buttons_count * 2 + middle_buttons_count)\r\n        && first_last_buttons_count && middle_buttons_count\r\n            ? generateButtonsArray(pageIndex, pageCount, first_last_buttons_count, middle_buttons_count)\r\n                .map((item, index) => item === \"ellipsis\"\r\n                    ? is_with_ellipsis ? <div key={item + index} className=\"altrp-pagination__ellipsis\">...</div> : <span>&nbsp;</span>\r\n                    : <PageButton key={item} index={item} pageIndex={pageIndex} gotoPage={gotoPage} />)\r\n            : [...Array(pageCount)].map((_, index) => <PageButton key={index} index={index} pageIndex={pageIndex} gotoPage={gotoPage} />)}\r\n      </div>\r\n    }\r\n    return pageText;\r\n  }, [current_page_text, pageIndex, pageCount, inner_page_type, inner_page_count, settings]);\r\n  if(inner_page_type === 'none'){\r\n    return null;\r\n  }\r\n  return <PaginationComponent className=\"altrp-pagination\" settings={settings}>\r\n    {!settings.hide_pre_page_button && <button className={\"altrp-pagination__previous\"}\r\n                                               onClick={() => {\r\n                                                 previousPage();\r\n                                               }}\r\n                                               disabled={pageIndex === 0}>\r\n      <span dangerouslySetInnerHTML={{ __html: _.isString(settings.prev_text) ? settings.prev_text : 'Previous Page' }} />\r\n      {renderAssetIcon(prev_icon)}\r\n    </button>}\r\n    {!settings.hide_pages_buttons_button && <div className=\"altrp-pagination__count\">\r\n      {pageText}\r\n    </div>}\r\n    {!settings.hide_next_page_button && <button className=\"altrp-pagination__next\"\r\n                                                onClick={() => {\r\n                                                  nextPage()\r\n                                                }}\r\n                                                disabled={pageCount === pageIndex + 1}>\r\n      <span dangerouslySetInnerHTML={{ __html: _.isString(settings.next_text) ? settings.next_text : 'Next Page' }} />\r\n      {renderAssetIcon(next_icon)}\r\n    </button>}\r\n    {! settings.hide_page_input &&\r\n    <input className=\"altrp-pagination__goto-page\"\r\n           type=\"number\"\r\n           defaultValue={pageIndex + 1}\r\n           onChange={(e) => {\r\n             const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n             gotoPage(page)\r\n           }} />}\r\n    {! settings.hide_pagination_select && countOptions &&\r\n    <AltrpSelect className=\"altrp-pagination__select-size\"\r\n      options={countOptions}\r\n      classNamePrefix={widgetId + ' altrp-field-select2'}\r\n      value={countOptions.find(o => o.value === pageSize)}\r\n      isSearchable={false}\r\n      onChange={value => {\r\n        setPageSize(value.value)\r\n      }} />}\r\n\r\n  </PaginationComponent>\r\n}\r\n","import FrontElement from \"./FrontElement\";\nclass FrontElementsFabric {\n  /**\n   * парсим данные шаблона\n   * @param {object} object\n   * @param {FrontElement | null} parent\n   * @param {int | null} pageId\n   * @param {array | null} models\n   * @return {FrontElement}\n   */\n  parseData(object, parent, pageId, models){\n    let children = [];\n    /**\n     * @member {FrontElement} element\n     * */\n    let element = new FrontElement(object);\n    if(pageId){\n      element.addModelInfo({\n        modelName: 'page',\n        modelId: pageId,\n      });\n    }\n    if(_.isArray(models)){\n      for(let model of models){\n        element.addModelInfo({\n            ...model,\n        });\n      }\n    }\n    if(object.children && object.children.length ){\n      for(let child of object.children){\n        window.frontElementsManager.checkElementExists(child.name) ?\n            children.push( this.parseData(child, element) ) : '';\n      }\n    }\n    element.id = object.id;\n    element.lastElement = object.lastElement;\n    element.children = children;\n    element.settings = object.settings;\n    element.name = object.name;\n    element.type = object.type;\n    element.dynamicContentSettings = object.dynamicContentSettings;\n    if(parent){\n      element.setParent(parent);\n    }\n    element.update();\n    return element;\n  }\n\n  /**\n   * Правильное клонирование элемента\n   * @params {FrontElement} element\n   * @return {FrontElement | null}\n   */\n  cloneElement(element){\n    if(! element){\n      return null;\n    }\n    let clonedElement = _.cloneDeep(element);\n    // console.log(element.idForAction);\n    this.updateParents(clonedElement);\n    return clonedElement\n  }\n\n  /**\n   * Обновляет ссылку на родителя у элементов\n   * @params {FrontElement} element\n   */\n\n  updateParents(element){\n    if(_.isArray(element.children)){\n      element.children.forEach(c=>{\n        c.setParent(element);\n        this.updateParents(c);\n        // console.log(c);\n      });\n    }\n  }\n}\n\nwindow.frontElementsFabric = new FrontElementsFabric();\nexport default window.frontElementsFabric;\n","\r\nimport { getResponsiveSetting } from \"../../../../../../front-app/src/js/helpers\";\r\n\r\nconst settingsToStyles = ({ settings }) => {\r\n   let styles = '';\r\n\r\n   styles += '&.altrp-column{';\r\n   const layout_column_width = getResponsiveSetting(settings, 'layout_column_width');\r\n   if (layout_column_width) {\r\n      if (Number(layout_column_width)) {\r\n         styles += `width:${layout_column_width}%;`;\r\n      } else {\r\n         styles += `width:${layout_column_width};`;\r\n      }\r\n   }\r\n\r\n   styles += '}';\r\n   return styles;\r\n};\r\n\r\nexport const ElementWrapperDivComponent = styled.div`${settingsToStyles}`;\r\n","const DEFAULT_REACT_ELEMENTS = [\n  'input',\n  'input-select',\n  'input-multi-select',\n  'input-select2',\n  'input-radio',\n  'input-checkbox',\n  'input-wysiwyg',\n  'input-textarea',\n  'input-slider',\n  'input-range-slider',\n  'input-image-select',\n  'input-accept',\n  'input-text',\n  'input-text-common',\n  'input-password',\n  'input-number',\n  'input-tel',\n  'input-email',\n  'input-date',\n  'input-hidden',\n  'input-file',\n  'input-gallery',\n  'breadcrumbs',\n  'map',\n  'map_builder',\n  'menu',\n  'diagram',\n  'input',\n  'nav',\n  'dashboards',\n  'tour',\n  'icon',\n  'export',\n  'template',\n  'gallery',\n  'dropbar',\n  'posts',\n  'table',\n  'tabs',\n  'heading-type-animating',\n]\nexport default DEFAULT_REACT_ELEMENTS\n","import { withRouter } from \"react-router-dom\";\nimport { addElement } from \"../store/elements-storage/actions\";\nimport AltrpTooltip from \"../../../../editor/src/js/components/altrp-tooltip/AltrpTooltip\";\nimport { changeCurrentPageProperty } from \"../store/current-page/actions\";\nimport { ElementWrapperDivComponent } from \"../../../../editor/src/js/components/widgets/styled-components/ElementWrapperComponent\";\nimport NavComponent from \"../../../../editor/src/js/components/widgets/styled-components/NavComponent\";\nimport DEFAULT_REACT_ELEMENTS from \"../constants/DEFAULT_REACT_ELEMENTS\";\nconst {\n  altrpCompare,\n  altrpRandomId,\n  conditionsChecker,\n  isEditor,\n  replaceContentWithData,\n  setTitle\n} = window.altrpHelpers;\n\nclass ElementWrapper extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      elementDisplay: !this.props.element.getSettings(\"default_hidden\")\n    };\n    this.reactElement = this.props.element.getSettings(\"react_element\");\n    this.elementId = this.props.element.getId();\n    this.settings = this.props.element.getSettings();\n    props.element.wrapper = this;\n    this.elementWrapperRef = React.createRef();\n    this.elementRef = React.createRef();\n    if(! isEditor()){\n      appStore.dispatch(addElement(this));\n    }\n  }\n\n  /**\n   * Отлавливаем ошибки\n   * @param error\n   * @param errorInfo\n   */\n  componentDidCatch(error, errorInfo) {\n    this.setState(state => ({\n      ...state,\n      error: error,\n      errorInfo: errorInfo\n    }));\n  }\n\n  /**\n   * Иногда надо обновить элемент (FrontElement)\n   */\n  componentDidMount() {\n    !isEditor() && window?.frontApp?.onWidgetMount();\n    if (_.isFunction(this.props.element.update)) {\n      this.props.element.update();\n      this.props.element.updateFonts();\n    }\n    this.checkElementDisplay();\n  }\n  /**\n   * Подписываемся на обновление store редакса\n   */\n  updateStore = () => {\n    if (this.state.currentModel !== appStore.getState().currentModel) {\n      this.setState(state => ({\n        ...state,\n        currentModel: appStore.getState().currentModel\n      }));\n    }\n    /**\n     * Обновляем пользователя\n     */\n    if (this.state.currentUser !== appStore.getState().currentUser) {\n      this.setState(state => ({\n        ...state,\n        currentModel: appStore.getState().currentUser\n      }));\n    }\n\n    /**\n     * Обновляем currentDataStorage\n     */\n    if (\n      this.state.currentDataStorage !== appStore.getState().currentDataStorage\n    ) {\n      this.setState(state => ({\n        ...state,\n        currentDataStorage: appStore.getState().currentDataStorage\n      }));\n    }\n  };\n\n  /**\n   * Вернет HTMLElement, в котором записаны css стили текущего компонента\n   * @return {null | HTMLElement}\n   */\n  getStylesHTMLElement() {\n    if (!_.get(window, \"stylesModule.stylesContainer.current\")) {\n      return null;\n    }\n\n    return (\n      window.stylesModule.stylesContainer.current.getElementsByClassName(\n        `altrp-styles${this.props.element.getId()}`\n      )[0] || null\n    );\n  }\n\n  /**\n   * Нужно ли обновить отображение обертки элементов\n   * @param {{}} prevProps\n   * @param {{}} prevState\n   */\n  componentDidUpdate(prevProps, prevState) {\n    this.checkElementDisplay();\n    if (\n      appStore.getState().currentModel.getProperty(\"altrpModelUpdated\") &&\n      appStore\n        .getState()\n        .currentDataStorage.getProperty(\"currentDataStorageLoaded\") &&\n      !isEditor() &&\n      this.props.element.getName() === \"section\"\n    ) {\n      let title = appStore.getState().currentTitle;\n      title = replaceContentWithData(title);\n      if (appStore.getState().altrpPage.getProperty(\"title\") !== title) {\n        appStore.dispatch(changeCurrentPageProperty(\"title\", title));\n      }\n      setTitle(title);\n    }\n  }\n\n  /**\n   * Обновить элемент изменив this.state.updateToken\n   */\n  updateElement() {\n    this.setState(state => ({ ...state, updateToken: altrpRandomId() }));\n  }\n\n  /**\n   * Проверка видимости элемента\n   * @param {{}} prevProps\n   * @param {{}} prevState\n   */\n  checkElementDisplay(prevProps, prevState) {\n    /**\n     * @member {FrontElement} element\n     */\n    const { element } = this.props;\n    if (!element.getSettings(\"conditional_other\")) {\n      return;\n    }\n    let conditions = element.getSettings(\"conditions\", []);\n    conditions = conditions.map(c => {\n      const {\n        conditional_model_field: modelField,\n        conditional_other_operator: operator,\n        conditional_other_condition_value: value\n      } = c;\n      return {\n        modelField,\n        operator,\n        value\n      };\n    });\n    let elementDisplay = conditionsChecker(\n      conditions,\n      element.getSettings(\"conditional_other_display\") === \"AND\",\n      this.props.element.getCurrentModel(),\n      true\n    );\n\n    if (this.state.elementDisplay === elementDisplay) {\n      return;\n    }\n\n    this.setState(state => ({\n      ...state,\n      elementDisplay\n    }));\n  }\n\n  /**\n   * Переключает видимость элемента\n   */\n  toggleElementDisplay() {\n    this.setState(state => ({\n      ...state,\n      elementDisplay: !state.elementDisplay\n    }));\n  }\n  /**\n   * Метод для проверки видимости поля формы\n   * @return {boolean}\n   */\n  inputIsDisplay() {\n    const { formsStore } = this.state;\n    const formId = this.props.element.getSettings(\"form_id\", \"\");\n    const logic = this.props.element.getSettings(\n      \"form_condition_display_on\",\n      \"AND\"\n    );\n    const formConditions = this.props.element.getSettings(\n      \"form_conditions\",\n      []\n    );\n    let display = true;\n    formConditions.forEach(c => {\n      if (logic === \"AND\") {\n        display *= altrpCompare(\n          _.get(formsStore, `${formId}.${c.field_id}`),\n          c.value,\n          c.operator\n        );\n      } else {\n        display += altrpCompare(\n          _.get(formsStore, `${formId}.${c.field_id}`),\n          c.value,\n          c.operator\n        );\n      }\n    });\n    return display;\n  }\n\n  render() {\n    const {element} = this.props;\n    const {\n      hide_on_wide_screen,\n      hide_on_desktop,\n      hide_on_laptop,\n      hide_on_tablet,\n      hide_on_big_phone,\n      hide_on_small_phone,\n      hide_on_trigger,\n      isFixed,\n      tooltip_position\n    } = element.settings;\n    let { tooltip_text } = element.settings;\n    let classes = `altrp-element altrp-element${element.getId()} altrp-element_${element.getType()}`;\n    classes += element.getPrefixClasses() + \" \";\n    if (element.getType() === \"widget\") {\n      classes += ` altrp-widget_${element.getName()}`;\n    }\n    if(this.props.element.getResponsiveSetting('css_class')){\n      classes += ` ${replaceContentWithData(\n        this.props.element.getResponsiveSetting('css_class'),\n        this.props.element.getCurrentModel().getData()\n      )} `;\n    }\n    if (hide_on_wide_screen) {\n      classes += \" hide_on_wide_screen\";\n    }\n    if (hide_on_desktop) {\n      classes += \" hide_on_desktop\";\n    }\n    if (hide_on_laptop) {\n      classes += \" hide_on_laptop\";\n    }\n    if (hide_on_tablet) {\n      classes += \" hide_on_tablet\";\n    }\n    if (hide_on_big_phone) {\n      classes += \" hide_on_big_phone\";\n    }\n    if (hide_on_small_phone) {\n      classes += \" hide_on_small_phone\";\n    }\n    if (isFixed) {\n      classes += \" fixed-section\";\n    }\n    if (this.state.errorInfo) {\n      return (\n        <div className=\"altrp-error\" data-eltype={element.getType()}>\n          <h2>Something went wrong.</h2>\n          <details style={{ whiteSpace: \"pre-wrap\" }}>\n            {this.state.error && this.state.error.toString()}\n            <br />\n            {this.state.errorInfo.componentStack}\n          </details>\n        </div>\n      );\n    }\n    const styles = {};\n\n    if (element.getResponsiveSetting(\"layout_column_width\")) {\n      if (\n        Number(element.getResponsiveSetting(\"layout_column_width\"))\n      ) {\n        styles.width =\n          element.getResponsiveSetting(\"layout_column_width\") + \"%\";\n      } else {\n        styles.width = element.getResponsiveSetting(\n          \"layout_column_width\"\n        );\n      }\n    }\n    if (!this.state.elementDisplay) {\n      styles.display = \"none\";\n    }\n    let CSSId = element.getSettings(\"advanced_element_id\", \"\");\n    CSSId = replaceContentWithData(\n      CSSId,\n      element.getCurrentModel().getData()\n    );\n    if (this.CSSId !== CSSId) {\n      this.CSSId = CSSId;\n    }\n    let ContentComponent = frontElementsManager.getComponentClass(\n      element.getName()\n    );\n    const content = React.createElement(ContentComponent, {\n      ref: this.elementRef,\n      rootElement: this.props.rootElement,\n      ElementWrapper: this.props.ElementWrapper,\n      element: element,\n      children: element.getChildren(),\n      match: this.props.match,\n      currentModel: this.props.currentModel,\n      currentUser: this.props.currentUser,\n      currentDataStorage: this.props.currentDataStorage,\n      altrpresponses: this.props.altrpresponses,\n      formsStore: this.props.formsStore,\n      elementDisplay: this.state.elementDisplay,\n      altrpPageState: this.props.altrpPageState,\n      altrpMeta: this.props.altrpMeta,\n      updateToken: this.state.updateToken,\n      currentScreen: this.props.currentScreen,\n      baseRender: this.props.baseRender,\n      history: this.props.history,\n      appStore\n    });\n    if (element.getTemplateType() === \"email\") {\n      if (!this.state.elementDisplay) {\n        return null;\n      }\n      return <>{content}</>;\n    }\n\n    let WrapperComponent = ElementWrapperDivComponent;\n    switch (element.getName()) {\n      case \"nav\":\n        WrapperComponent = NavComponent;\n        break;\n    }\n\n    tooltip_text = replaceContentWithData(\n      tooltip_text,\n      element.getCurrentModel().getData()\n    );\n\n    const wrapperProps = {\n      className: classes,\n      ref: this.elementWrapperRef,\n      elementId: this.elementId,\n      settings: this.settings,\n      style: styles,\n      id: this.CSSId,\n    };\n    if (\n      this.reactElement ||\n      DEFAULT_REACT_ELEMENTS.indexOf(element.getName()) !== -1\n    ) {\n      wrapperProps[\"data-react-element\"] = element.getId();\n    }\n    if(! _.isEmpty(element.getResponsiveSetting('wrapper_click_actions'))){\n      wrapperProps[\"data-altrp-wrapper-click-actions\"] = element.getId();\n    }\n    if(! _.isEmpty(element.getResponsiveSetting('sticky'))){\n      wrapperProps[\"data-altrp-sticky\"] = element.getResponsiveSetting('sticky');\n      wrapperProps[\"data-altrp-sticky-spacing\"] = element.getResponsiveSetting('st_spacing');\n      wrapperProps[\"data-margin-top\"] = element.getResponsiveSetting('st_spacing') || 0;\n    }\n    wrapperProps[\"data-altrp-id\"] = element.getId();\n    return  (\n      <WrapperComponent {...wrapperProps} element={element.getId()}>\n        {content}\n        {tooltip_text && (\n          <AltrpTooltip position={tooltip_position}>\n            {tooltip_text}\n          </AltrpTooltip>\n        )}\n      </WrapperComponent>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    altrpresponses: state.altrpresponses,\n    formsStore: state.formsStore,\n    currentDataStorage: state.currentDataStorage,\n    currentModel: state.currentModel,\n    currentUser: state.currentUser,\n    altrpMeta: state.altrpMeta,\n    altrpPageState: state.altrpPageState,\n    currentScreen: state.currentScreen\n  };\n}\nlet _export;\nif(window['h-altrp']){\n  _export = ElementWrapper;\n} else {\n  _export = withRouter(ElementWrapper)\n}\nexport default window.reactRedux.connect(mapStateToProps, null, null, {\n  forwardRef: true\n})(_export);\n","export const ADD_ELEMENT = 'ADD_ELEMENT';\r\nexport const CLEAR_ELEMENTS = 'CLEAR_ELEMENTS';\r\n\r\n/**\r\n *\r\n * @param {React.Component}elementComponent\r\n * @return {{}} - {\r\n *     type: {string},\r\n *     sectionComponent: {React.Component},\r\n *   }\r\n */\r\nexport function addElement(elementComponent) {\r\n  return {\r\n    type: ADD_ELEMENT,\r\n    elementComponent\r\n  };\r\n}\r\n\r\n/**\r\n * Перед загрузкой новых данных, старые удаляем\r\n * @return {{type: string}}\r\n */\r\nexport function clearElements() {\r\n  return {\r\n    type: CLEAR_ELEMENTS,\r\n  };\r\n}\r\n\r\n"],"sourceRoot":""}