{"version":3,"sources":["webpack:///./resources/modules/editor/src/js/components/altrp-image/Skeleton.js","webpack:///./resources/modules/editor/src/js/components/altrp-image/ImagePlaceholder.js","webpack:///./resources/modules/editor/src/js/components/altrp-image/AltrpImage.js","webpack:///./resources/modules/editor/src/js/components/template-loader/TemplateLoader.js","webpack:///./resources/modules/front-app/src/js/components/FrontPopupWrapper.js","webpack:///./resources/modules/front-app/src/js/components/altrp-offcanvas/AltrpOffcanvas.js","webpack:///./resources/modules/front-app/src/js/components/FrontPopup.js"],"names":["defaultBaseColor","SkeletonSpan","styled","duration","delay","keyframes","Math","floor","undefined","color","highlightColor","props","className","_","isNumber","width","settings","aspect_ratio_size","getResponsiveSetting","Number","height","indexOf","style","custom_aspect","isString","mediaWidth","mediaHeight","window","altrpHelpers","isEditor","isSSR","renderAsset","AltrpImage","imageRef","React","createRef","visible","element","lazy","altrpImageLazy","state","update","timeoutId","setTimeout","setState","clearTimeout","this","prevProps","prevState","current","getRoot","popupGUID","popupTrigger","popupID","scrollPosition","scroller","mainScrollbars","document","querySelector","checkElementInViewBox","media","image","noDefault","placeholderStyles","File","default","Object","keys","length","url","name","assetType","background","placeholder","main_color","ref","getSettings","altrpSkeletonColor","altrpSkeletonHighlightColor","cloneElement","id","Fragment","Component","reactRedux","connect","TemplateLoader","templateComponent","templateLoader","frontElementsFabric","ElementWrapper","loadTemplate","templateId","loadParsedTemplate","cardModel","AltrpModel","setCardModel","createElement","componentClass","children","isFunction","onLoad","div","styles","layout_bg","get","width_popup_layout","size","unit","content_position_popup_layout","height_custom_popup_layout","sliderStyled","close_pa","dimensionsControllerToStyles","close_right","close_top","close_c","colorPropertyStyled","icon_fill","time_offcanvas","elementId","template","getId","show","offcanvasRef","offcanvasContentRef","bind","hide","hideButton","mainContent","getElementsByClassName","addEventListener","animations_offcanvas","direction_offcanvas","left","e","path","includes","close","hideAnimation","removeEventListener","classes","classesWrapper","content","rootElement","close_cursor_offcanvas","overflow_visible_offcanvas","closeButton","switcher_close_button_popup_layout","popup_close_icon_alignment","onClick","popup_close_icon","ReactDOM","autoHide","autoHideTimeout","autoHideDuration","universal","getElementById","iconsManager","FrontPopup","isVisible","parseData","data","page","models","isShownOnScroll","getContent","closePopup","rootElementSettings","popup_close_icon_width_size","popup_close_icon_height_size","rootElementId","close_context","push","overlayCondition","height_popup_layout","horizontal_position_popup_layout","vertical_position_popup_layout","closeButtonCondition","renderIcon","popup","join","stopPropagation","renderThumbHorizontal","renderTrackHorizontal","renderTrackVertical","AltrpOffcanvas","dispatch","togglePopup"],"mappings":"qOAEaA,EAAmB,OAmB1BC,EAAeC,UAAH,4SAfe,SAACC,EAAUC,GAAX,OAAqBC,QAApB,IAAD,0IAK/BD,EAAQ,EAAR,UACOE,KAAKC,MAAO,GAAKJ,EAAWC,GAAUD,EAAW,KADxD,iEAIIK,MAQgB,gBAAEC,EAAF,EAAEA,MAAF,gBAAcA,GAAST,MAGA,YAA2B,IAAzBU,EAAyB,EAAzBA,eAAgBD,EAAS,EAATA,MAC3D,gBAAUA,GAAST,EAAnB,aAAwCU,GAvBP,UAuBjC,aAAoFD,GAAST,MAUjG,EADiB,SAACW,GAAD,OAAW,2BAAKC,UAAWD,EAAMC,WAAW,oBAACX,GAAD,UAAkBU,EAAlB,CAAyBC,UAAU,4B,WC8BhG,EA/DyBV,SAAH,kWAIZ,SAAAS,GACR,OAAIE,EAAEC,SAASH,EAAMI,OACZJ,EAAMI,MAAQ,KAEhBJ,EAAMI,MAAQJ,EAAMI,MAAQ,UAEnC,SAACJ,GACD,IAAOK,EAAYL,EAAZK,SACDC,GAAoBC,0BAAqBF,EAAU,qBACzD,OAAiC,IAA9BG,OAAOF,IAAkD,WAAtBA,GAAiCE,OAAOF,GACrE,eAEJN,EAAMS,SAAyC,IAA/BT,EAAMS,OAAOC,QAAQ,KAG1C,iBAAiBV,EAAMS,OAAST,EAAMS,OAAS,OAA/C,KAFS,kBAKW,SAAAT,GAAK,OAAIA,EAAMF,MAAQE,EAAMF,MAAQ,UAMzD,SAACE,GACD,IAAOK,EAAoBL,EAApBK,SAAUI,EAAUT,EAAVS,OACbE,EAAQ,GACNL,GAAoBC,0BAAqBF,EAAU,qBACzD,GAAiC,IAA9BG,OAAOF,GAA0B,CAClC,GAAyB,WAAtBA,EAAgC,CACjC,IAAIM,GAAgBL,0BAAqBF,EAAU,iBACnDO,EAAgBJ,OAAOI,IAAkB,IACzCD,GAAS,eAAJ,OAAmBC,EAAnB,WACGJ,OAAOF,KACfK,GAAS,eAAJ,OAAmBL,EAAnB,OAEP,OAAOK,EAET,OAAIF,GAAUP,EAAEW,SAASJ,KAAoC,IAAzBA,EAAOC,QAAQ,MAG/CF,OAAOR,EAAMc,aAAeN,OAAOR,EAAMe,eAC3CJ,GAAS,eAAJ,OAAoBX,EAAMe,YAAcf,EAAMc,WAAc,IAA5D,OAHEH,K,glBC3CX,MAAuCK,OAAOC,aAAvCC,EAAP,EAAOA,SAAUC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,YAElBC,E,wcACJ,WAAYrB,GAAO,2BACjB,cAAMA,IACDsB,SAAWC,MAAMC,YACtB,IAAIC,GAAU,EAHG,QAIdN,KAAW,UAAEnB,EAAM0B,eAAR,OAAE,EAAenB,qBAAqB,uBAEzCW,MAA6B,IAAflB,EAAM2B,OAEpBX,OAAOY,gBACe,SAA1BZ,OAAOY,iBACP5B,EAAM0B,SACN,UAAE1B,EAAM0B,eAAR,OAAE,EAAenB,qBAAqB,uBAN3CkB,GAAU,GASZ,EAAKI,MAAQ,CACXJ,UACAK,OAAQ,GAEV,EAAKC,UAAYC,YAAW,kBAAM,EAAKC,UAAS,SAAAJ,GAAK,cAASA,GAAT,IAAgBC,OAAQD,EAAMC,gBAAa,KAlB/E,E,mDAwBnB,WACEI,aAAaC,KAAKJ,a,gCASpB,SAAmBK,EAAWC,GAAW,UAIvC,GAHGF,KAAKN,MAAMJ,SACZS,aAAaC,KAAKJ,YAEhBI,KAAKN,MAAMJ,SAAaU,KAAKb,SAASgB,UAGvC,UAAAH,KAAKnC,aAAL,mBAAY0B,eAAZ,mBAAqBa,iBAArB,SAAgCC,WAAaL,KAAKnC,MAAM0B,QAAQa,UAAUC,YAAcL,KAAKnC,MAAMyC,aAAaC,SACjHP,KAAKF,UAAS,SAAAJ,GAAK,cAASA,GAAT,IAAgBJ,SAAS,OAE1CW,EAAUO,iBAAmBR,KAAKnC,MAAM2C,gBAAkBN,EAAUP,SAAWK,KAAKN,MAAMC,QAA9F,CAGA,IAAIc,EAAW5B,OAAO6B,eACjBD,IACHA,EAAWE,SAASC,cAAc,uBAE/BH,IACHA,EAAWE,SAASC,cAAc,eAEhCZ,KAAKb,SAASgB,UAAWU,QAAsBb,KAAKb,SAASgB,QAASM,KACxEV,aAAaC,KAAKJ,WAClBI,KAAKF,UAAS,SAAAJ,GAAK,cAASA,GAAT,IAAgBJ,SAAS,W,oBAIhD,WAAS,MACHwB,EAAQ,EAAH,GAAOd,KAAKnC,MAAMkD,OACpBzB,EAAWU,KAAKN,MAAhBJ,QACD0B,EAAYhB,KAAKnC,MAAMmD,YAAa,EACpCC,EAAoB,GAEtBhD,EAAQ+B,KAAKnC,MAAMI,MAEnBK,EAAS0B,KAAKnC,MAAMS,OACxB,IAAMU,KAAWgB,KAAKnC,MAAMkD,iBAAiBG,KAC3CJ,EAAQd,KAAKnC,MAAMkD,WAEnB,GAAIf,KAAKnC,MAAMsD,QACsB,IAA9BC,OAAOC,KAAKP,GAAOQ,SACtBR,EAAQd,KAAKnC,MAAMsD,aAEhB,IAAIH,EACT,MAAO,GAEPF,EAAMS,IAAMT,EAAMS,KAAO,qBACzBT,EAAMU,KAAOV,EAAMU,MAAQ,OAC3BV,EAAMW,UAAYX,EAAMW,gBAAa/D,EAGzC,IAAIqD,EAAQ9B,EAAY6B,IACrBxB,GAAqC,aAA1BT,OAAOY,kBACnBwB,EAAkBS,WAAa,eAGjC,IAAIC,EAAc,oBAAC,EAAD,CAAkBhE,MAAOmD,EAAMc,WACb9D,UAAW,2BACX+D,IAAK7B,KAAKb,SACVjB,UAAU,UAAA8B,KAAKnC,MAAM0B,eAAX,eAAoBuC,gBAAiB,GAC/CxD,OAAQA,EACRL,MAAOA,EACPO,MAAOyC,EACPtC,WAAYmC,EAAM7C,OAAS,IAC3BW,YAAakC,EAAMxC,QAAU,IACpC,aAA1BO,OAAOY,iBACDH,GAEH,oBAAC,EAAD,CAAUxB,UAAU,iBACVH,MAAOkB,OAAOkD,mBACdnE,eAAgBiB,OAAOmD,8BAGpC1C,GAAWF,MAAM6C,aAAalB,EAAO,CACpCjD,UAAWkC,KAAKnC,MAAMC,UACtBoE,GAAIlC,KAAKnC,MAAMqE,IAAM,KACrB1D,MAAOwB,KAAKnC,MAAMW,SAItB,OAAO,oBAACY,MAAM+C,SAAP,KACJR,O,GAnHkBS,WAsIzB,EAbIrD,IACQG,EAUAL,OAAOwD,WAAWC,SAP5B,SAAyB5C,GACvB,MAAO,CACLc,eAAgBd,EAAMc,eACtBF,aAAcZ,EAAMY,gBAIdzB,CAA2CK,I,0tBCvIjDqD,E,4cACJ,WAAY1E,GAAO,6BACjB,cAAMA,IACD6B,MAAQ,CACX8C,kBAAmB,MAHJ,E,qEAUnB,wGACgC,6EADhC,cACQC,EADR,OACwHtB,QADxH,SAEqC,6EAFrC,cAEQuB,EAFR,OAE0JvB,QAF1J,SAGgC,iGAHhC,OAGQwB,EAHR,OAG8IxB,QAC5InB,KAAKF,UAAS,SAAAJ,GAAK,cAASA,GAAT,IAAgB+C,iBAAgBC,sBAAqBC,qBAAkB3C,KAAK4C,cAJjG,iD,4FAUA,oGACMJ,EAAoB,KAD1B,EAEgDxC,KAAKN,MAA5C+C,EAFT,EAESA,eAAgBC,EAFzB,EAEyBA,qBACpB1C,KAAKnC,MAAMgF,WAHhB,gCAI8BJ,EAAeK,mBAAmB9C,KAAKnC,MAAMgF,YAJ3E,OAIIL,EAJJ,OAKIA,EAAoBE,EAAoBT,aAAaO,GAClDxC,KAAKnC,MAAMkF,qBAAqBC,KACjCR,EAAkBS,aAAajD,KAAKnC,MAAMkF,WAE5CP,EAAoBpD,MAAM8D,cAAcV,EAAkBW,eAAtC,OACZnD,KAAKnC,OADO,IAEduF,SAAUZ,EAAkBY,SAC5B7D,QAASiD,EACTG,eAAgB3C,KAAKN,MAAMiD,kBAbrC,OAkBE3C,KAAKF,UAAS,SAAAJ,GAAK,cAASA,GAAT,IAAgB8C,yBAAnC,iBAAwD,8EACnDzE,EAAEsF,WAAW,EAAKxF,MAAMyF,SAEzB,EAAKzF,MAAMyF,SAHyC,4CAlB1D,iD,6EA+BA,SAAmBrD,EAAWC,GAKzBF,KAAKnC,MAAMgF,aAAe5C,EAAU4C,YACrC7C,KAAK4C,iB,oBAGT,WACE,OAAO,2BAAK9E,UAAU,kBAAkBkC,KAAKN,MAAM8C,uB,GA9D1BJ,WAkE7B,O,iQCpEOhE,EAAwBS,OAAOC,aAA/BV,qBA2HP,EAlH0BS,OAAOzB,OAAOmG,IAAjB,4ZAGrB,YAAgB,IAAdrF,EAAc,EAAdA,SACEsF,EAAS,GACPC,EAAYrF,EAAqBF,EAAU,aAEjD,OADAsF,EAAU,oBAAJ,OAAwBzF,EAAE2F,IAAID,EAAW,QAAS,mBAAlD,QAKJ,YAAgB,IAAdvF,EAAc,EAAdA,SACAsF,EAAS,GAQb,OAPmCpF,EAAqBF,EAAU,8BAI9DA,EAASyF,oBAAsBzF,EAASyF,mBAAmBC,OAC7DJ,GAAU,UAAJ,OAActF,EAASyF,mBAAmBC,KAA1C,YAAkD1F,EAASyF,mBAAmBE,KAA9E,MAEDL,KAIL,YAAgB,IAAdtF,EAAc,EAAdA,SACAsF,EAAS,GACPM,EAAgC1F,EAAqBF,EAAU,iCAKrE,OAJI4F,GAAmE,eAAlCA,IACnCN,GAAU,eAAJ,OAAmBM,EAAnB,KACNN,GAAU,iBAELA,KAIL,YAAgB,IAAdtF,EAAc,EAAdA,SACAsF,EAAS,GACPO,EAA6B3F,EAAqBF,EAAU,8BAC9D6F,IACFP,GAAU,UAAJ,QAAcQ,kBAAaD,GAA3B,MAER,IAAMD,EAAgC1F,EAAqBF,EAAU,iCACjE4F,IACFN,GAAU,mBAAJ,OAAuBM,EAAvB,MAER,IAAMH,EAAqBvF,EAAqBF,EAAU,sBAK1D,OAJIyF,IACFH,GAAU,SAAJ,QAAaQ,kBAAaL,GAA1B,MAGDH,KAYL,YAAgB,IAAdtF,EAAc,EAAdA,SACAsF,EAAS,GACPS,EAAW7F,EAAqBF,EAAU,YAC7C+F,IACDT,IAAUU,kCAA6BD,EAAU,YAEnD,IAAME,EAAc/F,EAAqBF,EAAU,eAChDiG,IACDX,GAAU,SAAJ,QAAaQ,kBAAaG,GAA1B,MAER,IAAMC,EAAYhG,EAAqBF,EAAU,aAC9CkG,IACDZ,GAAU,OAAJ,QAAWQ,kBAAaI,GAAxB,MAER,IAAIC,EAAUjG,EAAqBF,EAAU,WAC1CmG,IACDb,IAAUc,yBAAoBD,EAAS,sBAEzCA,EAAUjG,EAAqBF,EAAU,UAAW,cAElDsF,GAAU,YAAJ,QAAgBc,yBAAoBD,EAAS,oBAA7C,OAERA,EAAUjG,EAAqBF,EAAU,UAAW,aAElDsF,GAAU,WAAJ,QAAec,yBAAoBD,EAAS,oBAA5C,MAER,IAAIE,EAAYnG,EAAqBF,EAAU,aAY/C,OAXGqG,IACDf,GAAU,WAAJ,QAAec,yBAAoBC,EAAW,QAA9C,OAERA,EAAYnG,EAAqBF,EAAU,YAAa,aAEtDsF,GAAU,iBAAJ,QAAqBc,yBAAoBC,EAAW,QAApD,OAERA,EAAYnG,EAAqBF,EAAU,YAAa,cAEtDsF,GAAU,kBAAJ,QAAsBc,yBAAoBC,EAAW,QAArD,MAEDf,KAIL,YAAgB,IAAdtF,EAAc,EAAdA,SACAsF,EAAS,GAIb,OAHItF,EAASsG,gBAAkBtG,EAASsG,eAAeZ,OACrDJ,GAAU,uBAAJ,OAA2BtF,EAASsG,eAAeZ,MAAnD,OAA0D1F,EAASsG,eAAeX,KAAlF,iBAEDL,K,ykBC0FT,E,wcAtME,WAAY3F,GAAO,6BACjB,cAAMA,IAED6B,MAAQ,CACXxB,SAAUL,EAAMK,SAChBuG,UAAW5G,EAAM6G,SAASC,QAC1BC,MAAM,GAGR,EAAKC,aAAezF,cACpB,EAAK0F,oBAAsB1F,cAE3B,EAAKwF,KAAO,EAAKA,KAAKG,MAAV,WACZ,EAAKC,KAAO,EAAKA,KAAKD,MAAV,WACZ,EAAKE,WAAa,EAAKA,WAAWF,MAAhB,WAClB,EAAKG,YAAcvE,SAASwE,uBAAuB,gBAAgB,GAflD,E,mCAkBnB,WACEnF,KAAKF,SAAS,CACZ8E,MAAM,IAERjE,SAASyE,iBAAiB,QAASpF,KAAKgF,MACS,SAA7ChF,KAAKN,MAAMxB,SAASmH,uBAC0B,SAA5CrF,KAAKN,MAAMxB,SAASoH,qBACtBtF,KAAKkF,YAAY1G,MAAMP,MAAQ,MAC/B+B,KAAKkF,YAAY1G,MAAM+G,KAAO,OACuB,UAA5CvF,KAAKN,MAAMxB,SAASoH,sBAC7BtF,KAAKkF,YAAY1G,MAAMP,MAAQ,U,kBAKrC,SAAKuH,GAAG,WACDA,EAAEC,KAAKC,SAAS1F,KAAK8E,oBAAoB3E,WAC5CH,KAAKnC,MAAM8H,QACX3F,KAAKF,UAAS,SAAAJ,GACZ,cACKA,GADL,IAEEkG,eAAe,OAGnB/F,YAAW,WACT,EAAKC,SAAS,CACZ8F,eAAe,EACfhB,MAAM,MAEP,KACHjE,SAASkF,oBAAoB,QAAS7F,KAAKgF,OAE7ChF,KAAKkF,YAAY1G,MAAMP,MAAQ,OAC/B+B,KAAKkF,YAAY1G,MAAM+G,KAAO,M,wBAGhC,WAAa,WACXvF,KAAKF,UAAS,SAAAJ,GACZ,cACKA,GADL,IAEEkG,eAAe,OAGnB/F,YAAW,WACT,EAAKC,SAAS,CACZ8F,eAAe,EACfhB,MAAM,IAERjE,SAASkF,oBAAoB,QAAS,EAAKb,QAC1C,KACHhF,KAAKnC,MAAM8H,U,gCAGb,SAAmB1F,GACbD,KAAKnC,MAAM+G,OAAS3E,EAAU2E,MAChC5E,KAAK4E,S,oBAIT,WACE,IAAIkB,EAAU,kBAEd,OAAQ9F,KAAKN,MAAMxB,SAASoH,qBAC1B,IAAK,OACHQ,GAAW,iDACX,MACF,IAAK,QACHA,GAAW,kDACX,MACF,IAAK,MACHA,GAAW,kDACX,MACF,IAAK,SACHA,GAAW,qDACX,MACF,IAAK,UACHA,GACE,gFACF,MACF,IAAK,WACHA,GACE,iFACF,MACF,IAAK,aACHA,GACE,mFACF,MACF,IAAK,cACHA,GACE,oFAIN,IAAIC,EAAiB,GACrB,OAAQ/F,KAAKN,MAAMxB,SAASmH,sBAC1B,IAAK,OACHU,GAAkB,kCAClB,MACF,IAAK,SACHA,GAAkB,oCAClB,MACF,IAAK,OACHA,GAAkB,kCAClB,MACF,QACEA,GAAkB,mCAGtB,IAAIC,EAAU,GACVC,EAAcjG,KAAKnC,MAAM6G,SAEzBuB,IACFD,EAAU5G,gBAAoB6G,EAAY9C,eAAgB,CACxD5D,QAAS0G,EACT7C,SAAU6C,EAAY7C,YAG1B2C,GAAkB,mCAAJ,OACZ/F,KAAKN,MAAMxB,SAASgI,uBADR,YAGZlG,KAAKN,MAAMxB,SAASiI,2BAChB,2CACA,IAGN,IAAMC,EAAcpG,KAAKN,MAAMxB,SAC5BmI,mCACD,uBACEvI,UACE,8EAC2BkC,KAAKN,MAAMxB,SAASoI,4BAEjDC,QAASvG,KAAKiF,YAEd,gBAAC/F,EAAA,EAAD,CACE6B,MAAOf,KAAKN,MAAMxB,SAASsI,iBAC3BrF,QAAS,CAAEM,UAAW,OAAQD,KAAM,aACpC1D,UAAU,yDAId,GAEF,OACE,gBAAC,WAAD,KACE,uBAAKA,UAAU,sBAAsB+D,IAAK7B,KAAK6E,eAC9C4B,eACC,gBAAC,EAAD,CAAmBvI,SAAU8B,KAAKN,MAAMxB,UACtC,uBACEJ,UACE,2BACCkC,KAAKN,MAAMkF,KAAO,gCAAkC,IADrD,WAEI5E,KAAKN,MAAM+E,UAFf,qBAGCzE,KAAKN,MAAMkG,cACR,0CACA,IACJG,GAGF,uBAAKjI,UAAWgI,EAASjE,IAAK7B,KAAK8E,qBACjC,gBAAC,KAAD,CACE4B,UAAQ,EACRC,gBAAiB,IACjBC,iBAAkB,IAClBC,WAAW,GAEVT,EAEAJ,MAKTrF,SAASmG,eAAe,mB,GAhMJ1E,a,WCT9B,MAA6CvD,OAAOC,aAAvBiI,GAA7B,EAAO3I,qBAAP,EAA6B2I,cAOvBC,E,wcACJ,WAAYnJ,GAAO,6BACjB,cAAMA,IACD8E,eAAiB9E,EAAM8E,gBAAkB9D,OAAO8D,eACrD,EAAKjD,MAAQ,CACXuH,WAAW,EACXhB,YAAapH,OAAO6D,oBAAoBwE,UACtC,EAAKrJ,MAAM6G,SAASyC,KACpB,KACA,EAAKtJ,MAAMuJ,KACX,EAAKvJ,MAAMwJ,QAEbC,iBAAiB,GAEnB,EAAK3B,MAAQ,EAAKA,MAAMZ,MAAX,WAbI,E,gDAgBnB,WACU/E,KAAKN,MAAMuG,YAAYsB,WAAW,gB,gCA0D5C,SAAmBtH,GACjB,IAAMK,EAAiBN,KAAKnC,MAAtByC,aAEN,OAAQN,KAAKN,MAAMuG,YAAYnE,YAAY,aAAc,UACvD,IAAK,QAoCL,IAAK,YAwBCxB,IAAiBL,EAAUK,cAC7BN,KAAKF,SAAS,CACZmH,UACE3G,EAAaC,UAAYxC,EAAE2F,IAAI1D,KAAKnC,MAAO,sB,mBAOvD,WACEmC,KAAKF,SAAS,CAAEmH,WAAW,EAAOK,iBAAiB,IACnDtH,KAAKnC,MAAM2J,e,oBAGb,WAAS,WACCP,EAAcjH,KAAKN,MAAnBuH,UACJnB,EAAU,CAAC,aAETG,EAAcjG,KAAKN,MAAMuG,YAC/BA,EAAY5F,UAAYtC,EAAE2F,IAAI1D,KAAKnC,MAAO,iBAC1C,IAAM4J,EAAsBxB,EAAYnE,YAAY,IAC/C0E,EAAoBP,EAAY7H,qBAAqB,oBACrDsJ,EAA+BzB,EAAY7H,qBAAqB,+BAChEuJ,EAAgC1B,EAAY7H,qBAAqB,gCAIpEuJ,EAHGA,EAG4B,GAAH,OAAMA,EAA6B/D,MAAQ,KAA3C,OAAiD+D,EAA6B9D,MAF3E,OAQ/B6D,EAHGA,EAG2B,GAAH,OAAMA,EAA4B9D,MAAQ,KAA1C,OAAgD8D,EAA4B7D,MAFzE,OAKhC,IAAM+D,EAAgB3B,EAAYtB,QAC5BkD,EAAgB5B,EAAY7H,qBAAsB,iBAExD0H,EAAQgC,KAAR,UAAgBF,EAAhB,eACA,IAAMG,EACJ9B,EAAY7H,qBAAqB,8BAOnC,OALI2J,GACFjC,EAAQgC,KAAK,qBAIPL,EAAoBO,qBAC1B,IAAK,cACHlC,EAAQgC,KAAK,kCACb,MACF,IAAK,SACHhC,EAAQgC,KAAK,2BAKjB,OAAQL,EAAoBQ,kCAC1B,IAAK,OACHnC,EAAQgC,KAAK,6BACb,MACF,IAAK,SACHhC,EAAQgC,KAAK,+BACb,MACF,IAAK,QACHhC,EAAQgC,KAAK,8BACb,MACF,QACEhC,EAAQgC,KAAK,+BAIjB,OAAQL,EAAoBS,gCAC1B,IAAK,MACHpC,EAAQgC,KAAK,0BACb,MACF,IAAK,SACHhC,EAAQgC,KAAK,6BACb,MACF,IAAK,SACHhC,EAAQgC,KAAK,6BACb,MACF,QACEhC,EAAQgC,KAAK,6BAGjB,IAAI9B,EAAU,GACRmC,EACJlC,EAAY7H,qBAAqB,sCAC7BkI,EAA+BmB,EAA/BnB,2BACNA,EAA6BA,GAA8B,QAC3D,IAAMF,EAAc+B,EAClB,8BACErK,UACE,sBACgC,UAA/BwI,EACG,4BACA,4BAENC,QAAS,WACP,EAAKzG,SAAS,CAAEmH,WAAW,IAC3B,EAAKpJ,MAAM2J,eAGb,oBAACtI,EAAA,EAAD,CACE6B,MAAOyF,EACPhH,MAAM,EACNvB,MAAOyJ,EACPpJ,OAAQqJ,EACRxG,QAAS,CACPM,UAAW,OACXD,KAAM,YACND,IAAK,sBAEPzD,UAAU,6BAId,8BACEA,UACE,sBACgC,UAA/BwI,EACG,4BACA,4BAENC,QAAS,WACP,EAAKzG,SAAS,CAAEmH,WAAW,IAC3B,EAAKpJ,MAAM2J,eAGZT,IAAeqB,WAAW,QAAS,CAClCnK,MAAMyJ,EACNpJ,OAAOqJ,EACP7J,UAAW,6BAMXuK,EAAQpB,EACZ,oBAAC,EAAD,CACE/I,SAAUuJ,EACV3J,UAAWgI,EAAQwC,KAAK,KACxB/B,QAAS,WAELwB,IAEA,EAAKjI,SAAS,CAAEmH,WAAW,IAC3B,EAAKpJ,MAAM2J,gBAII,WAAlBK,GAA8BzB,EAC/B,2BACEtI,UAAU,eAEVyI,QAAS,SAAAf,GAAC,OAAIA,EAAE+C,oBAEG,WAAlBV,GAA8BzB,EAE/B,oBAAC,KAAD,CACEM,UAAQ,EACR8B,sBAAuB,SAAA3K,GAAK,OAC1B,qCAASA,EAAT,CAAgBC,UAAU,+BAE5B2K,sBAAuB,kBACrB,2BAAK3K,UAAU,sCAEjB4K,oBAAqB,SAAA7K,GAAK,OACxB,qCAASA,EAAT,CAAgBC,UAAU,qCAE5BA,UAAU,kBACV6I,gBAAiB,IACjBC,iBAAkB,KAElB,2BAAK9I,UAAU,iBACZsB,MAAM8D,cAAc+C,EAAY9C,eAAgB,CAC/C5D,QAAS0G,EACTtD,eAAgB3C,KAAK2C,eACrBS,SAAU6C,EAAY7C,eAM9B,KAEJ,OADa6C,EAAY7H,qBAAqB,eAAiB,SAE7D,IAAK,QACH4H,EAAUqC,EACV,MACF,IAAK,YACHrC,EACE,oBAAC2C,EAAD,CACEhD,MAAO3F,KAAK2F,MACZf,KAAM5E,KAAKN,MAAMuH,UACjB/I,SAAUuJ,EACV/C,SAAUuB,IAKlB,OAAOD,M,GAxVc5D,WAyWzB,EAAevD,OAAOwD,WAAWC,SAbT,SAAA5C,GACtB,MAAO,CACLc,eAAgBd,EAAMc,eACtBF,aAAcZ,EAAMY,iBAIG,SAAAsI,GACzB,MAAO,CACLpB,WAAY,kBAAMoB,GAASC,OAAY,WAI3C,CAA8E7B","file":"1552.72f9cb99aa71307e8d68.bundle.js","sourcesContent":["import styled, { keyframes} from 'styled-components';\r\n\r\nexport const defaultBaseColor = \"#eee\";\r\n\r\nexport const defaultHighlightColor = \"#f5f5f5\";\r\n\r\nexport const skeletonKeyframes = (duration, delay) => keyframes`\r\n  0% {\r\n    background-position: -200px 0;\r\n  }\r\n  ${\r\n  delay > 0\r\n    ? `${Math.floor((1 / (duration + delay)) * duration * 100)}% {\r\n    background-position: calc(200px + 100%) 0;\r\n  }`\r\n    : undefined\r\n}\r\n  100% {\r\n    background-position: calc(200px + 100%) 0;\r\n  }\r\n`;\r\nconst SkeletonSpan = styled.span`\r\n  animation: ${skeletonKeyframes} 1.2s ease-in-out infinite;\r\n  background-color: ${({color})=>`${color || defaultBaseColor}`};\r\n  background-size: 200px 100%;\r\n  background-repeat: no-repeat;\r\n  background-image: linear-gradient(90deg, ${({highlightColor, color})=>{\r\n    return `${color || defaultBaseColor}, ${highlightColor || defaultHighlightColor}, ${color || defaultBaseColor}`;\r\n  }});\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  height: 100%;\r\n`;\r\nconst Skeleton = (props) => <div className={props.className}><SkeletonSpan {...props} className=\"altrp-skeleton__span\"/></div>\r\nexport default Skeleton;\r\n","import styled from 'styled-components';\r\nimport {getResponsiveSetting} from \"../../../../../front-app/src/js/helpers\";\r\n\r\nconst ImagePlaceholder = styled.div`& {\r\n  position: relative;\r\n  max-width: 100%;\r\n  overflow: hidden;\r\n  width:${props => {\r\n  if (_.isNumber(props.width)) {\r\n    return props.width + 'px';\r\n  }\r\n  return props.width ? props.width : '100%'\r\n}};\r\n${(props) => {\r\n  const {settings} = props;\r\n  const aspect_ratio_size = getResponsiveSetting(settings, 'aspect_ratio_size');\r\n  if(Number(aspect_ratio_size) !== 0 && aspect_ratio_size === 'custom'|| Number(aspect_ratio_size)){\r\n    return 'height:auto;'\r\n  }\r\n  if(! props.height || props.height.indexOf('%') !== -1) {\r\n    return 'height:auto;'\r\n  }\r\n  return `height:${props.height ? props.height : 'auto'};`;\r\n}}\r\n\r\n  background-color: ${props => props.color ? props.color : '#fff'};\r\n}\r\n&::before{\r\n  display: block;\r\n  content: '';\r\n  width: 100%;\r\n${(props) => {\r\n  const {settings, height} = props;\r\n  let style = '';\r\n  const aspect_ratio_size = getResponsiveSetting(settings, 'aspect_ratio_size');\r\n  if(Number(aspect_ratio_size) !== 0) {\r\n    if(aspect_ratio_size === 'custom') {\r\n      let custom_aspect = getResponsiveSetting(settings, 'custom_aspect');\r\n      custom_aspect = Number(custom_aspect) || 100;\r\n      style += `padding-top:${custom_aspect}%;`;\r\n    } else if(Number(aspect_ratio_size)){\r\n      style += `padding-top:${aspect_ratio_size}%;`;\r\n    }\r\n    return style;\r\n  }\r\n  if (height && _.isString(height) && height.indexOf('%') === -1) {\r\n    return style;\r\n  }\r\n  if (Number(props.mediaWidth) && Number(props.mediaHeight)) {\r\n    style += `padding-top:${(props.mediaHeight / props.mediaWidth) * 100}%;`\r\n  }\r\n  return style;\r\n}};\r\n}\r\n&& .altrp-skeleton,\r\n&& .altrp-image{\r\n  position:absolute;\r\n  top:0;\r\n  left:0;\r\n  right:0;\r\n  bottom:0;\r\n  height:100%;\r\n  width:100%;\r\n}\r\n`;\r\n\r\nexport default ImagePlaceholder;\r\n","import Skeleton from './Skeleton';\nimport ImagePlaceholder from \"./ImagePlaceholder\";\nimport {checkElementInViewBox} from \"../../../../../front-app/src/js/helpers/elements\";\nconst {isEditor, isSSR, renderAsset} = window.altrpHelpers;\n\nclass AltrpImage extends Component {\n  constructor(props) {\n    super(props);\n    this.imageRef = React.createRef();\n    let visible = true;\n    if(isSSR() && ! props.element?.getResponsiveSetting('lazyload_disable')){\n      visible = false;\n    } else if (isEditor() || props.lazy === false) {\n\n    } else if (window.altrpImageLazy\n        && window.altrpImageLazy !== 'none'\n        && props.element\n        && ! props.element?.getResponsiveSetting('lazyload_disable')) {\n      visible = false;\n    }\n    this.state = {\n      visible,\n      update: 0,\n    };\n    this.timeoutId = setTimeout(() => this.setState(state => ({...state, update: state.update++})), 500);\n  }\n\n  /**\n   * очищаем обновление\n   */\n  componentWillUnmount() {\n    clearTimeout(this.timeoutId);\n  }\n\n  /**\n   * Проверим нужно ли обновить видимость\n   * @param {{}} prevProps\n   * @param {{}} prevState\n   */\n\n  componentDidUpdate(prevProps, prevState) {\n    if(this.state.visible){\n      clearTimeout(this.timeoutId);\n    }\n    if (this.state.visible || ! this.imageRef.current) {\n      return;\n    }\n    if(this.props?.element?.getRoot()?.popupGUID && this.props.element.getRoot().popupGUID === this.props.popupTrigger.popupID){\n      this.setState(state => ({...state, visible: true}));\n    }\n    if (prevProps.scrollPosition === this.props.scrollPosition && prevState.update === this.state.update) {\n      return;\n    }\n    let scroller = window.mainScrollbars;\n    if(! scroller){\n      scroller = document.querySelector('.front-app-content');\n    }\n    if(! scroller){\n      scroller = document.querySelector('.front-app');\n    }\n    if (this.imageRef.current && checkElementInViewBox(this.imageRef.current, scroller)) {\n      clearTimeout(this.timeoutId);\n      this.setState(state => ({...state, visible: true}));\n    }\n  }\n\n  render() {\n    let media = {...this.props.image};\n    const {visible} = this.state;\n    const noDefault = this.props.noDefault || false;\n    const placeholderStyles = {};\n\n    let width = this.props.width;\n\n    let height = this.props.height;\n    if (! isSSR() && this.props.image instanceof File) {\n      media = this.props.image\n    } else {\n      if (this.props.default) {\n        if ((Object.keys(media).length === 0)) {\n          media = this.props.default;\n        }\n      } else if (noDefault) {\n        return \"\"\n      } else {\n        media.url = media.url || '/img/nullImage.png';\n        media.name = media.name || 'null';\n        media.assetType = media.assetType || undefined;\n      }\n    }\n    let image = renderAsset(media);\n    if(visible || window.altrpImageLazy === 'skeleton'){\n      placeholderStyles.background = 'transparent';\n    }\n\n    let placeholder = <ImagePlaceholder color={media.main_color}\n                                        className={'altrp-image-placeholder '}\n                                        ref={this.imageRef}\n                                        settings={this.props.element?.getSettings() || {}}\n                                        height={height}\n                                        width={width}\n                                        style={placeholderStyles}\n                                        mediaWidth={media.width || 100}\n                                        mediaHeight={media.height || 75}>\n      {window.altrpImageLazy === 'skeleton'\n        && ! visible\n        &&\n          <Skeleton className=\"altrp-skeleton\"\n                    color={window.altrpSkeletonColor}\n                    highlightColor={window.altrpSkeletonHighlightColor}/>\n\n      }\n      {visible && React.cloneElement(image, {\n        className: this.props.className,\n        id: this.props.id || null,\n        style: this.props.style,\n      })}\n      </ImagePlaceholder>;\n\n    return <React.Fragment>\n      {placeholder}\n    </React.Fragment>\n  }\n}\n\nlet _export;\nif (isEditor()) {\n  _export = AltrpImage;\n} else {\n\n  function mapStateToProps(state) {\n    return {\n      scrollPosition: state.scrollPosition,\n      popupTrigger: state.popupTrigger,\n    };\n  }\n\n  _export = window.reactRedux.connect(mapStateToProps)(AltrpImage)\n}\nexport default _export;\n","import AltrpModel from \"../../classes/AltrpModel\";\r\n\r\nclass TemplateLoader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      templateComponent: null,\r\n    };\r\n  }\r\n  /**\r\n   * Загрузим необходимые модули\r\n   * @return {Promise<void>}\r\n   */\r\n  async componentDidMount() {\r\n    const templateLoader = (await import(/* webpackChunkName: 'TemplateLoader' */\"../../classes/modules/TemplateLoader\")).default;\r\n    const frontElementsFabric = (await import( /* webpackChunkName: 'FrontElementsFabric' */\"../../../../../front-app/src/js/classes/FrontElementsFabric\")).default;\r\n    const ElementWrapper = (await import( /* webpackChunkName: 'ElementWrapper' */\"../../../../../front-app/src/js/components/ElementWrapper\")).default;\r\n    this.setState(state => ({...state, templateLoader, frontElementsFabric, ElementWrapper}), this.loadTemplate);\r\n  }\r\n  /**\r\n   * Загрузим шаблон\r\n   * @return {Promise<void>}\r\n   */\r\n  async loadTemplate(){\r\n    let templateComponent = null;\r\n    const {templateLoader, frontElementsFabric} = this.state;\r\n    if(this.props.templateId){\r\n      templateComponent = await templateLoader.loadParsedTemplate(this.props.templateId);\r\n      templateComponent = frontElementsFabric.cloneElement(templateComponent);\r\n      if(this.props.cardModel instanceof AltrpModel){\r\n        templateComponent.setCardModel(this.props.cardModel);\r\n      }\r\n      templateComponent = React.createElement(templateComponent.componentClass,\r\n          {...this.props,\r\n            children: templateComponent.children,\r\n            element: templateComponent,\r\n            ElementWrapper: this.state.ElementWrapper\r\n          });\r\n    }\r\n\r\n\r\n    this.setState(state => ({...state, templateComponent}), async () => {\r\n      if(_.isFunction(this.props.onLoad)) {\r\n        // await delay(50);\r\n        this.props.onLoad();\r\n      };\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Обновление компонента\r\n   * @param {{}} prevProps\r\n   * @param {{}} prevState\r\n   */\r\n  componentDidUpdate(prevProps, prevState) {\r\n\r\n    /**\r\n     * Проверим обновилось ли ИД шаблона\r\n     */\r\n    if(this.props.templateId !== prevProps.templateId){\r\n      this.loadTemplate();\r\n    }\r\n  }\r\n  render() {\r\n    return <div className=\"inner-template\">{this.state.templateComponent}</div>;\r\n  }\r\n}\r\n\r\nexport default TemplateLoader\r\n","const {getResponsiveSetting} = window.altrpHelpers;\nimport {\n  shadowControllerToStyles,\n  dimensionsControllerToStyles,\n  sliderStyled,\n  colorPropertyStyled\n} from '../helpers/styles';\n\n\nconst FrontPopupWrapper = window.styled.div`\n&{\n  overflow: hidden;\n${({settings}) => {\n  let styles = \"\";\n  const layout_bg = getResponsiveSetting(settings, 'layout_bg')\n  styles += `background-color:${_.get(layout_bg, 'color', 'rgba(0,0,0,0.7)')};`\n  return styles\n}\n}\n& .popup-content {\n  ${({settings}) => {\n  let styles = \"\";\n  const height_custom_popup_layout = getResponsiveSetting(settings, 'height_custom_popup_layout')\n  if (height_custom_popup_layout) {\n\n  }\n  if (settings.width_popup_layout && settings.width_popup_layout.size)\n    styles += `width: ${settings.width_popup_layout.size} ${settings.width_popup_layout.unit};`;\n\n  return styles;\n}}\n}\n& .popup-window > .popup-scrollbar > div{\n  ${({settings}) => {\n  let styles = \"\";\n  const content_position_popup_layout = getResponsiveSetting(settings, 'content_position_popup_layout')\n  if (content_position_popup_layout && content_position_popup_layout !== 'flex-start') {\n    styles += `align-items:${content_position_popup_layout};`\n    styles += `display:flex;`\n  }\n  return styles;\n}}\n}\n&& .popup-window{\n  ${({settings}) => {\n  let styles = \"\";\n  const height_custom_popup_layout = getResponsiveSetting(settings, 'height_custom_popup_layout')\n  if (height_custom_popup_layout) {\n    styles += `height:${sliderStyled(height_custom_popup_layout)};`\n  }\n  const content_position_popup_layout = getResponsiveSetting(settings, 'content_position_popup_layout')\n  if (content_position_popup_layout) {\n    styles += `justify-content:${content_position_popup_layout};`\n  }\n  const width_popup_layout = getResponsiveSetting(settings, 'width_popup_layout')\n  if (width_popup_layout) {\n    styles += `width:${sliderStyled(width_popup_layout)};`\n  }\n\n  return styles;\n}}\n  max-height: 100%;\n  max-width: 100%;\n}\n& .popup-close-button .altrp-image-placeholder svg{\n  width: 100%;\n  height: 100%;\n}\n&&& .popup-close-button{\n  transform: translate(50%, -50%);\n  padding: 0;\n  ${({settings}) => {\n  let styles = ''\n  const close_pa = getResponsiveSetting(settings, 'close_pa')\n  if(close_pa){\n    styles += dimensionsControllerToStyles(close_pa, 'padding')\n  }\n  const close_right = getResponsiveSetting(settings, 'close_right')\n  if(close_right){\n    styles += `right:${sliderStyled(close_right)};`\n  }\n  const close_top = getResponsiveSetting(settings, 'close_top')\n  if(close_top){\n    styles += `top:${sliderStyled(close_top)};`\n  }\n  let close_c = getResponsiveSetting(settings, 'close_c');\n  if(close_c){\n    styles += colorPropertyStyled(close_c, 'background-color')\n  }\n  close_c = getResponsiveSetting(settings, 'close_c', '.active');\n  if(close_c){\n    styles += `&:active{${colorPropertyStyled(close_c, 'background-color')}}`\n  }\n  close_c = getResponsiveSetting(settings, 'close_c', ':hover');\n  if(close_c){\n    styles += `&:hover{${colorPropertyStyled(close_c, 'background-color')}}`\n  }\n  let icon_fill = getResponsiveSetting(settings, 'icon_fill');\n  if(icon_fill){\n    styles += `& svg *{${colorPropertyStyled(icon_fill, 'fill')}}`\n  }\n  icon_fill = getResponsiveSetting(settings, 'icon_fill', ':hover');\n  if(icon_fill){\n    styles += `&:hover svg *{${colorPropertyStyled(icon_fill, 'fill')}}`\n  }\n  icon_fill = getResponsiveSetting(settings, 'icon_fill', '.active');\n  if(icon_fill){\n    styles += `&:active svg *{${colorPropertyStyled(icon_fill, 'fill')}}`\n  }\n  return styles;\n}\n}\n& .altrp-offcanvas {\n  ${({settings}) => {\n  let styles = '';\n  if (settings.time_offcanvas && settings.time_offcanvas.size) {\n    styles += `animation-duration: ${settings.time_offcanvas.size}${settings.time_offcanvas.unit} !important;`\n  }\n  return styles;\n}}\n}\n`\n\nexport default FrontPopupWrapper;\n","import { isEditor } from \"../../helpers\";\r\nimport \"./altrp-offcanvas.scss\";\r\nimport TemplateLoader from \"../../../../../editor/src/js/components/template-loader/TemplateLoader\";\r\nimport ReactDOM from \"react-dom\";\r\nimport React, { Component } from \"react\";\r\nimport AltrpImage from \"../../../../../editor/src/js/components/altrp-image/AltrpImage\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport FrontPopupWrapper from \"../FrontPopupWrapper\";\r\n\r\nclass OffcanvasWidget extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      settings: props.settings,\r\n      elementId: props.template.getId(),\r\n      show: false\r\n    };\r\n\r\n    this.offcanvasRef = React.createRef();\r\n    this.offcanvasContentRef = React.createRef();\r\n\r\n    this.show = this.show.bind(this);\r\n    this.hide = this.hide.bind(this);\r\n    this.hideButton = this.hideButton.bind(this);\r\n    this.mainContent = document.getElementsByClassName(\"main-content\")[0];\r\n  }\r\n\r\n  show() {\r\n    this.setState({\r\n      show: true\r\n    });\r\n    document.addEventListener(\"click\", this.hide);\r\n    if (this.state.settings.animations_offcanvas === \"push\") {\r\n      if (this.state.settings.direction_offcanvas === \"left\") {\r\n        this.mainContent.style.width = \"70%\";\r\n        this.mainContent.style.left = \"30%\";\r\n      } else if (this.state.settings.direction_offcanvas === \"right\") {\r\n        this.mainContent.style.width = \"70%\";\r\n      }\r\n    }\r\n  }\r\n\r\n  hide(e) {\r\n    if (!e.path.includes(this.offcanvasContentRef.current)) {\r\n      this.props.close();\r\n      this.setState(state => {\r\n        return {\r\n          ...state,\r\n          hideAnimation: true\r\n        };\r\n      });\r\n      setTimeout(() => {\r\n        this.setState({\r\n          hideAnimation: false,\r\n          show: false\r\n        });\r\n      }, 200);\r\n      document.removeEventListener(\"click\", this.hide);\r\n    }\r\n    this.mainContent.style.width = \"100%\";\r\n    this.mainContent.style.left = \"0\";\r\n  }\r\n\r\n  hideButton() {\r\n    this.setState(state => {\r\n      return {\r\n        ...state,\r\n        hideAnimation: true\r\n      };\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({\r\n        hideAnimation: false,\r\n        show: false\r\n      });\r\n      document.removeEventListener(\"click\", this.hide);\r\n    }, 200);\r\n    this.props.close();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.show !== prevProps.show) {\r\n      this.show();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let classes = \"altrp-offcanvas\";\r\n\r\n    switch (this.state.settings.direction_offcanvas) {\r\n      case \"left\":\r\n        classes += \" altrp-offcanvas-left altrp-offcanvas-vertical\";\r\n        break;\r\n      case \"right\":\r\n        classes += \" altrp-offcanvas-right altrp-offcanvas-vertical\";\r\n        break;\r\n      case \"top\":\r\n        classes += \" altrp-offcanvas-top altrp-offcanvas-horizontal\";\r\n        break;\r\n      case \"bottom\":\r\n        classes += \" altrp-offcanvas-bottom altrp-offcanvas-horizontal\";\r\n        break;\r\n      case \"topLeft\":\r\n        classes +=\r\n          \" altrp-offcanvas-top-left altrp-offcanvas-horizontal altrp-offcanvas-vertical\";\r\n        break;\r\n      case \"topRight\":\r\n        classes +=\r\n          \" altrp-offcanvas-top-right altrp-offcanvas-horizontal altrp-offcanvas-vertical\";\r\n        break;\r\n      case \"bottomLeft\":\r\n        classes +=\r\n          \" altrp-offcanvas-bottom-left altrp-offcanvas-horizontal altrp-offcanvas-vertical\";\r\n        break;\r\n      case \"bottomRight\":\r\n        classes +=\r\n          \" altrp-offcanvas-bottom-right altrp-offcanvas-horizontal altrp-offcanvas-vertical\";\r\n        break;\r\n    }\r\n\r\n    let classesWrapper = \"\";\r\n    switch (this.state.settings.animations_offcanvas) {\r\n      case \"push\":\r\n        classesWrapper += \" altrp-offcanvas-animation-push\";\r\n        break;\r\n      case \"reveal\":\r\n        classesWrapper += \" altrp-offcanvas-animation-reveal\";\r\n        break;\r\n      case \"none\":\r\n        classesWrapper += \" altrp-offcanvas-animation-none\";\r\n        break;\r\n      default:\r\n        classesWrapper += \" altrp-offcanvas-animation-slide\";\r\n    }\r\n\r\n    let content = \"\";\r\n    let rootElement = this.props.template;\r\n\r\n    if (rootElement) {\r\n      content = React.createElement(rootElement.componentClass, {\r\n        element: rootElement,\r\n        children: rootElement.children\r\n      });\r\n    }\r\n    classesWrapper += ` altrp-offcanvas-wrapper-cursor-${\r\n      this.state.settings.close_cursor_offcanvas\r\n    } ${\r\n      this.state.settings.overflow_visible_offcanvas\r\n        ? \"altrp-offcanvas-wrapper-overflow-visible\"\r\n        : \"\"\r\n    }`;\r\n\r\n    const closeButton = this.state.settings\r\n      .switcher_close_button_popup_layout ? (\r\n      <div\r\n        className={\r\n          \"altrp-offcanvas-button popup-close-button\" +\r\n          ` altrp-offcanvas-button-${this.state.settings.popup_close_icon_alignment}`\r\n        }\r\n        onClick={this.hideButton}\r\n      >\r\n        <AltrpImage\r\n          image={this.state.settings.popup_close_icon}\r\n          default={{ assetType: \"icon\", name: \"deleteOne\" }}\r\n          className=\"altrp-offcanvas-button-icon popup-close-button-icon\"\r\n        />\r\n      </div>\r\n    ) : (\r\n      \"\"\r\n    );\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"altrp-offcanvas-ref\" ref={this.offcanvasRef} />\r\n        {ReactDOM.createPortal(\r\n          <FrontPopupWrapper settings={this.state.settings}>\r\n            <div\r\n              className={\r\n                \"altrp-offcanvas-wrapper\" +\r\n                (this.state.show ? \" altrp-offcanvas-wrapper-show\" : \"\") +\r\n                ` ${this.state.elementId}-altrp-offcanvas` +\r\n                (this.state.hideAnimation\r\n                  ? \" altrp-offcanvas-wrapper-animation-hide\"\r\n                  : \"\") +\r\n                classesWrapper\r\n              }\r\n            >\r\n              <div className={classes} ref={this.offcanvasContentRef}>\r\n                <Scrollbars\r\n                  autoHide\r\n                  autoHideTimeout={1000}\r\n                  autoHideDuration={200}\r\n                  universal={true}\r\n                >\r\n                  {closeButton}\r\n\r\n                  {content}\r\n                </Scrollbars>\r\n              </div>\r\n            </div>\r\n          </FrontPopupWrapper>,\r\n          document.getElementById(\"front-app\")\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OffcanvasWidget;\r\n","const {getResponsiveSetting, iconsManager} = window.altrpHelpers\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport AltrpOffcanvas from \"./altrp-offcanvas/AltrpOffcanvas\";\nimport { togglePopup } from \"../store/popup-trigger/actions\";\nimport AltrpImage from \"../../../../editor/src/js/components/altrp-image/AltrpImage\";\nimport FrontPopupWrapper from \"./FrontPopupWrapper\";\n\nclass FrontPopup extends Component {\n  constructor(props) {\n    super(props);\n    this.ElementWrapper = props.ElementWrapper || window.ElementWrapper;\n    this.state = {\n      isVisible: false,\n      rootElement: window.frontElementsFabric.parseData(\n        this.props.template.data,\n        null,\n        this.props.page,\n        this.props.models\n      ),\n      isShownOnScroll: false\n    };\n    this.close = this.close.bind(this);\n  }\n\n  componentDidMount() {\n    switch (this.state.rootElement.getContent(\"type_popup\")) {\n      case \"popup\":\n        // const { on_page_load, on_click, inactivity, on_exit, to_element } = _.get(this.props, 'template.triggers.data', {});\n\n        // if (on_page_load || on_page_load === 0) {\n        //   setTimeout(() => this.setState({ isVisible: true }), on_page_load * 1000)\n        // }\n        //\n        // if (on_click) {\n        //   this.clickCounter = 0;\n        //   document.addEventListener('click', () => {\n        //     this.clickCounter += 1;\n        //     if (this.clickCounter === +on_click) {\n        //       this.clickCounter = 0;\n        //       this.setState({ isVisible: true });\n        //     }\n        //   })\n        // }\n        //\n        // if (inactivity) {\n        //   this.inactivityTimeout = setTimeout(() => this.setState({ isVisible: true }), inactivity * 1000);\n        //\n        //   this.resetTimer = () => {\n        //     clearTimeout(this.inactivityTimeout);\n        //     this.inactivityTimeout = setTimeout(() => this.setState({ isVisible: true }), inactivity * 1000);\n        //   };\n        //\n        //   const events = ['mousedown', 'keydown', 'touchstart'];\n        //   events.forEach(event => {\n        //     document.addEventListener(event, this.resetTimer, true);\n        //   });\n        // }\n        //\n        // if (on_exit) {\n        //   // window.addEventListener('beforeunload', (event) => {\n        //   //   // Отмените событие, как указано в стандарте.\n        //   //   event.preventDefault();\n        //   //   this.setState({ isVisible: true })\n        //   //   // Хром требует установки возвратного значения.\n        //   //   event.returnValue = '';\n        //   // });\n        //   document.addEventListener('mouseleave', () => this.setState({ isVisible: true }))\n        // }\n\n        // if (to_element) {\n        //   const htmlCollection = document.getElementsByClassName(to_element);\n        //   console.log(htmlCollection);\n        //   this.elements = []\n        //   for (let index = 0; index < htmlCollection.length; index++) {\n        //     const element = htmlCollection[index];\n        //     this.elements[index] = getTopPosition(element);\n        //   }\n        //   console.log(this.elements);\n        // }\n        break;\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    let { popupTrigger } = this.props;\n\n    switch (this.state.rootElement.getSettings(\"type_popup\", \"popup\")) {\n      case \"popup\":\n        // if (on_scroll && !isShownOnScroll && on_scroll.size <= this.props.scrollPosition.top * 100) {\n        //   this.setState({ isVisible: true, isShownOnScroll: true });\n        //\n        // }\n        // if (this.resetTimer && this.props.scrollPosition.top !== prevProps.scrollPosition.top) {\n        //\n        //  this.resetTimer();\n        //\n        // }\n        // if (to_element && this.props.scrollPosition.top !== prevProps.scrollPosition.top) {\n        //\n        //  // console.log(this.elements)\n        //\n        //  console.log(this.props.scrollPosition.scrollTop)\n        //  const { scrollTop, clientHeight } = this.props.scrollPosition;\n        //\n        //  for (let index = 0; index < this.elements.length; index++) {\n        //\n        //    const element = this.elements[index];\n        //\n        //     if (isElementTopInViewport(element, scrollTop, clientHeight)) {\n        //\n        //      this.setState({ isVisible: true });\n        //       // this.elements.splice(index, 1);\n        //     }\n        //   }\n\n        // }\n        if (popupTrigger !== prevProps.popupTrigger) {\n          this.setState({\n            isVisible:\n              popupTrigger.popupID === _.get(this.props, \"template.guid\")\n          });\n        }\n        break;\n      case \"offcanvas\":\n        // if (on_scroll && !isShownOnScroll && on_scroll.size <= this.props.scrollPosition.top * 100) {\n        //   this.setState({ isVisible: true, isShownOnScroll: true });\n        // }\n        //\n        // if (this.resetTimer && this.props.scrollPosition.top !== prevProps.scrollPosition.top) {\n        //   this.resetTimer();\n        // }\n\n        // if (to_element && this.props.scrollPosition.top !== prevProps.scrollPosition.top) {\n        //   // console.log(this.elements)\n        //   console.log(this.props.scrollPosition.scrollTop)\n        //   const { scrollTop, clientHeight } = this.props.scrollPosition;\n\n        //   for (let index = 0; index < this.elements.length; index++) {\n        //     const element = this.elements[index];\n\n        //     if (isElementTopInViewport(element, scrollTop, clientHeight)) {\n        //       this.setState({ isVisible: true });\n        //       // this.elements.splice(index, 1);\n        //     }\n        //   }\n\n        // }\n        if (popupTrigger !== prevProps.popupTrigger) {\n          this.setState({\n            isVisible:\n              popupTrigger.popupID === _.get(this.props, \"template.guid\")\n          });\n        }\n        break;\n    }\n  }\n\n  close() {\n    this.setState({ isVisible: false, isShownOnScroll: false });\n    this.props.closePopup();\n  }\n\n  render() {\n    const { isVisible } = this.state;\n    let classes = [`app-popup`];\n    // const { positioning_custom_top } = this.props.template.data.rootElementSettings;\n    const rootElement = this.state.rootElement;\n    rootElement.popupGUID = _.get(this.props, \"template.guid\");\n    const rootElementSettings = rootElement.getSettings(\"\");\n    let  popup_close_icon =  rootElement.getResponsiveSetting('popup_close_icon')\n    let  popup_close_icon_width_size =  rootElement.getResponsiveSetting('popup_close_icon_width_size')\n    let  popup_close_icon_height_size =  rootElement.getResponsiveSetting('popup_close_icon_height_size')\n    if(! popup_close_icon_height_size){\n      popup_close_icon_height_size = '50px'\n    } else {\n      popup_close_icon_height_size = `${popup_close_icon_height_size.size || '0'}${popup_close_icon_height_size.unit}`\n    }\n\n    if(! popup_close_icon_width_size){\n      popup_close_icon_width_size = '50px'\n    } else {\n      popup_close_icon_width_size = `${popup_close_icon_width_size.size || '0'}${popup_close_icon_width_size.unit}`\n    }\n\n    const rootElementId = rootElement.getId();\n    const close_context = rootElement.getResponsiveSetting( 'close_context')\n\n    classes.push(`${rootElementId}-app-popup`);\n    const overlayCondition =\n      rootElement.getResponsiveSetting('overlay_close_popup_layout');\n\n    if (overlayCondition) {\n      classes.push(\"app-popup-overlay\");\n    }\n\n    //height popup\n    switch (rootElementSettings.height_popup_layout) {\n      case \"fitToScreen\":\n        classes.push(\"app-popup-height-fit-to-screen\");\n        break;\n      case \"custom\":\n        classes.push(\"app-popup-height-custom\");\n        break;\n    }\n\n    //horizontal position horizontal_position_popup_layout\n    switch (rootElementSettings.horizontal_position_popup_layout) {\n      case \"left\":\n        classes.push(\"app-popup-horizontal-left\");\n        break;\n      case \"center\":\n        classes.push(\"app-popup-horizontal-center\");\n        break;\n      case \"right\":\n        classes.push(\"app-popup-horizontal-right\");\n        break;\n      default:\n        classes.push(\"app-popup-horizontal-center\");\n    }\n\n    //vertical position vertical_position_popup_layout\n    switch (rootElementSettings.vertical_position_popup_layout) {\n      case \"top\":\n        classes.push(\"app-popup-vertical-top\");\n        break;\n      case \"center\":\n        classes.push(\"app-popup-vertical-center\");\n        break;\n      case \"bottom\":\n        classes.push(\"app-popup-vertical-bottom\");\n        break;\n      default:\n        classes.push(\"app-popup-vertical-center\");\n    }\n\n    let content = \"\";\n    const closeButtonCondition =\n      rootElement.getResponsiveSetting('switcher_close_button_popup_layout');\n    let { popup_close_icon_alignment } = rootElementSettings;\n    popup_close_icon_alignment = popup_close_icon_alignment || \"right\";\n    const closeButton = closeButtonCondition ? (\n      <button\n        className={\n          \"popup-close-button\" +\n          (popup_close_icon_alignment === \"right\"\n            ? \" popup-close-button-right\"\n            : \" popup-close-button-left\")\n        }\n        onClick={() => {\n          this.setState({ isVisible: false });\n          this.props.closePopup();\n        }}\n      >\n        <AltrpImage\n          image={popup_close_icon}\n          lazy={false}\n          width={popup_close_icon_width_size}\n          height={popup_close_icon_height_size}\n          default={{\n            assetType: \"icon\",\n            name: \"deleteOne\",\n            url: \"/img/nullImage.png\"\n          }}\n          className=\"popup-close-button-icon\"\n        />\n      </button>\n    ) : (\n      <button\n        className={\n          \"popup-close-button\" +\n          (popup_close_icon_alignment === \"right\"\n            ? \" popup-close-button-right\"\n            : \" popup-close-button-left\")\n        }\n        onClick={() => {\n          this.setState({ isVisible: false });\n          this.props.closePopup();\n        }}\n      >\n        {iconsManager().renderIcon('times' ,{\n          width:popup_close_icon_width_size,\n          height:popup_close_icon_height_size,\n          className: \"popup-close-button-icon\"\n        })}\n      </button>\n    );\n\n\n    const popup = isVisible ? (\n      <FrontPopupWrapper\n        settings={rootElementSettings}\n        className={classes.join(\" \")}\n        onClick={() => {\n          if (\n            overlayCondition\n          ) {\n            this.setState({ isVisible: false });\n            this.props.closePopup();\n          }\n        }}\n      >\n        {close_context === 'window' && closeButton}\n        <div\n          className=\"popup-window\"\n          // style={{ top: positioning_custom_top.size + positioning_custom_top.unit}}\n          onClick={e => e.stopPropagation()}\n        >\n          {close_context !== 'window' && closeButton}\n\n          <Scrollbars\n            autoHide\n            renderThumbHorizontal={props => (\n              <div {...props} className=\"popup-scrollbar-vertical\" />\n            )}\n            renderTrackHorizontal={() => (\n              <div className=\"popup-scrollbar-track-horizontal\" />\n            )}\n            renderTrackVertical={props => (\n              <div {...props} className=\"popup-scrollbar-track-vertical\" />\n            )}\n            className=\"popup-scrollbar\"\n            autoHideTimeout={1000}\n            autoHideDuration={200}\n          >\n            <div className=\"popup-content\">\n              {React.createElement(rootElement.componentClass, {\n                element: rootElement,\n                ElementWrapper :this.ElementWrapper,\n                children: rootElement.children\n              })}\n            </div>\n          </Scrollbars>\n        </div>\n      </FrontPopupWrapper>\n    ) : null;\n    const type = rootElement.getResponsiveSetting('type_popup') || \"popup\";\n    switch (type) {\n      case \"popup\":\n        content = popup;\n        break;\n      case \"offcanvas\":\n        content = (\n          <AltrpOffcanvas\n            close={this.close}\n            show={this.state.isVisible}\n            settings={rootElementSettings}\n            template={rootElement}\n          />\n        );\n        break;\n    }\n    return content;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    scrollPosition: state.scrollPosition,\n    popupTrigger: state.popupTrigger\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    closePopup: () => dispatch(togglePopup(null))\n  };\n};\n\nexport default window.reactRedux.connect(mapStateToProps, mapDispatchToProps)(FrontPopup);\n"],"sourceRoot":""}