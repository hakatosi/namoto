{"version":3,"sources":["webpack:///./resources/modules/editor/src/js/classes/AltrpModel.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/AccordionComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/AdvancedComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/ButtonComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/CarouselComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/ColumnComponents.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/DatePickerComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/DiagramComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/DividerComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/DropbarWidgetComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/FormComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/GalleryComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/ImageLightboxComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/InputCheckboxComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/InputDateComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/InputRadioComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/InputRangeSliderComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/InputSliderComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/ListComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/MapComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/MapConstructorComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/SectionWidgetComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/TabsSwitcherComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/VideoComponent.js","webpack:///./resources/modules/front-app/src/js/components/helpers/getInputFileStyles.js","webpack:///./resources/modules/front-app/src/js/components/helpers/getInputGalleryStyles.js","webpack:///./resources/modules/front-app/src/js/components/helpers/getInputMultiSelectStyles.js","webpack:///./resources/modules/front-app/src/js/components/helpers/getInputSelectStyles.js","webpack:///./resources/modules/front-app/src/js/components/helpers/getInputTextCommonStyles.js","webpack:///./resources/modules/front-app/src/js/components/helpers/getTemplateStyles.js","webpack:///./resources/modules/front-app/src/js/components/helpers/stylesForTheBreadcrumbs.js","webpack:///./resources/modules/front-app/src/js/components/helpers/stylesForTheHeadingTypeAnimating.js","webpack:///./resources/modules/front-app/src/js/components/helpers/stylesForTheHeadingTypeHeading.js","webpack:///./resources/modules/front-app/src/js/components/helpers/stylesForTheImage.js","webpack:///./resources/modules/front-app/src/js/components/helpers/stylesForTheMenu.js","webpack:///./resources/modules/front-app/src/js/components/helpers/stylesForThePosts.js","webpack:///./resources/modules/front-app/src/js/components/helpers/stylesForTheTable.js","webpack:///./resources/modules/front-app/src/js/components/helpers/stylesForTheTabs.js","webpack:///./resources/modules/front-app/src/js/components/helpers/stylesForTheText.js","webpack:///./resources/modules/front-app/src/js/functions/get-route-styles.js"],"names":["AltrpModel","data","this","cloneDeep","clone","isEmpty","name","defaultValue","get","has","value","getData","set","unset","window","AccordionComponent","settings","styles","getResponsiveSetting","slider","sliderStyled","styledString","AdvancedComponent","size","color","btnStyles","ButtonComponent","stylesInString","backgroundColorActive","colorPropertyStyled","gradientActive","gradientStyled","backgroundImageActive","backgroundImageControllerToStyles","borderTypeActive","simplePropertyStyled","borderWidthActive","borderWidthStyled","borderColorActive","borderRadiusActive","sizeStyled","boxShadowActive","shadowControllerToStyles","typographicActive","typographicControllerToStyles","colorActive","backgroundColorSvgActive","fillColorSvgActive","strokeColorSvgActive","backgroundColorSvg","backgroundColorSvgHover","fillColorSvg","strokeColorSvg","fillColorSvgHover","strokeColorSvgHover","paddingIconRightBtn","dimensionsControllerToStyles","iconRightSizeBtn","iconSizeStyled","paddingIconLeftBtn","iconLeftSizeBtn","paddingIconTopBtn","iconTopSizeBtn","paddingIconBottomBtn","iconBottomSizeBtn","CarouselComponent","globalDefaults","push","altrpHelpers","flexWrap","flexDirection","align","justifyContent","overflow","backgroundColor","gradient","zIndex","borderType","borderWidth","borderColor","borderRadius","boxShadow","backgroundColorH","gradientH","borderTypeH","borderWidthH","borderColorH","borderRadiusH","boxShadowH","marginBottom","marginBottomH","backgroundImage","backgroundPosition","backgroundAttachment","backgroundRepeat","backgroundSizeInUnits","backgroundSize","backgroundImageH","backgroundPositionH","backgroundAttachmentH","backgroundRepeatH","backgroundSizeInUnitsH","backgroundSizeH","margin","padding","undefined","shadowStyled","DatePickerComponent","elementId","DiagramComponent","DividerComponent","DropbarWidgetComponent","FormComponent","background_section_opacity","inputWrapperStyles","width","inputWrapperStyle","containerStyles","containerStyle","fieldStyles","typographic","placeholder_and_value_alignment_position_section","position_z_index","input_position","textarea_resize","justify_options","image_select_item_width","image_select_item_height","image_select_image_fit","image_select_image_position","cross_size","unit","fieldStyle","filedSelect2ControllerStyles","fieldSelect2ControlStyle","imageSelectLabelStyles","imageSelectLabel","fieldSelect2SingleValueStyles","fieldSelect2SingleValueStyle","fieldLabelContainerStyles","label_position_top","label_position_left","label_icon_position","fieldLabelContainerStyle","fieldLabelStyles","fieldLabel","labelIconStyles","iconSize","labelIconStyle","placeholderStyles","placeholderStyle","fieldLabelRequiredStyles","fieldLabelRequired","maskMismatchMessageStyles","id","maskMismatchMessage","select2Options","GalleryComponent","aspectRatio","def","defaultStyled","objectFit","height","opacity","filters","transitionDuration","animationDuration","backgroundSizeInUnit","aspect_ratio_size","parentClass","filtersControllerToStyles","opacityStyled","Number","fieldAlignment","backgroundColorHover","boxShadowHover","fontTypographic","fontColor","fontTypographicHover","fontColorHover","fontTypographicActive","fontColorActive","colorStyled","fieldStylesHover","fieldStyleHover","fieldStylesActive","fieldStyleActive","fieldStylesFocus","fieldStyleFocus","prefix","aligment","dotColor","dotSize","colorPickedHex","colorRGB","r","g","b","a","colorStyledSecond","InputRangeSliderComponent","tr_x","tr_y","thickness","InputSliderComponent","ListComponent","MapComponent","MapConstructorComponent","altrpSectionHover","borderStyle","state","SectionWidgetComponent","childrenLength","verticalAlign","gorizontalAlign","minHeight","altrpSection","altrpSectionColumn","positionTop","positionRight","positionLeft","positionBottom","altrpSectionSecond","altrpSectionSecondHover","altrpBackgroundImage","altrpBackgroundImageHover","altrpSectionBoxed","page_areas","length","altrpSectionSectionBoxed","altrpSectionFull","TabsSwitcherComponent","VideoComponent","getInputFileStyles","alignment","getInputGalleryStyles","columns","v_gap","getInputMultiSelectStyles","getInputMultiSelectPopoverStyles","getInputSelectStyles","button_gradient","getInputSelectPopoverStyles","getInputTextCommonStyles","getTemplateStyles","colorIcon","icon_ml","icon_mr","delimiter","url","delimiter_width","delimiter_height","delimiter_ml","delimiter_mr","font","current_color","current_font","getHeadingTypeAnimatingStyles","justifyContentHeaddingSubHover","marginBottomForHorizontalHover","marginBottomForVerticalHover","marginBottomForRotateHover","typographicAnimating","colorAnimating","typographicAnimatingHover","colorAnimatingHover","typographicNoAnimating","colorNoAnimating","typographicNoAnimatingHover","colorNoAnimatingHover","strokeWidthAnimatingSvg","colorAnimatingSvg","strokeWidthAnimatingSvgHover","colorAnimatingSvgHover","getHeadingTypeHeadingStyles","justifyContentHeaddingSub","textShadowHeaddingSub","textShadowControllerToStyles","typographicHeaddingSub","paddingHeaddingSub","colorHeaddingSub","backgroundColorHeaddingSub","widthHeadingSub","textShadowHeaddingSubHover","typographicHeaddingSubHover","paddingHeaddingSubHover","colorHeaddingSubHover","backgroundColorHeaddingSubHover","widthHeadingSubHover","marginTop","marginTopHover","marginBottomHover","marginRight","marginRightHover","marginLeft","marginLeftHover","textAlignAdvancedWrapper","backgroundColorHeadingAdvanced","colorHeadingAdvanced","paddingHeadingAdvanced","typographicHeadingAdvanced","textShadowHeadingAdvanced","borderTypeHeadingAdvanced","borderWidthHeadingAdvanced","borderColorHeadingAdvanced","borderRadiusHeadingAdvanced","opacityHeadingAdvanced","backgroundColorHeadingAdvancedHover","colorHeadingAdvancedHover","paddingHeadingAdvancedHover","typographicHeadingAdvancedHover","textShadowHeadingAdvancedHover","borderTypeHeadingAdvancedHover","borderWidthHeadingAdvancedHover","borderColorHeadingAdvancedHover","borderRadiusHeadingAdvancedHover","opacityHeadingAdvancedHover","marginBottomForHorizontal","marginBottomForVertical","marginBottomForRotate","textShadow","transform","translateStyled","colorLinkHover","colorHover","typographicHover","textShadowHover","marginHover","paddingHover","zIndexHover","opacityHover","gradientHover","borderTypeHover","borderWidthHover","borderColorHover","borderRadiusHover","transformHover","backgroundImageHover","backgroundPositionHover","backgroundAttachmentHover","backgroundRepeatHover","backgroundSizeInUnitsHover","backgroundSizeHover","renderButton","buttonBg","buttonColor","buttonPadding","border","getPostsStyles","flexDirectionPaginPrev","marginPaginPrev","paddingPaginPrev","colorPaginPrev","typographicPaginPrev","borderTypePaginPrev","borderWidthPaginPrev","borderColorPaginPrev","borderRadiusPaginPrev","boxShadowPaginPrev","flexDirectionPaginPrevHover","marginPaginPrevHover","paddingPaginPrevHover","colorPaginPrevHover","typographicPaginPrevHover","borderTypePaginPrevHover","borderWidthPaginPrevHover","borderColorPaginPrevHover","borderRadiusPaginPrevHover","boxShadowPaginPrevHover","marginPaginPrevSvgImg","marginPaginPrevSvgImgHover","sizePaginPrevSvg","sizePaginPrevSvgHover","heightPaginPrevImg","heightPaginPrevImgHover","fillPaginPrevPath","fillPaginPrevPathHover","flexDirectionPaginNext","marginPaginNext","paddingPaginNext","colorPaginNext","typographicPaginNext","borderTypePaginNext","borderWidthPaginNext","borderColorPaginNext","borderRadiusPaginNext","boxShadowPaginNext","flexDirectionPaginNextHover","marginPaginNextHover","paddingPaginNextHover","colorPaginNextHover","typographicPaginNextHover","borderTypePaginNextHover","borderWidthPaginNextHover","borderColorPaginNextHover","borderRadiusPaginNextHover","boxShadowPaginNextHover","marginPaginNextSvgImg","marginPaginNextSvgImgHover","sizePaginNextSvg","sizePaginNextSvgHover","heightPaginNextImg","heightPaginNextImgHover","fillPaginNextPath","fillPaginNextPathHover","marginPaginCount","backgroundColorPaginCount","paddingPaginCount","marginPaginCountHover","backgroundColorPaginCountHover","paddingPaginCountHover","colorPaginCountPagesItem","colorPaginCountPagesItemHover","marginPaginPagesItem","backgroundColorPaginPagesItem","borderTypePaginPagesItem","borderWidthPaginPagesItem","borderRadiusPaginPagesItem","borderColorPaginPagesItem","boxShadowPaginPagesItem","marginPaginPagesItemHover","backgroundColorPaginPagesItemHover","borderTypePaginPagesItemHover","borderWidthPaginPagesItemHover","borderRadiusPaginPagesItemHover","borderColorPaginPagesItemHover","boxShadowPaginPagesItemHover","colorActivePaginPagesItem","backgroundColorActivePaginPagesItem","borderColorActivePaginPagesItem","colorActivePaginPagesItemHover","backgroundColorActivePaginPagesItemHover","borderColorActivePaginPagesItemHover","typographicPaginPaginPagesItem","typographicPaginPaginPagesItemHover","marginPaginEllipsis","colorPaginEllipsis","typographicPaginEllipsis","marginPaginEllipsisHover","colorPaginEllipsisHover","typographicPaginEllipsisHover","marginPaginGotoPage","paddingPaginGotoPage","colorPaginGotoPage","backgroundColorPaginGotoPage","borderTypePaginGotoPage","borderWidthPaginGotoPage","borderColorPaginGotoPage","borderRadiusPaginGotoPage","boxShadowPaginGotoPage","marginPaginGotoPageHover","paddingPaginGotoPageHover","colorPaginGotoPageHover","backgroundColorPaginGotoPageHover","borderTypePaginGotoPageHover","borderWidthPaginGotoPageHover","borderColorPaginGotoPageHover","borderRadiusPaginGotoPageHover","boxShadowPaginGotoPageHover","paddingPosts","paddingPostsHover","paddingPaginPages","paddingPaginPagesHover","typographicPaginPaginGotoPages","typographicPaginPaginGotoPagesHover","typographicPaginPaginPagesItemCountPrev","typographicPaginPaginPagesItemCountPrevHover","marginPaginSelectSize","marginPaginSelectSizeHover","paddingPaginSelectSizeControl","paddingPaginSelectSizeControlHover","typographicPaginPaginSelectSize","typographicPaginPaginSelectSizeHover","borderTypePaginSelect2Control","borderWidthPaginSelect2Control","borderRadiusPaginSelect2Control","borderColorPaginSelect2Control","boxShadowPaginSelect2Control","colorPaginSelect2Control","backgroundColorPaginSelect2Control","borderTypePaginSelect2ControlHover","borderWidthPaginSelect2ControlHover","borderRadiusPaginSelect2ControlHover","borderColorPaginSelect2ControlHover","boxShadowPaginSelect2ControlHover","colorPaginSelect2ControlHover","backgroundColorPaginSelect2ControlHover","getTableStyles","flexDirectionHover","marginPaginationSvg","marginPaginationSvgHover","iconSizeHover","iconSizeNextImg","iconSizeNextImgHover","iconFillNextPath","iconFillNextPathHover","flexDirectionPaginationPrev","marginPaginationPrev","flexDirectionPaginationPrevHover","marginPaginationPrevHover","marginPrevSvg","iconSizePrevSvg","marginPrevSvgHover","iconSizePrevSvgHover","iconSizePrevImg","iconSizePrevImgHover","iconFillPrevPath","iconFillPrevPathHover","colorReplaceText","typographicReplaceText","colorReplaceTextHover","typographicReplaceTextHover","widthPictureReplacePicture","heightReplacePicture","paddingGroupedColumn","paddingGroupedColumnHover","iconFillTableThPath","iconFillTableThPathHover","iconSizeGroupedColumnSvgImg","iconSizeGroupedColumnSvgImgHover","paddingNotGroupedColumn","paddingNotGroupedColumnHover","iconFillNotGroupedColumnPath","iconFillNotGroupedColumnPathHover","iconSizeNotGroupedColumnSvgImg","iconSizeNotGroupedColumnSvgImgHover","paddingExpandedRow","paddingExpandedRowHover","iconFillExpandedRowPath","iconFillExpandedRowPathHover","iconSizeExpandedRowSvgImg","iconSizeExpandedRowSvgImgHover","paddingNotExpandedRow","paddingNotExpandedRowHover","iconFillNotExpandedRowPath","iconFillNotExpandedRowPathHover","iconSizeNotExpandedRowSvgImg","iconSizeNotExpandedRowSvgImgHover","colorThNthChild","colorThNthChildHover","colorFieldSelect2ControlBtn","backgroundColorFieldSelect2ControlBtn","inputPaddingFieldSelect2ControlBtn","typographicFieldSelect2ControlBtn","borderTypeFieldSelect2ControlBtn","borderWidthFieldSelect2ControlBtn","borderColorFieldSelect2ControlBtn","colorFieldSelect2ControlBtnHover","backgroundColorFieldSelect2ControlBtnHover","inputPaddingFieldSelect2ControlBtnHover","typographicFieldSelect2ControlBtnHover","borderTypeFieldSelect2ControlBtnHover","borderWidthFieldSelect2ControlBtnHover","borderColorFieldSelect2ControlBtnHover","labelPaddingLabel","labelPaddingLabelHover","textAlignTableTh","typographicTableTh","colorTableTh","paddingTableTh","borderTypeTableTh","borderColorTableTh","borderWidthTableTh","backgroundColorTableTh","textAlignTableThHover","typographicTableThHover","colorTableThHover","paddingTableThHover","borderTypeTableThHover","borderColorTableThHover","borderWidthTableThHover","backgroundColorTableThHover","backgroundColorTableHead","backgroundColorTableHeadHover","borderWidthTableThNotFirstChild","marginTopLeftStyled","borderWidthTableThNotFirstChildHover","borderWidthTableTrNotFirstChild","borderWidthTableTrNotFirstChildHover","verticalAlignDivNotAltrpElement","verticalAlignDivNotAltrpElementHover","textAlignTableTd","paddingTableTd","borderTypeTableTd","borderColorTableTd","colorTableTd","typographicTableTd","borderWidthTableTd","textAlignTableTdHover","paddingTableTdHover","borderTypeTableTdHover","borderColorTableTdHover","colorTableTdHover","typographicTableTdHover","borderWidthTableTdHover","colorTableTdA","typographicTableTdA","colorTableTdAHover","typographicTableTdAHover","backgroundColorTbodyBackground","backgroundColorTbodyBackgroundHover","borderWidthTransposeTableTdNot","borderWidthTransposeTableTdNotHover","borderWidthTransposeTableTdNotTd","borderWidthTransposeTableTdNotTdHover","colorTdGrouping","typographicTdGrouping","paddingTdGrouping","colorTdGroupingHover","typographicTdGroupingHover","paddingTdGroupingHover","backgroundColorTbodyTdGrouping","textAlignTbodyTdGrouping","backgroundColorTbodyTdGroupingHover","textAlignTbodyTdGroupingHover","verticalAlignDivNotAltrpElTd","verticalAlignDivNotAltrpElTdHover","iconSizeTdGroupingIconSvg","iconLeftSpaceTdGroupingIconSvg","iconRightSpaceTdGroupingIconSvg","iconTopTranslateTdGroupingIconSvg","iconLeftTranslateTdGroupingIconSvg","iconSizeTdGroupingIconSvgHover","iconLeftSpaceTdGroupingIconSvgHover","iconRightSpaceTdGroupingIconSvgHover","iconTopTranslateTdGroupingIconSvgHover","iconLeftTranslateTdGroupingIconSvgHover","iconFillTdGroupingIconSvgPath","iconFillTdGroupingIconSvgPathHover","paddingTableFootTd","textAlignTableFootTd","backgroundColorTableFootTd","colorTableFootTd","typographicTableFootTd","paddingTableFootTdHover","textAlignTableFootTdHover","backgroundColorTableFootTdHover","colorTableFootTdHover","typographicTableFootTdHover","paddingGlobalFilterLabel","colorGlobalFilterLabel","typographicGlobalFilterLabel","paddingGlobalFilterLabelHover","colorGlobalFilterLabelHover","typographicGlobalFilterLabelHover","paddingGlobalFilterInput","widthGlobalFilterInput","marginLeftGlobalFilterInput","colorGlobalFilterInput","backgroundColorGlobalFilterInput","typographicGlobalFilterInput","borderTypeGlobalFilterInput","borderWidthGlobalFilterInput","borderRadiusGlobalFilterInput","borderColorGlobalFilterInput","boxShadowGlobalFilterInput","paddingGlobalFilterInputHover","widthGlobalFilterInputHover","marginLeftGlobalFilterInputHover","colorGlobalFilterInputHover","backgroundColorGlobalFilterInputHover","typographicGlobalFilterInputHover","borderTypeGlobalFilterInputHover","borderWidthGlobalFilterInputHover","borderRadiusGlobalFilterInputHover","borderColorGlobalFilterInputHover","boxShadowGlobalFilterInputHover","paddingPagination","paddingPaginationHover","typographicPaginationPrev","typographicPaginationPrevHover","typographicPaginationNext","typographicPaginationNextHover","typographicPaginationPagesItem","typographicPaginationPagesItemHover","colorPaginationPrevNext","backgroundColorPaginationPrevNext","paddingPaginationPrevNext","borderTypePaginationPrevNext","borderWidthPaginationPrevNext","borderRadiusPaginationPrevNext","borderColorPaginationPrevNext","boxShadowPaginationPrevNext","colorPaginationPrevNextHover","backgroundColorPaginationPrevNextHover","paddingPaginationPrevNextHover","borderTypePaginationPrevNextHover","borderWidthPaginationPrevNextHover","borderRadiusPaginationPrevNextHover","borderColorPaginationPrevNextHover","boxShadowPaginationPrevNextHover","typographicNextItemCountPrevGotoSelect","typographicNextItemCountPrevGotoSelectHover","marginPaginationCount","colorPaginationCount","backgroundColorPaginationCount","paddingPaginationCount","marginPaginationCountHover","colorPaginationCountHover","backgroundColorPaginationCountHover","paddingPaginationCountHover","marginPaginationEllipsis","colorPaginationEllipsis","typographicPaginationEllipsis","marginPaginationEllipsisHover","colorPaginationEllipsisHover","typographicPaginationEllipsisHover","marginPaginationGotoPages","paddingPaginationGotoPages","colorPaginationGotoPages","backgroundColorPaginationGotoPages","borderTypePaginationGotoPages","borderWidthPaginationGotoPages","borderRadiusPaginationGotoPages","borderColorPaginationGotoPages","boxShadowPaginationGotoPages","marginPaginationGotoPagesHover","paddingPaginationGotoPagesHover","colorPaginationGotoPagesHover","backgroundColorPaginationGotoPagesHover","borderTypePaginationGotoPagesHover","borderWidthPaginationGotoPagesHover","borderRadiusPaginationGotoPagesHover","borderColorPaginationGotoPagesHover","boxShadowPaginationGotoPagesHover","widthPaginSelectSizeControl","borderTypePaginSelectSizeControl","borderWidthPaginSelectSizeControl","borderRadiusPaginSelectSizeControl","borderColorPaginSelectSizeControl","boxShadowPaginSelectSizeControl","colorPaginSelectSizeControl","backgroundColorPaginSelectSizeControl","widthPaginSelectSizeControlHover","borderTypePaginSelectSizeControlHover","borderWidthPaginSelectSizeControlHover","borderRadiusPaginSelectSizeControlHover","borderColorPaginSelectSizeControlHover","boxShadowPaginSelectSizeControlHover","colorPaginSelectSizeControlHover","backgroundColorPaginSelectSizeControlHover","typographicPaginSelectSize","marginCheckIconSvg","sizeCheckIconSvg","marginCheckIconSvgHover","sizeCheckIconSvgHover","marginUncheckIconSvg","sizeUncheckIconSvg","marginUncheckIconSvgHover","sizeUncheckIconSvgHover","marginCheckIconIndeterminateSvg","sizeCheckIconIndeterminateSvg","marginCheckIconIndeterminateSvgHover","sizeCheckIconIndeterminateSvgHover","iconFillCheckIconCheckedPath","iconFillCheckIconCheckedPathHover","iconFillCheckIconUncheckedPath","iconFillCheckIconUncheckedPathHover","iconFillCheckIconIndeterminatePath","iconFillCheckIconIndeterminatePathHover","sliderSizeTableResizer","backgroundColorTableResizer","sliderSizeTableResizerHover","backgroundColorTableResizerHover","backgroundColorTableResizerResizing","backgroundColorTableResizerResizingHover","filtersImage","filtersImageHover","fill","i_size","contentBackgroundColor","contentPadding","contentBorderType","contentBorderWidth","contentBorderColor","contentBorderRadius","indicatorColor","getTextStyles","columnCount","columnGap","columnGapStyled","borderRadiusStyled","paragraphMargin","textIndent","blockquoteMargin","blockquotePadding","blockquoteBackgroundColor","blockquoteBorderStyle","blockquoteBorderWidth","blockquoteBorderColor","blockquoteBorderRadius","blockquoteBoxShadow","blockquoteTypographic","blockquoteTextShadow","tableMargin","tableBackgroundColor","tableBorderStyle","tableBorderWidth","tableBorderColor","tableOddRowsColor","tableCellsPadding","dimensionsStyled","tableCellsBorderStyle","tableCellsBorderWidth","tableCellsBorderColor","tableCellsTypographic","tableCellsTextShadow","linkTypographic","linkTextShadow","numberedListMargin","numberedListItemMargin","numberedListStyle","unorderedListMargin","unorderedListItemMargin","unorderedListStyle","FRONT_DEFAULT_AREAS","getRouteStyles","areas","_","isArray","filter","area","indexOf","columnsGrid","rightSidebar","find","area_type","sidebar_location","leftSidebar","sidebar_width","contentRow","getCustomCSS","getSetting"],"mappings":"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","file":"9824.39030c15719d11eb4ba9.bundle.js","sourcesContent":["/**\r\n * Имеет интерфейс для доступы к свойствам data (любой вложенности)\r\n * @class AltrpModel\r\n */\r\nimport cloneDeep from 'lodash.clonedeep';\r\nimport get from 'lodash.get';\r\nimport set from 'lodash.set';\r\nimport has from 'lodash.has';\r\nimport unset from 'lodash.unset';\r\nimport isEmpty from 'lodash.isempty';\r\n// import {cloneDeep, get, set, has, unset, isString, isEmpty} from \"lodash\";\r\n\r\nclass AltrpModel {\r\n  constructor(data = {}) {\r\n    this.data = cloneDeep(data);\r\n  }\r\n\r\n  /**\r\n   * Возваращает объект данных\r\n   * @params {boolean} clone - клонировать или ссылку на данные\r\n   * @return {{}}\r\n   */\r\n  getData(clone = true) {\r\n    if(clone){\r\n      return cloneDeep(this.data);\r\n    }\r\n    return this.data;\r\n  }\r\n\r\n  /**\r\n   * Пустой ли объект\r\n   */\r\n  isEmpty(){\r\n    return isEmpty(this.data);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  getProperty(name, defaultValue = '') {\r\n    return get(this.data, name, defaultValue);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  hasProperty(name, defaultValue = '') {\r\n    return has(this.data, name);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {{}}\r\n   */\r\n  setProperty(name, value = '') {\r\n    if(value instanceof AltrpModel){\r\n      value = value.getData(false);\r\n    }\r\n    return set(this.data, name, value);\r\n  }\r\n  /**\r\n   * Удаляет свойства name\r\n   * @params {string} name\r\n   * @return {*}\r\n   */\r\n  unsetProperty(name) {\r\n    return unset(this.data, name);\r\n  }\r\n}\r\nwindow.AltrpModel = AltrpModel;\r\nexport default AltrpModel\r\n","import {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n/**\r\n * @return {string}\r\n */\r\n\r\nexport default function AccordionComponent(settings) {\r\n  const styles = [\r\n    \"altrp-accordion-item-label\",\r\n\r\n    [\"\", \"font_typographic_title_style\", \"typographic\"],\r\n    [\"text-align\", \"alignment_item_style\"],\r\n    [\"color\", \"color_title_style\", \"color\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"spacing_icon_style\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `margin-left: ${slider}; margin-right: ${slider};`\r\n      }\r\n    },\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item-content\",\r\n\r\n    [\"background-color\", \"background_color_content_style\", \"color\"],\r\n    [\"color\", \"color_content_style\", \"color\"],\r\n    [\"border-radius\", \"border_radius_content_style\", \"dimensions\"],\r\n    [\"text-align\", \"alignment_item_style\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item-content-show\",\r\n\r\n    [\"padding\", \"padding_content_style\", \"dimensions\"],\r\n    [\"margin-top\", \"spacing_content_style\", \"slider\"],\r\n    [\"\", \"typographic_content_style\", \"typographic\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item\",\r\n\r\n    [\"margin-top\", \"spacing_item_style\", \"slider\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item-button\",\r\n\r\n    [\"flex-direction\", \"alignment_icon_style\"],\r\n    [\"background-color\", \"background_color_title_style\", \"color\"],\r\n    [\"border-style\", \"border_type_title_style\"],\r\n    [\"border-width\", \"border_width_title_style\", \"dimensions\"],\r\n    [\"border-color\", \"border_color_title_style\", \"color\"],\r\n    [\"border-radius\", \"border_radius_title_style\", \"dimensions\"],\r\n    [\"padding\", \"padding_title_style\", \"dimensions\"],\r\n    [\"\", \"box_shadow_title_style\", \"shadow\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item-icon path\",\r\n\r\n    [\"fill\", \"color_icon_style\", \"color\"],\r\n\r\n    \"}\",\r\n\r\n\r\n    \"altrp-accordion-item-button:hover .altrp-accordion-item-label\",\r\n\r\n    [\"color\", \"color_title_style\", \"color\", \":hover\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"spacing_icon_style\", \":hover\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `margin-left: ${slider}; margin-right: ${slider};`\r\n      } else {\r\n        return \"\"\r\n      }\r\n    },\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item-content:hover\",\r\n\r\n    [\"background-color\", \"background_color_content_style\", \"color\", \":hover\"],\r\n    [\"color\", \"color_content_style\", \"color\", \":hover\"],\r\n    [\"border-radius\", \"border_radius_content_style\", \"dimensions\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item-content-show:hover\",\r\n    [\"margin-top\", \"spacing_content_style\", \"slider\", \":hover\"],\r\n    [\"\", \"typographic_content_style\", \"typographic\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item-button:hover\",\r\n\r\n    [\"background-color\", \"background_color_title_style\", \"color\", \":hover\"],\r\n    [\"border-style\", \"border_type_title_style\", null, \":hover\"],\r\n    [\"border-width\", \"border_width_title_style\", \"dimensions\", \":hover\"],\r\n    [\"border-color\", \"border_color_title_style\", \"color\", \":hover\"],\r\n    [\"border-radius\", \"border_radius_title_style\", \"dimensions\", \":hover\"],\r\n    [\"\", \"box_shadow_title_style\", \"shadow\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item-button:hover .altrp-accordion-item-icon path\",\r\n\r\n    [\"fill\", \"color_icon_style\", \"color\", \":hover\"],\r\n\r\n    \"}\",\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","import {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\n\r\n/**\r\n * @return {string}\r\n */\r\n\r\nexport default function AdvancedComponent(settings) {\r\n\r\n  const styles = [\r\n    [\"z-index\", \"z_index\"],\r\n\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"advanced_opacity\");\r\n\r\n      if(value && value.size) {\r\n        return `opacity: ${value.size};`\r\n      } else {\r\n        return ''\r\n      }\r\n    },\r\n    // () => {\r\n    //   let element_css_editor = getResponsiveSetting(settings, \"element_css_editor\");\r\n    //   console.log(element_css_editor);\r\n    //   return _.isString(element_css_editor) ? element_css_editor.replace(/__selector__/g, '&') : '';\r\n    // },\r\n\r\n    [\"padding\", \"positioning_padding\", \"dimensions\"],\r\n    [\"margin\", \"positioning_margin\", \"dimensions\"],\r\n\r\n    [\"width\", \"positioning_width_type\"],\r\n    [\"width\", \"positioning_custom_width\", \"slider\"],\r\n\r\n    [\"align-self\", \"positioning_vertical_align\"],\r\n\r\n    [\"position\", \"positioning_position_type\", \"\", \"\"],\r\n\r\n    [\"left\", \"positioning_horizontal_offset\", \"slider\"],\r\n    [\"bottom\", \"positioning_vertical_offset\", \"slider\"],\r\n\r\n    \"& > .altrp-tooltip\",\r\n      [\"padding\", \"tooltip_position_padding\", \"dimensions\"],\r\n      [\"left\", \"tooltip_horizontal_offset\", \"slider\"],\r\n      [\"bottom\", \"tooltip_vertical_offset\", \"slider\"],\r\n      [\"\", \"tooltip_font_typographic\", \"typographic\"],\r\n      [\"color\", \"tooltip_font_color\", \"color\"],\r\n      [\"background-color\", \"tooltip_background_color\", \"color\"],\r\n      [\"border-radius\", \"tooltip_border_radius\", \"dimensions\"],\r\n      [\"\", \"tooltip_background_shadow\", \"shadow\"],\r\n      () => {\r\n        const value = getResponsiveSetting(settings, \"tooltip_background_color\");\r\n        if(value) {\r\n          if(value.color) {\r\n            return `border-color: transparent transparent ${value.color}`\r\n          } else {\r\n            return \"\"\r\n          }\r\n        } else {\r\n          return \"\"\r\n        }\r\n      },\r\n\r\n      \"&::after\",\r\n        [\"border-width\", \"arrow_size\", \"slider\"],\r\n      \"}\",\r\n    \"}\",\r\n\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"arrow_size\");\r\n      const slider = sliderStyled(value);\r\n      if(slider !== \"\") {\r\n        return `\r\n          & > .altrp-tooltip::after { border-width: ${slider}; }\r\n          & > .altrp-tooltip--top { bottom: calc(100% + ${slider}); }\r\n          & > .altrp-tooltip--bottom { top: calc(100% + ${slider}); }\r\n          & > .altrp-tooltip--right { left: calc(100% + ${slider}); }\r\n          & > .altrp-tooltip--left { right: calc(100% + ${slider}); }\r\n          & > .altrp-tooltip--top::after { margin-left: -${slider}; }\r\n          & > .altrp-tooltip--bottom::after { margin-left: -${slider}; }\r\n          & > .altrp-tooltip--right::after { margin-top: -${slider}; }\r\n          & > .altrp-tooltip--left::after { margin-top: -${slider}; }\r\n        `\r\n      } else {\r\n        return \"\"\r\n      }\r\n    },\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","import {\r\n  sliderStyled,\r\n  styledString,\r\n  colorPropertyStyled,\r\n  gradientStyled,\r\n  backgroundImageControllerToStyles,\r\n  simplePropertyStyled,\r\n  borderWidthStyled,\r\n  sizeStyled,\r\n  shadowControllerToStyles,\r\n  typographicControllerToStyles,\r\n  iconSizeStyled,\r\n  dimensionsControllerToStyles,\r\n} from \"../../../../../../front-app/src/js/helpers/styles\";\r\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\n\r\nexport function btnStyles(settings) {\r\n  return [\r\n    \"altrp-btn-wrapper\",\r\n\r\n    [\"align-items\", \"button_alignment\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-btn\",\r\n    // [\"flex-direction\", \"button_icon_position\"],\r\n    [\"justify-content\", \"content_alignment\"],\r\n    [\"margin\", \"position_margin\", \"dimensions\"],\r\n    [\"padding\", \"position_padding\", \"dimensions\"],\r\n    [\"z-index\", \"position_z_index\"],\r\n    [\"transition-property\", \"button_transition_property\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"button_transition_duration\");\r\n\r\n      if(value) {\r\n        return `transition-duration: ${value.size}s;`;\r\n      } else {\r\n        return ''\r\n      }\r\n    },\r\n    [\"transition-timing-function\", \"button_transition_timing\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"button_transition_delay\");\r\n\r\n      if (value) {\r\n        return `transition-delay: ${value.size}s;`;\r\n      } else {\r\n        return ''\r\n      }\r\n    },\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"position_opacity\");\r\n\r\n      if(value && value.size) {\r\n        return `opacity: ${value.size};`\r\n      } else {\r\n        return ''\r\n      }\r\n    },\r\n    [\"background-color\", \"background_color\", \"color\"],\r\n    [\"\", \"gradient\", \"gradient\"],\r\n    [\"\", \"background_image\", \"media\"],\r\n    [\"border-style\", \"border_type\"],\r\n    [\"border-width\", \"border_width\", \"dimensions\"],\r\n    [\"border-color\", \"border_color\", \"color\"],\r\n    [\"border-radius\", \"border_radius\", \"dimensions\"],\r\n    [\"\", \"style_background_shadow\", \"shadow\"],\r\n    [\"\", \"font_typographic\", \"typographic\"],\r\n    [\"color\", \"font_color\", \"color\"],\r\n\r\n    \"&:hover\",\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"position_opacity\", ':hover');\r\n\r\n      if (value && value.size) {\r\n        return `opacity: ${value.size};`\r\n      } else {\r\n        return ''\r\n      }\r\n    },\r\n    [\"background-color\", \"background_color\", \"color\", \":hover\"],\r\n    [\"\", \"gradient\", \"gradient\", \":hover\"],\r\n    [\"border-style\", \"border_type\", \"\", \":hover\"],\r\n    [\"border-width\", \"border_width\", \"dimensions\", \":hover\"],\r\n    [\"border-color\", \"border_color\", \"color\", \":hover\"],\r\n    [\"border-radius\", \"border_radius\", \"dimensions\", \":hover\"],\r\n    [\"\", \"style_background_shadow\", \"shadow\", \":hover\"],\r\n    [\"color\", \"font_color\", \"color\", \":hover\"],\r\n    [\"\", \"background_image\", \"media\", \":hover\"],\r\n\r\n    \"& .altrp-btn-icon\",\r\n    // [\"width\", \"icon_size\", \"slider\", \":hover\"],\r\n    // [\"height\", \"icon_size\", \"slider\", \":hover\"],\r\n\r\n    \"& svg\",\r\n    [\"background-color\", \"icon_color_background\", \"color\", \":hover\"],\r\n    [\"width\", \"icon_size\", \"slider\", \":hover\"],\r\n    [\"height\", \"icon_size\", \"slider\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"& img\",\r\n    [\"width\", \"icon_size\", \"slider\", \":hover\"],\r\n    [\"icon_size\", \"slider\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"& path\",\r\n    [\"fill\", \"icon_color\", \"color\", \":hover\"],\r\n    [\"stroke\", \"icon_color_stroke\", \"color\", \":hover\"],\r\n    \"}\",\r\n    \"}\",\r\n    \"}\",\r\n  \"&.state-disabled\",\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"position_opacity\", '.state-disabled');\r\n\r\n      if (value && value.size) {\r\n        return `opacity: ${value.size};`\r\n      } else {\r\n        return ''\r\n      }\r\n    },\r\n    [\"background-color\", \"background_color\", \"color\", \".state-disabled\"],\r\n    [\"\", \"gradient\", \"gradient\", \".state-disabled\"],\r\n    [\"border-style\", \"border_type\", \"\", \".state-disabled\"],\r\n    [\"border-width\", \"border_width\", \"dimensions\", \".state-disabled\"],\r\n    [\"border-color\", \"border_color\", \"color\", \".state-disabled\"],\r\n    [\"border-radius\", \"border_radius\", \"dimensions\", \".state-disabled\"],\r\n    [\"\", \"style_background_shadow\", \"shadow\", \".state-disabled\"],\r\n    [\"color\", \"font_color\", \"color\", \".state-disabled\"],\r\n    [\"\", \"background_image\", \"media\", \".state-disabled\"],\r\n\r\n    \"& .altrp-btn-icon\",\r\n    // [\"width\", \"icon_size\", \"slider\", \":hover\"],\r\n    // [\"height\", \"icon_size\", \"slider\", \":hover\"],\r\n\r\n    \"& svg\",\r\n    [\"background-color\", \"icon_color_background\", \"color\", \".state-disabled\"],\r\n    [\"width\", \"icon_size\", \"slider\", \".state-disabled\"],\r\n    [\"height\", \"icon_size\", \"slider\", \".state-disabled\"],\r\n    \"}\",\r\n\r\n    \"& img\",\r\n    [\"width\", \"icon_size\", \"slider\", \".state-disabled\"],\r\n    [\"icon_size\", \"slider\", \".state-disabled\"],\r\n    \"}\",\r\n\r\n    \"& path\",\r\n    [\"fill\", \"icon_color\", \"color\", \".state-disabled\"],\r\n    [\"stroke\", \"icon_color_stroke\", \"color\", \".state-disabled\"],\r\n    \"}\",\r\n    \"}\",\r\n    \"}\",\r\n\r\n    \"& .altrp-btn-icon\",\r\n    [\"padding\", \"icon_padding\", \"dimensions\"],\r\n    // [\"width\", \"icon_size\", \"slider\"],\r\n    // [\"height\", \"icon_size\", \"slider\"],\r\n\r\n    \"& svg\",\r\n    [\"background-color\", \"icon_color_background\", \"color\"],\r\n    [\"width\", \"icon_size\", \"slider\"],\r\n    [\"height\", \"icon_size\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"& img\",\r\n    [\"width\", \"icon_size\", \"slider\"],\r\n    [\"icon_size\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"& path\",\r\n    [\"fill\", \"icon_color\", \"color\"],\r\n    [\"stroke\", \"icon_color_stroke\", \"color\"],\r\n    \"}\",\r\n    \"}\",\r\n\r\n    \"}\",\r\n\r\n    \"altrp-background-image\",\r\n    [\"background-position\", \"background_position\"],\r\n    [\"background-attachment\", \"background_attachment\"],\r\n    [\"background-repeat\", \"background_repeat\"],\r\n    [\"background-size\", \"background_image_width\", \"slider\"],\r\n    [\"background-size\", \"background_size\"],\r\n    \"}\",\r\n  ]\r\n}\r\n\r\n/**\r\n * @return {string}\r\n */\r\n\r\nexport default function ButtonComponent(settings) {\r\n\r\n  const styles = [\r\n\r\n    ...btnStyles(settings)\r\n  ];\r\n\r\n  let stylesInString = '';\r\n\r\n  stylesInString += `& .altrp-btn.active {`;\r\n\r\n  const backgroundColorActive = getResponsiveSetting(settings, 'background_color', '.active');\r\n  if (backgroundColorActive) {\r\n    stylesInString += colorPropertyStyled(backgroundColorActive, 'background-color');\r\n  }\r\n\r\n  const gradientActive = getResponsiveSetting(settings, \"gradient\", '.active');\r\n\r\n  if (gradientActive) {\r\n    stylesInString += gradientStyled(gradientActive);\r\n  }\r\n\r\n  const backgroundImageActive = getResponsiveSetting(settings, \"background_image\", '.active');\r\n\r\n  if (backgroundImageActive) {\r\n    stylesInString += backgroundImageControllerToStyles(backgroundImageActive);\r\n  }\r\n\r\n  const borderTypeActive = getResponsiveSetting(settings, \"border_type\", '.active');\r\n\r\n  if (borderTypeActive) {\r\n    stylesInString += simplePropertyStyled(borderTypeActive, \"border-style\");\r\n  }\r\n\r\n  const borderWidthActive = getResponsiveSetting(settings, \"border_width\", '.active');\r\n\r\n  if (borderWidthActive) {\r\n    stylesInString += borderWidthStyled(borderWidthActive);\r\n  }\r\n\r\n  const borderColorActive = getResponsiveSetting(settings, \"border_color\", '.active');\r\n\r\n  if (borderColorActive) {\r\n    stylesInString += colorPropertyStyled(borderColorActive, \"border-color\");\r\n  }\r\n\r\n  const borderRadiusActive = getResponsiveSetting(settings, \"border_radius\", '.active');\r\n\r\n  if (borderRadiusActive) {\r\n    stylesInString += sizeStyled(borderRadiusActive, \"border-radius\");\r\n  }\r\n\r\n  const boxShadowActive = getResponsiveSetting(settings, 'style_background_shadow', '.active');\r\n\r\n  if (boxShadowActive) {\r\n    stylesInString += shadowControllerToStyles(boxShadowActive);\r\n  }\r\n\r\n  const typographicActive = getResponsiveSetting(settings, \"font_typographic\", '.active');\r\n\r\n  if (typographicActive) {\r\n    stylesInString += typographicControllerToStyles(typographicActive);\r\n  }\r\n\r\n  const colorActive = getResponsiveSetting(settings, 'font_color', '.active');\r\n\r\n  if (colorActive) {\r\n    stylesInString += colorPropertyStyled(colorActive, 'color');\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn.active svg {`;\r\n\r\n  const backgroundColorSvgActive = getResponsiveSetting(settings, 'icon_color_background', '.active');\r\n\r\n  if (backgroundColorSvgActive) {\r\n    stylesInString += colorPropertyStyled(backgroundColorSvgActive, 'background-color');\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn.active path {`;\r\n\r\n  const fillColorSvgActive = getResponsiveSetting(settings, 'icon_color', '.active');\r\n\r\n  if (fillColorSvgActive) {\r\n    stylesInString += colorPropertyStyled(fillColorSvgActive, 'fill');\r\n  }\r\n\r\n  const strokeColorSvgActive = getResponsiveSetting(settings, 'icon_color_stroke', '.active');\r\n\r\n  if (strokeColorSvgActive) {\r\n    stylesInString += colorPropertyStyled(strokeColorSvgActive, 'stroke');\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn svg {`;\r\n\r\n  const backgroundColorSvg = getResponsiveSetting(settings, 'icon_color_background');\r\n\r\n  if (backgroundColorSvg) {\r\n    stylesInString += colorPropertyStyled(backgroundColorSvg, 'background-color');\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn:hover svg {`;\r\n\r\n  const backgroundColorSvgHover = getResponsiveSetting(settings, 'icon_color_background', ':hover');\r\n\r\n  if (backgroundColorSvgHover) {\r\n    stylesInString += colorPropertyStyled(backgroundColorSvgHover, 'background-color');\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn path {`;\r\n\r\n  const fillColorSvg = getResponsiveSetting(settings, 'icon_color');\r\n\r\n  if (fillColorSvg) {\r\n    stylesInString += colorPropertyStyled(fillColorSvg, 'fill');\r\n  }\r\n\r\n  const strokeColorSvg = getResponsiveSetting(settings, 'icon_color_stroke');\r\n\r\n  if (strokeColorSvg) {\r\n    stylesInString += colorPropertyStyled(strokeColorSvg, 'stroke');\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn:hover path {`;\r\n\r\n  const fillColorSvgHover = getResponsiveSetting(settings, 'icon_color', ':hover');\r\n\r\n  if (fillColorSvgHover) {\r\n    stylesInString += colorPropertyStyled(fillColorSvgHover, 'fill');\r\n  }\r\n\r\n  const strokeColorSvgHover = getResponsiveSetting(settings, 'icon_color_stroke', ':hover');\r\n\r\n  if (strokeColorSvgHover) {\r\n    stylesInString += colorPropertyStyled(strokeColorSvgHover, 'stroke');\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn .altrp-btn-icon-right svg, & .altrp-btn .altrp-btn-icon-right img {`;\r\n\r\n  const paddingIconRightBtn = getResponsiveSetting(settings, 'icon_padding_right');\r\n\r\n  if (paddingIconRightBtn) {\r\n    stylesInString += dimensionsControllerToStyles(paddingIconRightBtn);\r\n  }\r\n\r\n  const iconRightSizeBtn = getResponsiveSetting(settings, 'icon_size_right');\r\n\r\n  if (iconRightSizeBtn) {\r\n    stylesInString += iconSizeStyled(iconRightSizeBtn);\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn .altrp-btn-icon-left svg, & .altrp-btn .altrp-btn-icon-left img {`;\r\n\r\n  const paddingIconLeftBtn = getResponsiveSetting(settings, 'icon_padding_left');\r\n\r\n  if (paddingIconLeftBtn) {\r\n    stylesInString += dimensionsControllerToStyles(paddingIconLeftBtn);\r\n  }\r\n\r\n  const iconLeftSizeBtn = getResponsiveSetting(settings, 'icon_size_left');\r\n\r\n  if (iconLeftSizeBtn) {\r\n    stylesInString += iconSizeStyled(iconLeftSizeBtn);\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn .altrp-btn-icon-top svg, & .altrp-btn .altrp-btn-icon-top img {`;\r\n\r\n  const paddingIconTopBtn = getResponsiveSetting(settings, 'icon_padding_top');\r\n\r\n  if (paddingIconTopBtn) {\r\n    stylesInString += dimensionsControllerToStyles(paddingIconTopBtn);\r\n  }\r\n\r\n  const iconTopSizeBtn = getResponsiveSetting(settings, 'icon_size_top');\r\n\r\n  if (iconTopSizeBtn) {\r\n    stylesInString += iconSizeStyled(iconTopSizeBtn);\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn .altrp-btn-icon-bottom svg, & .altrp-btn .altrp-btn-icon-bottom img {`;\r\n\r\n  const paddingIconBottomBtn = getResponsiveSetting(settings, 'icon_padding_bottom');\r\n\r\n  if (paddingIconBottomBtn) {\r\n    stylesInString += dimensionsControllerToStyles(paddingIconBottomBtn);\r\n  }\r\n\r\n  const iconBottomSizeBtn = getResponsiveSetting(settings, 'icon_size_bottom');\r\n\r\n  if (iconBottomSizeBtn) {\r\n    stylesInString += iconSizeStyled(iconBottomSizeBtn);\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += styledString(styles, settings);\r\n\r\n  return stylesInString;\r\n}\r\n","import {sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\n\r\n/**\r\n * @return {string}\r\n */\r\n(window.globalDefaults = window.globalDefaults || []).push(`\r\n  .altrp-carousel-slide-img {\r\n    background: no-repeat 50%;\r\n    -webkit-background-size: cover;\r\n    cursor: grab;\r\n    background-size: cover;\r\n    height: 100%;\r\n    width: 100%;\r\n    object-fit: cover;\r\n    border-style: solid;\r\n    border-width: 0;\r\n    position: relative;\r\n  }\r\n\r\n  .altrp-carousel-slide {\r\n      overflow: hidden;\r\n      height: 220px;\r\n      position: relative;\r\n  }\r\n\r\n  .slick-list {\r\n    height: 100%;\r\n  }\r\n\r\n  .altrp-carousel-arrow svg {\r\n    width: 50px;\r\n    height: 50px;\r\n  }\r\n\r\n  .slick-slide, .altrp-carousel-dots {\r\n    padding: 0 15px;\r\n  }\r\n\r\n  .altrp-carousel-paging {\r\n    width: 10px;\r\n    height: 10px;\r\n    background-color: #a4a4a4;\r\n  }\r\n\r\n  .altrp-carousel-slide-overlay {\r\n    background-color: rgb(255, 255, 255);\r\n  }\r\n\r\n  .altrp-carousel-arrow {\r\n      cursor: pointer;\r\n      position: relative;\r\n      z-index: 999;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n  }\r\n\r\n  .altrp-carousel-arrow-next {\r\n      transform: rotate(180deg);\r\n  }\r\n\r\n  .altrp-carousel {\r\n      position: relative;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      height: 100%;\r\n      width: 100%;\r\n  }\r\n\r\n  .altrp-carousel-paging {\r\n      border-radius: 10vh;\r\n      background-color: #a4a4a4;\r\n      padding-right: 1px;\r\n  }\r\n\r\n  .altrp-carousel-container {\r\n      width: 100%;\r\n  }\r\n\r\n  .altrp-carousel-dots .slick-active .altrp-carousel-paging {\r\n      background-color: #136aed;\r\n  }\r\n\r\n  .altrp-carousel-dots-bottom-left {\r\n      text-align: left !important;\r\n  }\r\n\r\n  .altrp-carousel-dots-bottom-right {\r\n      text-align: right !important;\r\n  }\r\n\r\n  .altrp-carousel-dots-top-left {\r\n      text-align: left !important;\r\n  }\r\n\r\n  .altrp-carousel-dots-top {\r\n      text-align: center !important;\r\n      bottom: auto !important;\r\n  }\r\n\r\n  .altrp-carousel-dots-top-right {\r\n      text-align: right !important;\r\n  }\r\n\r\n  .altrp-carousel-dots {\r\n      position: relative;\r\n      list-style: none;\r\n      padding: 0;\r\n      text-align: center;\r\n      margin: 0;\r\n      bottom: 0;\r\n  }\r\n\r\n  .altrp-carousel-dots li {\r\n      position: relative;\r\n      display: inline-block;\r\n      margin-left: 5px;\r\n      cursor: pointer;\r\n  }\r\n\r\n  .altrp-carousel-paging:first-child {\r\n      margin-left: 0;\r\n  }\r\n\r\n  .altrp-carousel-container-no-arrow {\r\n      width: 100%;\r\n  }\r\n\r\n  .altrp-carousel-arrow-top-left {\r\n      top: 0;\r\n      left: 0;\r\n      margin-top: 10px;\r\n      margin-left: 10px;\r\n  }\r\n\r\n  .altrp-carousel-arrows-container {\r\n      position: absolute;\r\n      display: flex;\r\n      font-size: 25px;\r\n      flex-direction: row;\r\n      z-index: 999;\r\n  }\r\n\r\n  .altrp-carousel-arrow-top {\r\n      top: 0;\r\n  }\r\n\r\n  .altrp-carousel-arrows-container .altrp-carousel-arrow-prev {\r\n      display: flex;\r\n      margin-right: 2em;\r\n  }\r\n\r\n  .altrp-carousel-arrows-container .altrp-carousel-arrow-next {\r\n      display: flex;\r\n      margin-left: 2em;\r\n  }\r\n\r\n  .altrp-carousel-arrow-top-right {\r\n      top: 0;\r\n      right: 0;\r\n      margin-right: 10px;\r\n  }\r\n\r\n  .altrp-carousel-arrow-bottom-left {\r\n      bottom: 0;\r\n      left: 0;\r\n      margin-left: 10px;\r\n  }\r\n\r\n  .altrp-carousel-arrow-bottom {\r\n      bottom: 0;\r\n\r\n  }\r\n\r\n  .altrp-carousel-arrow-bottom-right {\r\n      bottom: 0;\r\n      right: 0;\r\n      margin-right: 10px;\r\n  }\r\n\r\n  .altrp-carousel-slides {\r\n      width: 100%;\r\n      display: flex;\r\n  }\r\n\r\n  .altrp-carousel-slides-dots-top {\r\n      flex-direction: column-reverse;\r\n  }\r\n\r\n  .altrp-carousel-slides-dots-top .altrp-carousel-dots {\r\n      margin-bottom: 15px;\r\n  }\r\n\r\n  .altrp-carousel-slides-dots-bottom {\r\n      flex-direction: column;\r\n  }\r\n\r\n  .altrp-carousel-slides-dots-bottom .altrp-carousel-dots {\r\n      margin-bottom: -15px;\r\n  }\r\n\r\n  .altrp-carousel-slide-overlay {\r\n      width: calc(100% - 40px);\r\n      margin: 20px;\r\n      top: 0;\r\n      opacity: 0;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      perspective: 20px;\r\n      height: calc(100% - 40px);\r\n      padding: 10px;\r\n      cursor: grab;\r\n      background-color: #ffffff;\r\n      z-index: 4;\r\n      position: absolute;\r\n      transition: 0.5s;\r\n  }\r\n\r\n  .altrp-carousel-slide:hover .altrp-carousel-slide-overlay {\r\n      opacity: 1;\r\n  }\r\n\r\n`);\r\n\r\nexport default function CarouselComponent(settings) {\r\n  const styles = [\r\n    \"altrp-carousel-slide\",\r\n\r\n    [\"height\", \"height_slides_content\", \"slider\"],\r\n    [\"background-color\", \"background_slides_style\", \"color\"],\r\n    [\"padding\", \"padding_slides_style\", \"dimensions\"],\r\n    [\"border-radius\", \"border_radius_slides_style\", \"dimensions\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-carousel-slide:hover\",\r\n\r\n    [\"background-color\", \"background_slides_style\", \"color\", \":hover\"],\r\n    [\"border-radius\", \"border_radius_slides_style\", \"dimensions\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"slick-list\",\r\n\r\n    [\"width\", \"width_slides_content\", \"slider\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-carousel-slide-img\",\r\n\r\n    [\"background-size\", \"image_fit_additional_content\"],\r\n\r\n    \"}\",\r\n\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"space_between_slides_style\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `\r\n        & .slick-slide { padding: 0 ${slider}; }\r\n        & .altrp-carousel-dots { padding 0 ${slider}; }\r\n        `\r\n      }\r\n    },\r\n\r\n    \"altrp-carousel-arrow\",\r\n\r\n    [\"padding\", \"padding_arrows_navigation_style\", \"dimensions\"],\r\n    [\"border-radius\", \"border_radius_arrows_navigation_style\", \"dimensions\"],\r\n    [\"background-color\", \"arrows_background_navigation_style\", \"color\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"arrows_size_navigation_style\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `svg {height: ${slider}; width: ${slider};}`\r\n      }\r\n    },\r\n\r\n    \"& svg path\",\r\n\r\n    [\"stroke\", \"arrows_color_navigation_style\", \"color\"],\r\n\r\n    \"}\",\r\n\r\n    \"}\",\r\n\r\n\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"horizontal_offset_arrows_navigation_style\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `\r\n        & .altrp-carousel-arrow-prev { left: ${slider}; }\r\n        & .altrp-carousel-arrow-next { right: ${slider}; }\r\n        `\r\n      }\r\n    },\r\n\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"vertical_no_center_offset_arrows_navigation_style\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `\r\n        & .altrp-carousel-arrow { top:${slider}; }\r\n        `\r\n      } else {\r\n        return \"\"\r\n      }\r\n    },\r\n\r\n    \"altrp-carousel-arrow:hover\",\r\n\r\n    [\"background-color\", \"arrows_background_navigation_style\", \"color\", \":hover\"],\r\n    [\"border-radius\", \"border_radius_arrows_navigation_style\", \"dimensions\", \":hover\"],\r\n\r\n    \"& svg path\",\r\n\r\n    [\"stroke\", \"arrows_color_navigation_style\", \"color\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"arrows_size_navigation_style\", \":hover\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `& svg { height: ${slider}; width: ${slider}; }`\r\n      } else {\r\n        return \"\"\r\n      }\r\n    },\r\n\r\n    \"}\",\r\n\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"dots_size_navigation_style\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `\r\n        & .altrp-carousel-paging { width: ${slider}; height: ${slider}; }\r\n        `\r\n      } else {\r\n        return \"\"\r\n      }\r\n      // & .altrp-carousel-dots li { margin-left: calc(${slider} * 0.1); }\r\n    },\r\n\r\n    \"altrp-carousel-paging\",\r\n\r\n    [\"background-color\", \"background_color_dots_navigation_style\", \"color\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-carousel-paging:hover\",\r\n\r\n    [\"background-color\", \"background_color_dots_navigation_style\", \"color\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-carousel-dots .slick-active .altrp-carousel-paging\",\r\n\r\n    [\"background-color\", \"background_color_active_dots_navigation_style\", \"color\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-carousel-dots .slick-active .altrp-carousel-paging:hover\",\r\n\r\n    [\"background-color\", \"background_color_active_dots_navigation_style\", \"color\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-carousel-dots\",\r\n\r\n    [\"left\", \"horizontal_offset_dots_navigation_style\", \"slider\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"vertical_no_center_offset_dots_navigation_style\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `\r\n      transform: translateY(${slider})\r\n      `\r\n      }\r\n    },\r\n\r\n    \"}\",\r\n\r\n    \"altrp-carousel-slide-overlay\",\r\n\r\n    [\"background-color\", \"background_color_overlay\", \"color\"],\r\n\r\n\r\n    \"& .altrp-carousel-slide-overlay-text\",\r\n\r\n    [\"color\", \"font_color_overlay\", \"color\"],\r\n    [\"\", \"typographic_overlay\", \"typographic\"],\r\n\r\n    \"}\",\r\n\r\n    \"}\",\r\n\r\n    \"altrp-carousel-slide-overlay:hover\",\r\n\r\n    [\"background-color\", \"background_color_overlay\", \"color\", \":hover\"],\r\n\r\n\r\n    \"& .altrp-carousel-slide-overlay-text\",\r\n    [\"color\", \"font_color_overlay\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"}\"\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","const { getResponsiveSetting } = window.altrpHelpers;\r\nimport {\r\n  dimensionsControllerToStyles,\r\n  simplePropertyStyled,\r\n  borderWidthStyled,\r\n  colorPropertyStyled,\r\n  sizeStyled,\r\n  gradientStyled,\r\n  shadowStyled,\r\n  backgroundImageControllerToStyles,\r\n} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\nconst ColumnComponent = (settings) => {\r\n  let styles = \"\";\r\n\r\n  let flexWrap, flexDirection, align, justifyContent, overflow, backgroundColor, gradient, zIndex, borderType, borderWidth, borderColor, borderRadius, boxShadow;\r\n  let backgroundColorH, gradientH, borderTypeH, borderWidthH, borderColorH, borderRadiusH, boxShadowH;\r\n  let marginBottom, marginBottomH, backgroundImage, backgroundPosition, backgroundAttachment, backgroundRepeat, backgroundSizeInUnits, backgroundSize;\r\n  let backgroundImageH, backgroundPositionH, backgroundAttachmentH, backgroundRepeatH, backgroundSizeInUnitsH, backgroundSizeH, margin, marginH, padding, paddingH, width;\r\n\r\n  styles += \"& > div.altrp-column.altrp-column-priority {\";\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, \"style_position_padding\");\r\n  }\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  //Получаем значения width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    width = getResponsiveSetting(settings, \"layout_column_width\");\r\n  }\r\n\r\n  // if (layout_column_width) {\r\n  //   if (Number(layout_column_width)) {\r\n  //     styles += `width:${layout_column_width}%;`;\r\n  //   } else {\r\n  //     styles += `width:${layout_column_width};`;\r\n  //   }\r\n  // }\r\n\r\n  //Получаем значения margin из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    margin = getResponsiveSetting(settings, 'style_position_margin');\r\n  }\r\n\r\n  if (margin) {\r\n    styles += dimensionsControllerToStyles(margin, 'margin');\r\n  }\r\n\r\n  //Получаем значения flex-wrap из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    flexWrap = getResponsiveSetting(settings, 'layout_flex_wrap_content');\r\n  }\r\n\r\n  if (flexWrap) {\r\n    styles += simplePropertyStyled(flexWrap, 'flex-wrap');\r\n  }\r\n\r\n  //Получаем значения flex-direction из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    flexDirection = getResponsiveSetting(settings, 'layout_column_direction');\r\n  }\r\n\r\n  if (flexDirection) {\r\n    styles += simplePropertyStyled(flexDirection, 'flex-direction');\r\n  }\r\n\r\n  //Получаем значения align-content и align-items из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    align = getResponsiveSetting(settings, 'layout_type');\r\n  }\r\n\r\n  if (align) {\r\n    styles += simplePropertyStyled(align, 'align-content');\r\n    styles += simplePropertyStyled(align, 'align-items');\r\n  }\r\n\r\n  //Получаем значения justify-content из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    justifyContent = getResponsiveSetting(settings, 'layout_justify_content');\r\n  }\r\n\r\n  if (justifyContent) {\r\n    styles += simplePropertyStyled(justifyContent, 'justify-content');\r\n  }\r\n\r\n  //Получаем значения overflow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    overflow = getResponsiveSetting(settings, 'layout_overflow');\r\n  }\r\n\r\n  if (overflow) {\r\n    styles += simplePropertyStyled(overflow, 'overflow',);\r\n  }\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'column_style_background_color');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n  // console.log(settings);\r\n  //Получаем значения gradient из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    gradient = getResponsiveSetting(settings, 'gradient');\r\n  }\r\n\r\n  if (gradient) {\r\n    styles += gradientStyled(gradient);\r\n  }\r\n\r\n  //Получаем значения z-index из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    zIndex = getResponsiveSetting(settings, 'position_z_index');\r\n  }\r\n\r\n  if (zIndex) {\r\n    styles += simplePropertyStyled(zIndex, 'z-index');\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderType = getResponsiveSetting(settings, 'column_style_border_type');\r\n  }\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'column_style_border_width');\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'column_style_border_color');\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'column_style_border_radius');\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += sizeStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения box-shadow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    boxShadow = getResponsiveSetting(settings, 'column_style_box_shadow');\r\n  }\r\n\r\n  if (boxShadow) {\r\n    styles += shadowStyled(boxShadow);\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  //hover\r\n\r\n  styles += \"& > div.altrp-column.altrp-column-priority:hover {\";\r\n\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColorH = getResponsiveSetting(settings, 'column_style_background_color', ':hover');\r\n  }\r\n\r\n  if (backgroundColorH) {\r\n    styles += colorPropertyStyled(backgroundColorH, 'background-color');\r\n  }\r\n\r\n  //Получаем значения gradient из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    gradientH = getResponsiveSetting(settings, 'gradient', ':hover');\r\n  }\r\n\r\n  if (gradientH) {\r\n    styles += gradientStyled(gradientH);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderTypeH = getResponsiveSetting(settings, 'column_style_border_type', ':hover');\r\n  }\r\n\r\n  if (borderTypeH) {\r\n    styles += simplePropertyStyled(borderTypeH, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidthH = getResponsiveSetting(settings, 'column_style_border_width', ':hover');\r\n  }\r\n\r\n  if (borderWidthH) {\r\n    styles += borderWidthStyled(borderWidthH);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColorH = getResponsiveSetting(settings, 'column_style_border_color', ':hover');\r\n  }\r\n\r\n  if (borderColorH) {\r\n    styles += colorPropertyStyled(borderColorH, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadiusH = getResponsiveSetting(settings, 'column_style_border_radius', ':hover');\r\n  }\r\n\r\n  if (borderRadiusH) {\r\n    styles += sizeStyled(borderRadiusH, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения box-shadow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    boxShadowH = getResponsiveSetting(settings, 'column_style_box_shadow', ':hover');\r\n  }\r\n\r\n  if (boxShadowH) {\r\n    styles += shadowStyled(boxShadowH);\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += \"& > .altrp-element:not(:last-child) {\";\r\n\r\n  if (settings !== undefined) {\r\n    marginBottom = getResponsiveSetting(settings, 'layout_widgets-space');\r\n  }\r\n\r\n  if (marginBottom) {\r\n    styles += `margin-bottom: ${marginBottom}px; `;\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  //hover\r\n\r\n  styles += \"& > .altrp-element:not(:last-child):hover {\";\r\n\r\n  if (settings !== undefined) {\r\n    marginBottomH = getResponsiveSetting(settings, 'layout_widgets-space', ':hover');\r\n  }\r\n\r\n  if (marginBottomH) {\r\n    styles += `margin-bottom: ${marginBottomH}px; `;\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += \"& > .altrp-column.altrp-background-image {\";\r\n\r\n  //Получаем значения background-image из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundImage = getResponsiveSetting(settings, 'background_image');\r\n  }\r\n\r\n  if (backgroundImage) {\r\n    styles += backgroundImageControllerToStyles(backgroundImage);\r\n  }\r\n\r\n  //Получаем значения background-position из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundPosition = getResponsiveSetting(settings, 'background_position');\r\n  }\r\n\r\n  if (backgroundPosition) {\r\n    styles += simplePropertyStyled(backgroundPosition, 'background-position');\r\n  }\r\n\r\n  //Получаем значения background-attachment из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundAttachment = getResponsiveSetting(settings, 'background_attachment');\r\n  }\r\n\r\n  if (backgroundAttachment) {\r\n    styles += simplePropertyStyled(backgroundAttachment, 'background-attachment');\r\n  }\r\n\r\n  //Получаем значения background-repeat из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundRepeat = getResponsiveSetting(settings, 'background_repeat');\r\n  }\r\n\r\n  if (backgroundRepeat) {\r\n    styles += simplePropertyStyled(backgroundRepeat, 'background-repeat');\r\n  }\r\n\r\n  //Получаем значения background-size в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSizeInUnits = getResponsiveSetting(settings, 'background_image_width');\r\n  }\r\n\r\n  if (backgroundSizeInUnits) {\r\n    styles += sizeStyled(backgroundSizeInUnits, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-size из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSize = getResponsiveSetting(settings, 'background_size');\r\n  }\r\n\r\n  if (backgroundSize) {\r\n    styles += simplePropertyStyled(backgroundSize, 'background-size');\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  //hover\r\n\r\n  styles += \"& > div.altrp-column.altrp-background-image:hover {\";\r\n\r\n  //Получаем значения background-position из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundPositionH = getResponsiveSetting(settings, 'background_position', ':hover');\r\n  }\r\n\r\n  if (backgroundPositionH) {\r\n    styles += simplePropertyStyled(backgroundPositionH, 'background-position');\r\n  }\r\n\r\n  //Получаем значения background-attachment из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundAttachmentH = getResponsiveSetting(settings, 'background_attachment', ':hover');\r\n  }\r\n\r\n  if (backgroundAttachmentH) {\r\n    styles += simplePropertyStyled(backgroundAttachmentH, 'background-attachment');\r\n  }\r\n\r\n  //Получаем значения background-repeat из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundRepeatH = getResponsiveSetting(settings, 'background_repeat', ':hover');\r\n  }\r\n\r\n  if (backgroundRepeatH) {\r\n    styles += simplePropertyStyled(backgroundRepeatH, 'background-repeat');\r\n  }\r\n\r\n  //Получаем значения background-size в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSizeInUnitsH = getResponsiveSetting(settings, 'background_image_width', ':hover');\r\n  }\r\n\r\n  if (backgroundSizeInUnitsH) {\r\n    styles += sizeStyled(backgroundSizeInUnitsH, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-size из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSizeH = getResponsiveSetting(settings, 'background_size', ':hover');\r\n  }\r\n\r\n  if (backgroundSizeH) {\r\n    styles += simplePropertyStyled(backgroundSizeH, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-image из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundImageH = getResponsiveSetting(settings, 'background_image', ':hover');\r\n  }\r\n\r\n  if (backgroundImageH) {\r\n    styles += backgroundImageControllerToStyles(backgroundImageH);\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  //<editor-fold description=active>\r\n  styles += \"& > div.altrp-column.altrp-column-priority.active {\";\r\n\r\n  //Получаем значения background-position из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundPositionH = getResponsiveSetting(settings, 'background_position', '.active');\r\n  }\r\n\r\n  if (backgroundPositionH) {\r\n    styles += simplePropertyStyled(backgroundPositionH, 'background-position');\r\n  }\r\n\r\n  //Получаем значения background-attachment из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundAttachmentH = getResponsiveSetting(settings, 'background_attachment', '.active');\r\n  }\r\n\r\n  if (backgroundAttachmentH) {\r\n    styles += simplePropertyStyled(backgroundAttachmentH, 'background-attachment');\r\n  }\r\n\r\n  //Получаем значения background-repeat из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundRepeatH = getResponsiveSetting(settings, 'background_repeat', '.active');\r\n  }\r\n\r\n  if (backgroundRepeatH) {\r\n    styles += simplePropertyStyled(backgroundRepeatH, 'background-repeat');\r\n  }\r\n\r\n  //Получаем значения background-size в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSizeInUnitsH = getResponsiveSetting(settings, 'background_image_width', '.active');\r\n  }\r\n\r\n  if (backgroundSizeInUnitsH) {\r\n    styles += sizeStyled(backgroundSizeInUnitsH, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-size из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSizeH = getResponsiveSetting(settings, 'background_size', '.active');\r\n  }\r\n\r\n  if (backgroundSizeH) {\r\n    styles += simplePropertyStyled(backgroundSizeH, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-image из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundImageH = getResponsiveSetting(settings, 'background_image', '.active');\r\n  }\r\n\r\n  if (backgroundImageH) {\r\n    styles += backgroundImageControllerToStyles(backgroundImageH);\r\n  }\r\n  styles += \"} \";\r\n\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColorH = getResponsiveSetting(settings, 'column_style_background_color', '.active');\r\n  }\r\n\r\n  if (backgroundColorH) {\r\n    styles += colorPropertyStyled(backgroundColorH, 'background-color');\r\n  }\r\n\r\n  //Получаем значения gradient из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    gradientH = getResponsiveSetting(settings, 'gradient', '.active');\r\n  }\r\n\r\n  if (gradientH) {\r\n    styles += gradientStyled(gradientH);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderTypeH = getResponsiveSetting(settings, 'column_style_border_type', '.active');\r\n  }\r\n\r\n  if (borderTypeH) {\r\n    styles += simplePropertyStyled(borderTypeH, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidthH = getResponsiveSetting(settings, 'column_style_border_width', '.active');\r\n  }\r\n\r\n  if (borderWidthH) {\r\n    styles += borderWidthStyled(borderWidthH);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColorH = getResponsiveSetting(settings, 'column_style_border_color', '.active');\r\n  }\r\n\r\n  if (borderColorH) {\r\n    styles += colorPropertyStyled(borderColorH, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadiusH = getResponsiveSetting(settings, 'column_style_border_radius', '.active');\r\n  }\r\n\r\n  if (borderRadiusH) {\r\n    styles += sizeStyled(borderRadiusH, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения box-shadow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    boxShadowH = getResponsiveSetting(settings, 'column_style_box_shadow', '.active');\r\n  }\r\n\r\n  if (boxShadowH) {\r\n    styles += shadowStyled(boxShadowH);\r\n  }\r\n\r\n  //</editor-fold>\r\n  return styles;\r\n};\r\n\r\nexport default ColumnComponent\r\n","import { styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n/**\r\n * @return {string}\r\n */\r\n\r\nexport default function DatePickerComponent(settings, elementId) {\r\n  const styles = [\r\n    `! div.altrp-date-picker${elementId}`,\r\n      [\"padding\", \"picker_padding\", \"dimensions\"],\r\n      [\"background-color\", \"picker_background\", \"color\"],\r\n      [\"border-style\", \"picker_border_type\"],\r\n      [\"border-width\", \"picker_border_width\", \"dimensions\"],\r\n      [\"border-color\", \"picker_border_color\", \"color\"],\r\n      [\"border-radius\", \"picker_border_radius\", \"dimensions\"],\r\n      [\"\", \"picker_shadow\", \"shadow\"],\r\n      [\"\", \"picker_typographic\", \"typographic\"],\r\n      \"bp3-datepicker-month-select select\",\r\n        [\"\", \"picker_month_typographic\", \"typographic\"],\r\n        [\"color\", \"picker_month_color\", \"color\"],\r\n      \"}\",\r\n      \"bp3-datepicker-year-select select\",\r\n        [\"\", \"picker_year_typographic\", \"typographic\"],\r\n        [\"color\", \"picker_year_color\", \"color\"],\r\n      \"}\",\r\n      \"bp3-icon > svg:not([fill])\",\r\n        [\"fill\", \"picker_icons_color\", \"color\"],\r\n      \"}\",\r\n      \"DayPicker-Weekday\",\r\n        [\"\", \"date_weekday_typographic\", \"typographic\"],\r\n        [\"color\", \"date_weekday_color\", \"color\"],\r\n      \"}\",\r\n      \"DayPicker-Day.DayPicker-Day.DayPicker-Day\",\r\n        [\"\", \"date_selected_typographic\", \"typographic\"],\r\n        [\"background-color\", \"date_background_color\", \"color\"],\r\n        [\"color\", \"date_font_color\", \"color\"],\r\n        [\"border-radius\", \"date_radius\", \"dimensions\"],\r\n      \"}\",\r\n      \"DayPicker-Day.DayPicker-Day.DayPicker-Day:hover\",\r\n        [\"background-color\", \"date_background_color\", \"color\", \":hover\"],\r\n        [\"color\", \"date_font_color\", \"color\", \":hover\"],\r\n        [\"border-radius\", \"date_radius\", \"dimensions\", \":hover\"],\r\n      \"}\",\r\n      \"& div.DayPicker-Day--selected.DayPicker-Day--selected.DayPicker-Day--selected\",\r\n        [\"color\", \"date_selected_font_color\", \"color\"],\r\n        [\"background-color\", \"date_selected_background_color\", \"color\"],\r\n      \"}\",\r\n      \"& div.DayPicker-Day--selected.DayPicker-Day--selected.DayPicker-Day--selected:hover\",\r\n        [\"color\", \"date_selected_font_color\", \"color\", \":hover\"],\r\n        [\"background-color\", \"date_selected_background_color\", \"color\", \":hover\"],\r\n      \"}\",\r\n      \"DayPicker-Day--outside.DayPicker-Day--outside\",\r\n        [\"color\", \"date_outside_font_color\", \"color\"],\r\n        [\"background-color\", \"date_outside_background_color\", \"color\"],\r\n      \"}\",\r\n      \"DayPicker-Day--outside:hover\",\r\n        [\"color\", \"date_outside_font_color\", \"color\", \":hover\"],\r\n       [\"background-color\", \"date_outside_background_color\", \"color\", \":hover\"],\r\n      \"}\",\r\n    \"}\",\r\n\r\n    `! div.altrp-date-picker-popover-${elementId}`,\r\n      [\"\", \"picker_shadow\", \"shadow\"],\r\n      [\"border-radius\", \"picker_border_radius\", \"dimensions\"],\r\n\r\n      \"bp3-popover-arrow-fill\",\r\n        [\"fill\", \"picker_background\", \"color\"],\r\n      \"}\",\r\n\r\n      \"bp3-popover-content\",\r\n        [\"border-radius\", \"picker_border_radius\", \"dimensions\"],\r\n      \"}\",\r\n    \"}\"\r\n  ];\r\n  return styledString(styles, settings)\r\n}\r\n","import {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\nexport default function DiagramComponent(settings) {\r\n  const styles = [\r\n    \"altrp-dashboard__tooltip--margin\",\r\n      [\"margin\", \"style_margin_tooltip\", \"dimensions\"],\r\n      [\"padding\", \"style_padding_tooltip\", \"dimensions\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--width\",\r\n      [\"padding-top\", \"style_width_tooltip\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--font\",\r\n      [\"\", \"style_font_tooltip\", \"typographic\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--font-color\",\r\n      [\"color\", \"style_font_color_tooltip\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--label-background\",\r\n      [\"background-color\", \"style_background_color_tooltip\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--label-background-shadow\",\r\n      [\"background-color\", \"style_background_tooltip_shadow\", \"shadow\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--border-type\",\r\n      [\"border-style\", \"border_type_tooltip\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--border-width\",\r\n      [\"border-width\", \"border_width_tooltip\", \"dimensions\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--border-color\",\r\n      [\"border-color\", \"border_color_tooltip\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-diagram\",\r\n      [\"width\", \"width\", \"slider\"],\r\n      [\"height\", \"height\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-btn\",\r\n      [\"margin\", \"margin\", \"dimensions\"],\r\n    \"}\",\r\n  ];\r\n  return styledString(styles, settings)\r\n}\r\n","import {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n/**\r\n * @return {string}\r\n */\r\n\r\nexport default function DividerComponent(settings) {\r\n  const styles = [\r\n    \"altrp-divider-separator\",\r\n\r\n    [\"width\", \"divider_width\", \"slider\"],\r\n\r\n    \"}\",\r\n\r\n    \"&\",\r\n\r\n    [\"align-items\", \"divider_alignment\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-divider\",\r\n\r\n    [\"margin\", \"position_margin\", \"dimensions\"],\r\n    [\"z-index\", \"position_z_index\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"divider_style_gap\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return ` padding-top: ${slider}; padding-bottom: ${slider}; `\r\n      }\r\n    },\r\n\r\n    \"}\",\r\n\r\n    \"altrp-divider-label\",\r\n\r\n    [\"color\", \"text_style_color\", \"color\"],\r\n    [\"\", \"text_style_typographic\", \"typographic\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-divider .altrp-divider-separator\",\r\n    [\"border-color\", \"divider_style_color\", \"color\"],\r\n    \"}\",\r\n    \"altrp-divider.active\",\r\n\r\n    [\"margin\", \"position_margin\", \"dimensions\", \".active\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"divider_style_gap\", \".active\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return ` padding-top: ${slider}; padding-bottom: ${slider}; `\r\n      }\r\n    },\r\n\r\n    \"& .altrp-divider-label\",\r\n\r\n    [\"color\", \"text_style_color\", \"color\", \".active\"],\r\n\r\n    \"}\",\r\n\r\n    \"}\",\r\n    \"altrp-divider.active .altrp-divider-separator\",\r\n    [\"border-color\", \"divider_style_color\", \"color\", \".active\"],\r\n    \"}\",\r\n\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","import {sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\nimport {btnStyles} from \"./ButtonComponent\";\r\n\r\n/**\r\n * @return {string}\r\n */\r\nexport default function DropbarWidgetComponent(settings) {\r\n\r\n  const styles = [\r\n    ...btnStyles(settings)\r\n  ];\r\n\r\n  return styledString(styles, settings) + \"& .altrp-btn-wrapper{display:flex;flex-direction:column;}\";\r\n}\r\n","import { getResponsiveSetting } from \"../../../../../../front-app/src/js/helpers\";\r\nimport {\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  simplePropertyStyled,\r\n  colorPropertyStyled,\r\n  borderWidthStyled,\r\n  shadowControllerToStyles,\r\n  sizeStyled\r\n} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n/**\r\n * Стили для класса .altrp-input-wrapper\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst inputWrapperStyle = settings => {\r\n  let styles = `&& .altrp-input-wrapper {`;\r\n  let width;\r\n  //width begin\r\n  settings && (width = getResponsiveSetting(settings, \"field_width\"));\r\n  width && (styles += sizeStyled(width, \"width\"));\r\n  //width end\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field-container\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst containerStyle = settings => {\r\n  let styles = `&& .altrp-field-container {`;\r\n  let margin;\r\n\r\n  //margin begin\r\n  settings && (margin = getResponsiveSetting(settings, \"position_margin\"));\r\n  margin && (styles += dimensionsControllerToStyles(margin, \"margin\"));\r\n  //margin end\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldStyle = settings => {\r\n  let styles = `&& .altrp-field {`;\r\n  let padding,\r\n    color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  const {\r\n    placeholder_and_value_alignment_position_section,\r\n    position_z_index,\r\n    input_position,\r\n    textarea_resize,\r\n    justify_options,\r\n    image_select_item_width,\r\n    image_select_item_height,\r\n    image_select_image_fit,\r\n    image_select_image_position,\r\n    cross_size\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"position_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\"));\r\n  borderType &&\r\n    (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n    (borderRadius = getResponsiveSetting(\r\n      settings,\r\n      \"global_filter_input_border_radius\"\r\n    ));\r\n  borderRadius &&\r\n    (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"background_style_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n    (styles += `text-align:${placeholder_and_value_alignment_position_section};`);\r\n\r\n  position_z_index && (styles += `z-index:${position_z_index};`);\r\n  textarea_resize && (styles += `resize:${textarea_resize};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-option{\";\r\n\r\n  input_position && (styles += `flex-direction:${input_position};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select{\";\r\n\r\n  justify_options && (styles += `justify-content:${justify_options};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select>.altrp-field{\";\r\n\r\n  image_select_item_width &&\r\n    (styles += `width:${image_select_item_width.size}${image_select_item_width.unit};`);\r\n\r\n  image_select_item_height &&\r\n    (styles += `height:${image_select_item_height.size}${image_select_item_height.unit};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select img{\";\r\n  image_select_image_fit && (styles += `object-fit:${image_select_image_fit};`);\r\n  image_select_image_position &&\r\n    (styles += `object-position:${image_select_image_position};`);\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .input-clear-btn{\";\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"cross_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  //TODO не нашел как активировать эту штуку\r\n  //cross_size && (styles += `font-size:${cross_size.size}${cross_size.unit};`);\r\n\r\n  styles += \"}\";\r\n\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field-select2__control\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldSelect2ControlStyle = settings => {\r\n  let styles = `&& .altrp-field-select2__control {`;\r\n  let padding,\r\n    color,\r\n    backgroundColor,\r\n    borderType,\r\n    borderColor,\r\n    borderWidth,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  const {\r\n    placeholder_and_value_alignment_position_section,\r\n    position_z_index\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"position_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\"));\r\n  borderType &&\r\n    (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n    (borderRadius = getResponsiveSetting(\r\n      settings,\r\n      \"global_filter_input_border_radius\"\r\n    ));\r\n  borderRadius &&\r\n    (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"background_style_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n    (styles += `text-align:${placeholder_and_value_alignment_position_section}`);\r\n  position_z_index && (styles += `z-index:${position_z_index};`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-image-select__label\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst imageSelectLabel = settings => {\r\n  let styles = `&& .altrp-image-select__label {`;\r\n  let color, typographic;\r\n\r\n  const { placeholder_and_value_alignment_position_section } = settings;\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n    (styles += `text-align:${placeholder_and_value_alignment_position_section}`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-select2__single-value\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldSelect2SingleValueStyle = settings => {\r\n  let styles = `&& .altrp-field-select2__single-value {`;\r\n  let typographic, color;\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label-container\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabelContainerStyle = settings => {\r\n  let styles = `&& .altrp-field-label-container {`;\r\n  let backgroundColor, padding, width;\r\n  const {\r\n    label_position_top,\r\n    label_position_left,\r\n    label_icon_position\r\n  } = settings;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"label_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"label_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (width = getResponsiveSetting(settings, \"label_width\"));\r\n  width && (styles += `${sizeStyled(width, \"width\")};flex-shrink: 0;`);\r\n\r\n  label_position_top && (styles += `top:${label_position_top};`);\r\n  label_position_left && (styles += `left:${label_position_left};`);\r\n  label_icon_position && (styles += `flex-direction:${label_icon_position};`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabel = settings => {\r\n  let styles = `&& .altrp-field-label {`;\r\n  let color, typographic;\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"label_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"label_style_font_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-label-icon\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst labelIconStyle = settings => {\r\n  let styles = `&& .altrp-label-icon {`;\r\n  let padding, backgroundColor, iconSize;\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"icon_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (iconSize = getResponsiveSetting(settings, \"icon_size\"));\r\n  iconSize &&\r\n    (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  //for path\r\n  styles += `&& .altrp-label-icon path{`;\r\n\r\n  settings && (backgroundColor = getResponsiveSetting(settings, \"icon_color\"));\r\n  backgroundColor && (styles += colorPropertyStyled(backgroundColor, \"fill\"));\r\n\r\n  styles += \"}\";\r\n  //for svg\r\n  styles += `&& .altrp-label-icon svg{`;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(settings, \"icon_color_background\"));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background\"));\r\n  iconSize &&\r\n    (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  //for img\r\n  styles += `&& .altrp-label-icon img{`;\r\n\r\n  iconSize &&\r\n    (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для классов\r\n * altrp-field::placeholder\r\n * altrp-field-select2__placeholder\r\n * altrp-field-file__placeholder\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst placeholderStyle = settings => {\r\n  let styles = `&& .altrp-field::placeholder{`;\r\n  let color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderColor,\r\n    borderWidth,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"placeholder_style_font_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"background_style_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-select2__placeholder{`;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"background_style_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-file__placeholder{`;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\"));\r\n  borderType &&\r\n    (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n    (borderRadius = getResponsiveSetting(\r\n      settings,\r\n      \"global_filter_input_border_radius\"\r\n    ));\r\n  borderRadius &&\r\n    (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"background_style_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"placeholder_style_font_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label--required::after\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabelRequired = settings => {\r\n  let styles = `&& .altrp-field-label--required::after{`;\r\n  let color, typographic;\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"required_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"required_style_font_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-select2__option\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldSelect2Option = (settings, id) => {\r\n  let styles = `.${id}.altrp-field-select2__option{`;\r\n  let backgroundColor;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"option_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(\r\n      backgroundColor,\r\n      \"background-color\",\r\n      \"!important\"\r\n    ));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `.${id}.altrp-field-select2__option.altrp-field-select2__option--is-focused{`;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"option_focused_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(\r\n      backgroundColor,\r\n      \"background-color\",\r\n      \"!important\"\r\n    ));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `.${id}.altrp-field-select2__option.altrp-field-select2__option--is-selected{`;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"option_selected_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(\r\n      backgroundColor,\r\n      \"background-color\",\r\n      \"!important\"\r\n    ));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса mask-mismatch-message\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst maskMismatchMessage = (settings, id) => {\r\n  let styles = `&& .mask-mismatch-message{`;\r\n  let margin, padding, color, typographic;\r\n\r\n  settings &&\r\n    (margin = getResponsiveSetting(settings, \"mismatch_message_margin\"));\r\n  margin && (styles += dimensionsControllerToStyles(margin, \"margin\"));\r\n\r\n  settings &&\r\n    (padding = getResponsiveSetting(settings, \"mismatch_message_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(margin, \"padding\"));\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"mismatch_message_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"mismatch_message_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n//Точка входа\r\nfunction FormComponent(settings) {\r\n  let styles = \"\";\r\n  const { background_section_opacity } = settings;\r\n  //for all element\r\n  background_section_opacity &&\r\n    (styles += `opacity:${background_section_opacity.size};`);\r\n  //altrp-input-wrapper\r\n  const inputWrapperStyles = inputWrapperStyle(settings);\r\n  inputWrapperStyles && (styles += inputWrapperStyles);\r\n  //altrp-field-container\r\n  const containerStyles = containerStyle(settings);\r\n  containerStyles && (styles += containerStyles);\r\n  //altrp-field\r\n  const fieldStyles = fieldStyle(settings);\r\n  fieldStyles && (styles += fieldStyles);\r\n  //altrp-field-select2__control\r\n  const filedSelect2ControllerStyles = fieldSelect2ControlStyle(settings);\r\n  filedSelect2ControllerStyles && (styles += filedSelect2ControllerStyles);\r\n  //altrp-image-select__label\r\n  const imageSelectLabelStyles = imageSelectLabel(settings);\r\n  imageSelectLabelStyles && (styles += imageSelectLabelStyles);\r\n  //altrp-field-select2__single-value\r\n  const fieldSelect2SingleValueStyles = fieldSelect2SingleValueStyle(settings);\r\n  fieldSelect2SingleValueStyles && (styles += fieldSelect2SingleValueStyles);\r\n  //altrp-field-select2__single-value\r\n  const fieldLabelContainerStyles = fieldLabelContainerStyle(settings);\r\n  fieldLabelContainerStyles && (styles += fieldLabelContainerStyles);\r\n  //altrp-field-label\r\n  const fieldLabelStyles = fieldLabel(settings);\r\n  fieldLabelStyles && (styles += fieldLabelStyles);\r\n  //altrp-label-icon\r\n  const labelIconStyles = labelIconStyle(settings);\r\n  labelIconStyles && (styles += labelIconStyles);\r\n  //altrp-field::placeholder altrp-field-select2__placeholder altrp-field-file__placeholder\r\n  const placeholderStyles = placeholderStyle(settings);\r\n  placeholderStyles && (styles += placeholderStyles);\r\n  //altrp-field-label--required::after\r\n  const fieldLabelRequiredStyles = fieldLabelRequired(settings);\r\n  fieldLabelRequiredStyles && (styles += fieldLabelRequiredStyles);\r\n  //mask-mismatch-message\r\n  const maskMismatchMessageStyles = maskMismatchMessage(settings);\r\n  maskMismatchMessageStyles && (styles += maskMismatchMessageStyles);\r\n  //finish\r\n  return styles;\r\n}\r\nexport default {\r\n  FormComponent: FormComponent,\r\n  select2Options: fieldSelect2Option\r\n};\r\n","import {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\nimport {defaultStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n/**\r\n * @return {string}\r\n */\r\n\r\nexport default function GalleryComponent(settings) {\r\n  const styles = [\r\n    \"altrp-gallery-img\",\r\n\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"aspect_ratio_grid_settings\");\r\n      let aspectRatio = \"100%\";\r\n\r\n      switch (value) {\r\n        case \"3to2\":\r\n          aspectRatio = \"66.6667%\";\r\n          break\r\n        case \"4to3\":\r\n          aspectRatio = \"75%\";\r\n          break\r\n        case \"9to16\":\r\n          aspectRatio = \"177.778%\";\r\n          break\r\n        case \"16to9\":\r\n          aspectRatio = \"56.25%\";\r\n          break\r\n        case \"21to9\":\r\n          aspectRatio = \"42.8571%\";\r\n          break\r\n      }\r\n\r\n      return `padding-bottom: ${aspectRatio}`\r\n    },\r\n\r\n    \"}\",\r\n\r\n    \"altrp-gallery-img-container\",\r\n\r\n    [\"border-style\", \"border_type\"],\r\n    [\"border-width\", \"border_width\", \"dimensions\"],\r\n    [\"border-color\", \"border_color\", \"color\"],\r\n    [\"border-radius\", \"border_radius\", \"dimensions\"],\r\n\r\n    \"}\",\r\n\r\n    \".altrp-gallery-img-container:hover .altrp-gallery-img-container\",\r\n\r\n    [\"border-style\", \"border_type\", \":hover\"],\r\n    [\"border-width\", \"border_width\", \"dimensions\", \":hover\"],\r\n    [\"border-color\", \"border_color\", \"color\", \":hover\"],\r\n    [\"border-radius\", \"border_radius\", \"dimensions\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-gallery-overlay-bg\",\r\n\r\n    [\"background-color\", \"overlay_background_color\", \"color\"],\r\n    [\"\", \"overlay_background_gradient\", \"gradient\"],\r\n    [\"mix-blend-mode\", \"blend_mode\"],\r\n\r\n    \"}\",\r\n\r\n    \".altrp-gallery-img-container:hover .altrp-gallery-overlay-bg\",\r\n\r\n    [\"background-color\", \"overlay_background_color\", \"color\", \":hover\"],\r\n    [\"\", \"overlay_background_gradient\", \"gradient\", \":hover\"],\r\n    [\"mix-blend-mode\", \"blend_mode\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-gallery-overlay\",\r\n\r\n    [\"align-items\", \"overlay_content_alignment\"],\r\n    [\"justify-content\", \"overlay_content_vertical\"],\r\n    [\"padding\", \"overlay_content_padding\", \"dimensions\"],\r\n\r\n    \"}\",\r\n\r\n    \".altrp-gallery-img-container:hover .altrp-gallery-overlay\",\r\n\r\n    [\"align-items\", \"overlay_content_alignment\", \":hover\"],\r\n    [\"justify-content\", \"overlay_content_vertical\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-gallery-overlay-title\",\r\n\r\n    [\"color\", \"overlay_title_color\", \"color\"],\r\n    [\"\", \"overlay_title_typographic\", \"typographic\"],\r\n    [\"margin-bottom\", \"overlay_title_spacing\", \"slider\"],\r\n\r\n    \"}\",\r\n\r\n    \".altrp-gallery-img-container:hover .altrp-gallery-overlay-title\",\r\n\r\n    [\"color\", \"overlay_title_color\", \"color\", \":hover\"],\r\n    [\"\", \"overlay_title_typographic\", \"typographic\", \":hover\"],\r\n    [\"margin-bottom\", \"overlay_title_spacing\", \"slider\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-gallery-overlay-description\",\r\n\r\n    [\"color\", \"overlay_description_color\", \"color\"],\r\n    [\"\", \"overlay_description_typographic\", \"typographic\"],\r\n\r\n    \"}\",\r\n\r\n    \".altrp-gallery-img-container:hover .altrp-gallery-overlay-description\",\r\n\r\n    [\"color\", \"overlay_description_color\", \"color\", \":hover\"],\r\n    [\"\", \"overlay_description_typographic\", \"typographic\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-gallery-grid\",\r\n\r\n    [\"grid-gap\", \"spacing_grid_settings\", \"slider\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"columns_grid_settings\");\r\n      const def = defaultStyled(value);\r\n\r\n      if(def) {\r\n        return `grid-template-columns: repeat(${def}, 1fr);`\r\n      }\r\n    },\r\n\r\n    \"}\"\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","import { getResponsiveSetting } from \"../../../../../../front-app/src/js/helpers\";\r\nimport {\r\n  dimensionsControllerToStyles,\r\n  gradientStyled,\r\n  filtersControllerToStyles,\r\n  simplePropertyStyled,\r\n  colorPropertyStyled,\r\n  sizeStyled,\r\n  opacityStyled,\r\n  borderWidthStyled,\r\n  backgroundImageControllerToStyles,\r\n} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n\r\nconst ImageLightboxComponent = (settings,id)=>{\r\n  let styles = '';\r\n\r\n  let objectFit, height, width, margin, padding, zIndex, opacity, borderType, filters;\r\n  let borderWidth, borderColor, borderRadius, transitionDuration, animationDuration, backgroundColor, backgroundColorHover, gradient;\r\n  let justifyContent;\r\n  let backgroundImage, backgroundPosition, backgroundAttachment, backgroundRepeat,backgroundSizeInUnit, backgroundSize;\r\n\r\n  const parentClass = `.altrp-element${id}`;\r\n\r\n  styles += `${parentClass} .altrp-image {`;\r\n\r\n  //Получаем значения object-fit из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    objectFit = getResponsiveSetting(settings, 'image_fit_size');\r\n  }\r\n\r\n  if (objectFit) {\r\n    styles += simplePropertyStyled(objectFit, 'object-fit');\r\n  }\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'background_color');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  //Получаем значения gradient из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    gradient = getResponsiveSetting(settings, 'gradient');\r\n  }\r\n\r\n  if (gradient) {\r\n    styles += gradientStyled(gradient);\r\n  }\r\n\r\n  //Получаем значения filters из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    filters = getResponsiveSetting(settings, 'image_style_text_shadow');\r\n  }\r\n\r\n  if (filters) {\r\n    styles += filtersControllerToStyles(filters);\r\n  }\r\n\r\n  //Получаем значения height из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    height = getResponsiveSetting(settings, 'height_size');\r\n  }\r\n\r\n  if (height) {\r\n    if(height.size !== \"0\") {\r\n      styles += sizeStyled(height, 'height');\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  //Получаем значения width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    width = getResponsiveSetting(settings, 'width_size');\r\n  }\r\n\r\n  if (width) {\r\n    styles += sizeStyled(width, 'width');\r\n  }\r\n\r\n  //Получаем значения margin из контроллера, обрабатываем и добавляем в styles\r\n  //Свойство margin было убрано из Контроллера у виджета Image. Перенес сюда на всякий случай, так как были активные rules в Image.js\r\n\r\n  if (settings !== undefined) {\r\n    margin = getResponsiveSetting(settings, 'position_margin');\r\n  }\r\n\r\n  if (margin) {\r\n    styles += dimensionsControllerToStyles(margin, 'margin');\r\n  }\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'position_padding');\r\n  }\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  //Получаем значения z-index из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    zIndex = getResponsiveSetting(settings, 'position_z_index');\r\n  }\r\n\r\n  if (zIndex) {\r\n    styles += simplePropertyStyled(zIndex, 'z-index');\r\n  }\r\n\r\n  //Получаем значения opacity из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    opacity = getResponsiveSetting(settings, 'opacity_overlay');\r\n  }\r\n\r\n  if (opacity) {\r\n    styles += opacityStyled(opacity);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderType = getResponsiveSetting(settings, 'border_type');\r\n  }\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'border_width');\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'border_color');\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'border_radius');\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += sizeStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения transition-duration в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    transitionDuration = getResponsiveSetting(settings, 'creative_hover_controller');\r\n  }\r\n\r\n  if (transitionDuration) {\r\n    styles += sizeStyled(transitionDuration, 'transition-duration');\r\n  }\r\n\r\n  //Получаем значения animation-duration в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    animationDuration = getResponsiveSetting(settings, 'creative_hover_controller');\r\n  }\r\n\r\n  if (animationDuration) {\r\n    styles += sizeStyled(animationDuration, 'animation-duration');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-image:hover {`;\r\n\r\n  //Получаем значения object-fit из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    objectFit = getResponsiveSetting(settings, 'image_fit_size', ':hover');\r\n  }\r\n\r\n  if (objectFit) {\r\n    styles += simplePropertyStyled(objectFit, 'object-fit');\r\n  }\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'background_color', ':hover');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  //Получаем значения gradient из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    gradient = getResponsiveSetting(settings, 'gradient', ':hover');\r\n  }\r\n\r\n  if (gradient) {\r\n    styles += gradientStyled(gradient);\r\n  }\r\n\r\n  //Получаем значения filters из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    filters = getResponsiveSetting(settings, 'image_style_text_shadow', ':hover');\r\n  }\r\n\r\n  if (filters) {\r\n    styles += filtersControllerToStyles(filters);\r\n  }\r\n\r\n  //Получаем значения height из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    height = getResponsiveSetting(settings, 'height_size', ':hover');\r\n  }\r\n\r\n  if (height) {\r\n    if(height.size !== \"0\") {\r\n      styles += sizeStyled(height, 'height');\r\n    }\r\n  }\r\n\r\n  //Получаем значения width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    width = getResponsiveSetting(settings, 'width_size', ':hover');\r\n  }\r\n\r\n  if (width) {\r\n    styles += sizeStyled(width, 'width');\r\n  }\r\n\r\n  //Получаем значения margin из контроллера, обрабатываем и добавляем в styles\r\n  //Свойство margin было убрано из Контроллера у виджета Image. Перенес сюда на всякий случай, так как были активные rules в Image.js\r\n\r\n  if (settings !== undefined) {\r\n    margin = getResponsiveSetting(settings, 'position_margin', ':hover');\r\n  }\r\n\r\n  if (margin) {\r\n    styles += dimensionsControllerToStyles(margin, 'margin');\r\n  }\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'position_padding', ':hover');\r\n  }\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  //Получаем значения z-index из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    zIndex = getResponsiveSetting(settings, 'position_z_index', ':hover');\r\n  }\r\n\r\n  if (zIndex) {\r\n    styles += simplePropertyStyled(zIndex, 'z-index');\r\n  }\r\n\r\n  //Получаем значения opacity из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    opacity = getResponsiveSetting(settings, 'opacity_overlay', ':hover');\r\n  }\r\n\r\n  if (opacity) {\r\n    styles += opacityStyled(opacity);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderType = getResponsiveSetting(settings, 'border_type', ':hover');\r\n  }\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'border_width', ':hover');\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'border_color', ':hover');\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'border_radius', ':hover');\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += sizeStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения transition-duration в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    transitionDuration = getResponsiveSetting(settings, 'creative_hover_controller', ':hover');\r\n  }\r\n\r\n  if (transitionDuration) {\r\n    styles += sizeStyled(transitionDuration, 'transition-duration');\r\n  }\r\n\r\n  //Получаем значения animation-duration в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    animationDuration = getResponsiveSetting(settings, 'creative_hover_controller', ':hover');\r\n  }\r\n\r\n  if (animationDuration) {\r\n    styles += sizeStyled(animationDuration, 'animation-duration');\r\n  }\r\n\r\n  styles+=\"} \";\r\n\r\n  styles+=`${parentClass} .altrp-image-container {`;\r\n\r\n  //Получаем значения justify-content из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    justifyContent = getResponsiveSetting(settings, 'image_style_alignment');\r\n  }\r\n\r\n  if (justifyContent) {\r\n    styles += simplePropertyStyled(justifyContent, 'justify-content');\r\n  }\r\n\r\n  styles+=\"} \";\r\n\r\n  styles+=`${parentClass} .altrp-image-container:hover {`;\r\n\r\n  //Получаем значения justify-content из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    justifyContent = getResponsiveSetting(settings, 'image_style_alignment', ':hover');\r\n  }\r\n\r\n  if (justifyContent) {\r\n    styles += simplePropertyStyled(justifyContent, 'justify-content');\r\n  }\r\n\r\n  styles+=\"} \";\r\n\r\n  styles+=`${parentClass} .altrp-background-image {`;\r\n\r\n  //Получаем значения background-image из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundImage = getResponsiveSetting(settings, 'background_image');\r\n  }\r\n\r\n  if (backgroundImage) {\r\n    styles += backgroundImageControllerToStyles(backgroundImage);\r\n  }\r\n\r\n  //Получаем значения background-position из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundPosition = getResponsiveSetting(settings, 'background_position');\r\n  }\r\n\r\n  if (backgroundPosition) {\r\n    styles += simplePropertyStyled(backgroundPosition, 'background-position');\r\n  }\r\n\r\n  //Получаем значения background-attachment из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundAttachment = getResponsiveSetting(settings, 'background_attachment');\r\n  }\r\n\r\n  if (backgroundAttachment) {\r\n    styles += simplePropertyStyled(backgroundAttachment, 'background-attachment');\r\n  }\r\n\r\n  //Получаем значения background-repeat из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundRepeat = getResponsiveSetting(settings, 'background_repeat');\r\n  }\r\n\r\n  if (backgroundRepeat) {\r\n    styles += simplePropertyStyled(backgroundRepeat, 'background-repeat');\r\n  }\r\n\r\n  //Получаем значения background-size в конкретных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSizeInUnit = getResponsiveSetting(settings, 'background_image_width');\r\n  }\r\n\r\n  if (backgroundSizeInUnit) {\r\n    styles += sizeStyled(backgroundSizeInUnit, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-size из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSize = getResponsiveSetting(settings, 'background_size');\r\n  }\r\n\r\n  if (backgroundSize) {\r\n    styles += simplePropertyStyled(backgroundSize, 'background-size');\r\n  }\r\n\r\n  styles+=\"} \";\r\n\r\n  styles+=`${parentClass} .altrp-background-image:hover {`;\r\n\r\n  //Получаем значения background-image из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundImage = getResponsiveSetting(settings, 'background_image', ':hover');\r\n  }\r\n\r\n  if (backgroundImage) {\r\n    styles += backgroundImageControllerToStyles(backgroundImage);\r\n  }\r\n\r\n  //Получаем значения background-position из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundPosition = getResponsiveSetting(settings, 'background_position', ':hover');\r\n  }\r\n\r\n  if (backgroundPosition) {\r\n    styles += simplePropertyStyled(backgroundPosition, 'background-position');\r\n  }\r\n\r\n  //Получаем значения background-attachment из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundAttachment = getResponsiveSetting(settings, 'background_attachment', ':hover');\r\n  }\r\n\r\n  if (backgroundAttachment) {\r\n    styles += simplePropertyStyled(backgroundAttachment, 'background-attachment');\r\n  }\r\n\r\n  //Получаем значения background-repeat из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundRepeat = getResponsiveSetting(settings, 'background_repeat', ':hover');\r\n  }\r\n\r\n  if (backgroundRepeat) {\r\n    styles += simplePropertyStyled(backgroundRepeat, 'background-repeat');\r\n  }\r\n\r\n  //Получаем значения background-size в конкретных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSizeInUnit = getResponsiveSetting(settings, 'background_image_width', ':hover');\r\n  }\r\n\r\n  if (backgroundSizeInUnit) {\r\n    styles += sizeStyled(backgroundSizeInUnit, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-size из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSize = getResponsiveSetting(settings, 'background_size', ':hover');\r\n  }\r\n\r\n  if (backgroundSize) {\r\n    styles += simplePropertyStyled(backgroundSize, 'background-size');\r\n  }\r\n\r\n  styles+=\"} \";\r\n\r\n  let aspect_ratio_size;\r\n\r\n  if (settings !== undefined) {\r\n    aspect_ratio_size = getResponsiveSetting(settings, 'aspect_ratio_size');\r\n    if(Number(aspect_ratio_size) !== 0) {\r\n      styles+= 'padding:0;';\r\n    }\r\n    else{\r\n      padding = getResponsiveSetting(settings, 'position_padding');\r\n      styles +=dimensionsControllerToStyles(padding);\r\n    }\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nexport default ImageLightboxComponent;\r\n","import { getResponsiveSetting } from \"../../../../../../front-app/src/js/helpers\";\r\nimport {\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  simplePropertyStyled,\r\n  colorPropertyStyled,\r\n  borderWidthStyled,\r\n  shadowControllerToStyles,\r\n  sizeStyled, sliderStyled, defaultStyled, colorStyled\r\n} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n/**\r\n * Стили для класса .altrp-input-wrapper\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst inputWrapperStyle = settings => {\r\n  let styles = `&& .altrp-input-wrapper {`;\r\n  let width;\r\n  //width begin\r\n  settings && (width = getResponsiveSetting(settings, \"field_width\"));\r\n  width && (styles += sizeStyled(width, \"width\"));\r\n  //width end\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field-container\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst containerStyle = settings => {\r\n  let styles = `&& .altrp-field-container {`;\r\n  let margin;\r\n\r\n  //margin begin\r\n  settings && (margin = getResponsiveSetting(settings, \"position_margin\"));\r\n  margin && (styles += dimensionsControllerToStyles(margin, \"margin\"));\r\n  //margin end\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldStyle = settings => {\r\n  let styles = `&& .altrp-field, && .altrp-field-checkbox .bp3-control-indicator {`;\r\n  let padding,\r\n    color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow,\r\n    size\r\n  ;\r\n\r\n  const {\r\n    placeholder_and_value_alignment_position_section,\r\n    position_z_index,\r\n    input_position,\r\n    textarea_resize,\r\n    justify_options,\r\n    image_select_item_width,\r\n    image_select_item_height,\r\n    image_select_image_fit,\r\n    image_select_image_position,\r\n    cross_size\r\n  } = settings;\r\n\r\n  settings && (size = getResponsiveSetting(settings, \"field_size\"));\r\n  size && (styles += `height:${sliderStyled(size)};width:${sliderStyled(size)};`);\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  // settings &&\r\n  // (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  // typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"position_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  // settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  // color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"border_radius\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n  (styles += `text-align:${placeholder_and_value_alignment_position_section};`);\r\n\r\n  position_z_index && (styles += `z-index:${position_z_index};`);\r\n  textarea_resize && (styles += `resize:${textarea_resize};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field, && .altrp-field-checkbox .bp3-control-indicator:before {`;\r\n\r\n\r\n  // settings &&\r\n  // (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  // typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  size && (styles += `height:${sliderStyled(size)};width:${sliderStyled(size)};`);\r\n\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  // settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  // color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  // settings &&\r\n  // (borderRadius = getResponsiveSetting(\r\n  //   settings,\r\n  //   \"global_filter_input_border_radius\"\r\n  // ));\r\n  // borderRadius &&\r\n  // (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-radio-group {`;\r\n\r\n  let fieldAlignment;\r\n\r\n  settings && (fieldAlignment = getResponsiveSetting(settings, \"field_alignment\"));\r\n  fieldAlignment && (styles += `justify-content: ${defaultStyled(fieldAlignment)};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-option:hover span.bp3-control-indicator.bp3-control-indicator {\";\r\n\r\n  let backgroundColorHover;\r\n\r\n  settings && (backgroundColorHover = getResponsiveSetting(settings, \"background_style_background_color\", \":hover\"));\r\n\r\n  backgroundColorHover && (styles += colorStyled(backgroundColorHover, \"background-color\"));\r\n\r\n  let boxShadowHover;\r\n\r\n  settings && (boxShadowHover = getResponsiveSetting(settings, \"box_shadow\", \":hover\"));\r\n  boxShadowHover && (styles += shadowControllerToStyles(boxShadowHover));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-option label.altrp-field-option__label {\";\r\n\r\n  let fontTypographic;\r\n\r\n  settings &&\r\n  (fontTypographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  fontTypographic && (styles += typographicControllerToStyles(fontTypographic));\r\n\r\n  let fontColor;\r\n\r\n  settings && (fontColor = getResponsiveSetting(settings, \"field_font_color\"));\r\n  fontColor && (styles += colorPropertyStyled(fontColor, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-option:hover label.altrp-field-option__label {\";\r\n\r\n  let fontTypographicHover;\r\n\r\n  settings &&\r\n  (fontTypographicHover = getResponsiveSetting(settings, \"field_font_typographic\", \":hover\"));\r\n  fontTypographicHover && (styles += typographicControllerToStyles(fontTypographicHover));\r\n\r\n  let fontColorHover;\r\n\r\n  settings && (fontColorHover = getResponsiveSetting(settings, \"field_font_color\", \":hover\"));\r\n  fontColorHover && (styles += colorPropertyStyled(fontColorHover, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-option.active label.altrp-field-option__label {\";\r\n\r\n  let fontTypographicActive;\r\n\r\n  settings &&\r\n  (fontTypographicActive = getResponsiveSetting(settings, \"field_font_typographic\", \".active\"));\r\n  fontTypographicActive && (styles += typographicControllerToStyles(fontTypographicActive));\r\n\r\n  let fontColorActive;\r\n\r\n  settings && (fontColorActive = getResponsiveSetting(settings, \"field_font_color\", \".active\"));\r\n  fontColorActive && (styles += colorPropertyStyled(fontColorActive, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-option.active span.bp3-control-indicator.bp3-control-indicator   {\";\r\n\r\n  let backgroundColorActive;\r\n\r\n  settings && (backgroundColorActive = getResponsiveSetting(settings, \"background_style_background_color\", \".active\"));\r\n\r\n  backgroundColorActive && (styles += colorStyled(backgroundColorActive, \"background-color\"));\r\n\r\n  let boxShadowActive;\r\n\r\n  settings && (boxShadowActive = getResponsiveSetting(settings, \"box_shadow\", \".active\"));\r\n  boxShadowActive && (styles += shadowControllerToStyles(boxShadowActive));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-option{\";\r\n\r\n  input_position && (styles += `flex-direction:${input_position};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select{\";\r\n\r\n  justify_options && (styles += `justify-content:${justify_options};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select>.altrp-field{\";\r\n\r\n  image_select_item_width &&\r\n  (styles += `width:${image_select_item_width.size}${image_select_item_width.unit};`);\r\n\r\n  image_select_item_height &&\r\n  (styles += `height:${image_select_item_height.size}${image_select_item_height.unit};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select img{\";\r\n  image_select_image_fit && (styles += `object-fit:${image_select_image_fit};`);\r\n  image_select_image_position &&\r\n  (styles += `object-position:${image_select_image_position};`);\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .input-clear-btn{\";\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"cross_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  //TODO не нашел как активировать эту штуку\r\n  //cross_size && (styles += `font-size:${cross_size.size}${cross_size.unit};`);\r\n  styles += \"}\";\r\n\r\n  styles += \"}\";\r\n\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field-option:hover\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldStyleHover = settings => {\r\n  let styles = `&& .altrp-field, && .altrp-field-option:hover .altrp-field-checkbox .bp3-control-indicator {`;\r\n  let backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow\r\n  ;\r\n\r\n  const {\r\n    placeholder_and_value_alignment_position_section,\r\n    position_z_index,\r\n    textarea_resize,\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\", \":hover\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\", \":hover\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\", \":hover\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\", \":hover\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"border_radius\",\r\n    \":hover\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\",\r\n    \":hover\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n  (styles += `text-align:${placeholder_and_value_alignment_position_section};`);\r\n\r\n  position_z_index && (styles += `z-index:${position_z_index};`);\r\n  textarea_resize && (styles += `resize:${textarea_resize};`);\r\n\r\n  styles += \"}\";\r\n\r\n  return styles\r\n};\r\n\r\nconst fieldStyleActive = settings => {\r\n  let styles = `&& .altrp-field, && .altrp-field-option.active .altrp-field-checkbox .bp3-control-indicator {`;\r\n  let backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow\r\n  ;\r\n\r\n  const {\r\n    placeholder_and_value_alignment_position_section,\r\n    position_z_index,\r\n    textarea_resize,\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\", \".active\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\", \".active\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\", \".active\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\", \".active\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"border_radius\",\r\n    \".active\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\",\r\n    \".active\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n  (styles += `text-align:${placeholder_and_value_alignment_position_section};`);\r\n\r\n  position_z_index && (styles += `z-index:${position_z_index};`);\r\n  textarea_resize && (styles += `resize:${textarea_resize};`);\r\n\r\n  styles += \"}\";\r\n\r\n  return styles\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field:hover\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldStyleFocus = settings => {\r\n  let styles = `&& .altrp-field:focus, && .bp3-input:focus {`;\r\n  let padding,\r\n    color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  const {\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\", \":focus\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\", \":focus\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\", \":focus\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\", \":focus\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\", \":focus\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"global_filter_input_border_radius\",\r\n    \":focus\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\",\r\n    \":focus\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  styles += \"&& .input-clear-btn{\";\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"cross_color\", \":focus\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  //TODO не нашел как активировать эту штуку\r\n  //cross_size && (styles += `font-size:${cross_size.size}${cross_size.unit};`);\r\n  styles += \"}\";\r\n  styles += \"}\";\r\n\r\n  return styles;\r\n};\r\n\r\n\r\n/**\r\n * Стили для класса altrp-image-select__label\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst imageSelectLabel = settings => {\r\n  let styles = `&& .altrp-image-select__label {`;\r\n  let color, typographic;\r\n\r\n  const { placeholder_and_value_alignment_position_section } = settings;\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n  (styles += `text-align:${placeholder_and_value_alignment_position_section}`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-select2__single-value\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldSelect2SingleValueStyle = settings => {\r\n  let styles = `&& .altrp-field-select2__single-value {`;\r\n  let typographic, color;\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label-container\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabelContainerStyle = settings => {\r\n  let styles = `&& .altrp-field-label-container {`;\r\n  let backgroundColor, padding, width;\r\n  const {\r\n    label_position_top,\r\n    label_position_left,\r\n    label_icon_position\r\n  } = settings;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"label_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"label_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (width = getResponsiveSetting(settings, \"label_width\"));\r\n  width && (styles += `${sizeStyled(width, \"width\")};flex-shrink: 0;`);\r\n\r\n  label_position_top && (styles += `top:${label_position_top};`);\r\n  label_position_left && (styles += `left:${label_position_left};`);\r\n  label_icon_position && (styles += `flex-direction:${label_icon_position};`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabel = settings => {\r\n  let styles = `&& .altrp-field-label {`;\r\n  let color, typographic;\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"label_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"label_style_font_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-label-icon\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst labelIconStyle = settings => {\r\n  let styles = `&& .altrp-label-icon {`;\r\n  let padding, backgroundColor, iconSize;\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"icon_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (iconSize = getResponsiveSetting(settings, \"icon_size\"));\r\n  iconSize &&\r\n  (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  //for path\r\n  styles += `&& .altrp-label-icon path{`;\r\n\r\n  settings && (backgroundColor = getResponsiveSetting(settings, \"icon_color\"));\r\n  backgroundColor && (styles += colorPropertyStyled(backgroundColor, \"fill\"));\r\n\r\n  styles += \"}\";\r\n  //for svg\r\n  styles += `&& .altrp-label-icon svg{`;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(settings, \"icon_color_background\"));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background\"));\r\n  iconSize &&\r\n  (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  //for img\r\n  styles += `&& .altrp-label-icon img{`;\r\n\r\n  iconSize &&\r\n  (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для классов\r\n * altrp-field::placeholder\r\n * altrp-field-select2__placeholder\r\n * altrp-field-file__placeholder\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst placeholderStyle = settings => {\r\n  let styles = `&& .altrp-field, && .bp3-input::placeholder{`;\r\n  let color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderColor,\r\n    borderWidth,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"placeholder_style_font_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-select2__placeholder{`;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-file__placeholder{`;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"global_filter_input_border_radius\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"placeholder_style_font_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label--required::after\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabelRequired = settings => {\r\n  let styles = `&& .altrp-field-label--required::after{`;\r\n  let color, typographic;\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"required_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"required_style_font_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-select2__option\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldSelect2Option = (settings, id) => {\r\n  let styles = `.${id}.altrp-field-select2__option{`;\r\n  let backgroundColor;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"option_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(\r\n    backgroundColor,\r\n    \"background-color\",\r\n    \"!important\"\r\n  ));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `.${id}.altrp-field-select2__option.altrp-field-select2__option--is-focused{`;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"option_focused_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(\r\n    backgroundColor,\r\n    \"background-color\",\r\n    \"!important\"\r\n  ));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `.${id}.altrp-field-select2__option.altrp-field-select2__option--is-selected{`;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"option_selected_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(\r\n    backgroundColor,\r\n    \"background-color\",\r\n    \"!important\"\r\n  ));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса mask-mismatch-message\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst maskMismatchMessage = (settings, id) => {\r\n  let styles = `&& .mask-mismatch-message{`;\r\n  let margin, padding, color, typographic;\r\n\r\n  settings &&\r\n  (margin = getResponsiveSetting(settings, \"mismatch_message_margin\"));\r\n  margin && (styles += dimensionsControllerToStyles(margin, \"margin\"));\r\n\r\n  settings &&\r\n  (padding = getResponsiveSetting(settings, \"mismatch_message_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(margin, \"padding\"));\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"mismatch_message_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"mismatch_message_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n//Точка входа\r\nfunction InputCheckboxComponent(settings) {\r\n\r\n  let styles = \"\";\r\n  const { background_section_opacity } = settings;\r\n  //for all element\r\n  background_section_opacity &&\r\n  (styles += `opacity:${background_section_opacity.size};`);\r\n  //altrp-input-wrapper\r\n  const inputWrapperStyles = inputWrapperStyle(settings);\r\n  inputWrapperStyles && (styles += inputWrapperStyles);\r\n  //altrp-field-container\r\n  const containerStyles = containerStyle(settings);\r\n  containerStyles && (styles += containerStyles);\r\n  //altrp-field\r\n  const fieldStyles = fieldStyle(settings);\r\n  fieldStyles && (styles += fieldStyles);\r\n  //altrp-field:hover\r\n  const fieldStylesHover = fieldStyleHover(settings);\r\n  fieldStylesHover && (styles += fieldStylesHover);\r\n  //altrp-field.active\r\n  const fieldStylesActive = fieldStyleActive(settings);\r\n  fieldStylesActive && (styles += fieldStylesActive);\r\n  //altrp-field:focus\r\n  const fieldStylesFocus = fieldStyleFocus(settings);\r\n  fieldStylesFocus && (styles += fieldStylesFocus);\r\n  //altrp-image-select__label\r\n  const imageSelectLabelStyles = imageSelectLabel(settings);\r\n  imageSelectLabelStyles && (styles += imageSelectLabelStyles);\r\n  //altrp-field-select2__single-value\r\n  const fieldSelect2SingleValueStyles = fieldSelect2SingleValueStyle(settings);\r\n  fieldSelect2SingleValueStyles && (styles += fieldSelect2SingleValueStyles);\r\n  //altrp-field-select2__single-value\r\n  const fieldLabelContainerStyles = fieldLabelContainerStyle(settings);\r\n  fieldLabelContainerStyles && (styles += fieldLabelContainerStyles);\r\n  //altrp-field-label\r\n  const fieldLabelStyles = fieldLabel(settings);\r\n  fieldLabelStyles && (styles += fieldLabelStyles);\r\n  //altrp-label-icon\r\n  const labelIconStyles = labelIconStyle(settings);\r\n  labelIconStyles && (styles += labelIconStyles);\r\n  //altrp-field::placeholder altrp-field-select2__placeholder altrp-field-file__placeholder\r\n  const placeholderStyles = placeholderStyle(settings);\r\n  placeholderStyles && (styles += placeholderStyles);\r\n  //altrp-field-label--required::after\r\n  const fieldLabelRequiredStyles = fieldLabelRequired(settings);\r\n  fieldLabelRequiredStyles && (styles += fieldLabelRequiredStyles);\r\n  //mask-mismatch-message\r\n  const maskMismatchMessageStyles = maskMismatchMessage(settings);\r\n  maskMismatchMessageStyles && (styles += maskMismatchMessageStyles);\r\n  //finish\r\n  return styles;\r\n}\r\nexport default InputCheckboxComponent\r\n","import { getResponsiveSetting } from \"../../../../../../front-app/src/js/helpers\";\r\nimport {\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  simplePropertyStyled,\r\n  colorPropertyStyled,\r\n  borderWidthStyled,\r\n  shadowControllerToStyles,\r\n  sizeStyled\r\n} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n/**\r\n * Стили для класса .altrp-input-wrapper\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst inputWrapperStyle = settings => {\r\n  let styles = `&& .altrp-input-wrapper {`;\r\n  let width;\r\n  //width begin\r\n  settings && (width = getResponsiveSetting(settings, \"field_width\"));\r\n  width && (styles += sizeStyled(width, \"width\"));\r\n  //width end\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field-container\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst containerStyle = settings => {\r\n  let styles = `&& .altrp-field-container {`;\r\n  let margin;\r\n\r\n  //margin begin\r\n  settings && (margin = getResponsiveSetting(settings, \"position_margin\"));\r\n  margin && (styles += dimensionsControllerToStyles(margin, \"margin\"));\r\n  //margin end\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldStyle = settings => {\r\n  let styles = `& .altrp-field, & .bp3-input {`;\r\n  let padding,\r\n    color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  const {\r\n    placeholder_and_value_alignment_position_section,\r\n    position_z_index,\r\n    input_position,\r\n    textarea_resize,\r\n    justify_options,\r\n    image_select_item_width,\r\n    image_select_item_height,\r\n    image_select_image_fit,\r\n    image_select_image_position,\r\n    cross_size\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"position_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\"));\r\n  borderType &&\r\n    (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n    (borderRadius = getResponsiveSetting(\r\n      settings,\r\n      \"global_filter_input_border_radius\"\r\n    ));\r\n  borderRadius &&\r\n    (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"background_style_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n    (styles += `text-align:${placeholder_and_value_alignment_position_section};`);\r\n\r\n  position_z_index && (styles += `z-index:${position_z_index};`);\r\n  textarea_resize && (styles += `resize:${textarea_resize};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-option{\";\r\n\r\n  input_position && (styles += `flex-direction:${input_position};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select{\";\r\n\r\n  justify_options && (styles += `justify-content:${justify_options};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select>.altrp-field{\";\r\n\r\n  image_select_item_width &&\r\n    (styles += `width:${image_select_item_width.size}${image_select_item_width.unit};`);\r\n\r\n  image_select_item_height &&\r\n    (styles += `height:${image_select_item_height.size}${image_select_item_height.unit};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select img{\";\r\n  image_select_image_fit && (styles += `object-fit:${image_select_image_fit};`);\r\n  image_select_image_position &&\r\n    (styles += `object-position:${image_select_image_position};`);\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .input-clear-btn{\";\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"cross_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  //TODO не нашел как активировать эту штуку\r\n  //cross_size && (styles += `font-size:${cross_size.size}${cross_size.unit};`);\r\n  styles += \"}\";\r\n\r\n  styles += \"}\";\r\n\r\n  return styles;\r\n};\r\n\r\n/**\r\n* Стили для класса altrp-field:hover\r\n* @param {Object} settings style settings of element\r\n* @returns {String} CSS style string\r\n*/\r\nconst fieldStyleHover = settings => {\r\n  let styles = `&& .altrp-field:hover, && .bp3-input:hover {`;\r\n  let color,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  const {\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\", \":hover\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\", \":hover\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\", \":hover\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\", \":hover\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\", \":hover\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"global_filter_input_border_radius\",\r\n    \":hover\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\",\r\n    \":hover\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  styles += \"&& .input-clear-btn{\";\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"cross_color\", \":hover\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  //TODO не нашел как активировать эту штуку\r\n  //cross_size && (styles += `font-size:${cross_size.size}${cross_size.unit};`);\r\n  styles += \"}\";\r\n  styles += \"}\";\r\n\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field:hover\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldStyleFocus = settings => {\r\n  let styles = `&& .altrp-field:focus, && .bp3-input:focus {`;\r\n  let padding,\r\n    color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  const {\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\", \":focus\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\", \":focus\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\", \":focus\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\", \":focus\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\", \":focus\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"global_filter_input_border_radius\",\r\n    \":focus\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\",\r\n    \":focus\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  styles += \"&& .input-clear-btn{\";\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"cross_color\", \":focus\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  //TODO не нашел как активировать эту штуку\r\n  //cross_size && (styles += `font-size:${cross_size.size}${cross_size.unit};`);\r\n  styles += \"}\";\r\n  styles += \"}\";\r\n\r\n  return styles;\r\n};\r\n\r\n\r\n/**\r\n * Стили для класса altrp-image-select__label\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst imageSelectLabel = settings => {\r\n  let styles = `&& .altrp-image-select__label {`;\r\n  let color, typographic;\r\n\r\n  const { placeholder_and_value_alignment_position_section } = settings;\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n    (styles += `text-align:${placeholder_and_value_alignment_position_section}`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-select2__single-value\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldSelect2SingleValueStyle = settings => {\r\n  let styles = `&& .altrp-field-select2__single-value {`;\r\n  let typographic, color;\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabel = settings => {\r\n  let styles = `&& .altrp-field-label {`;\r\n  let color, typographic;\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"label_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"label_style_font_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `& .altrp-field-label-container {`;\r\n  let backgroundColor, padding, width;\r\n  const {\r\n    label_position_top,\r\n    label_position_left,\r\n    label_icon_position\r\n  } = settings;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"label_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"label_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (width = getResponsiveSetting(settings, \"label_width\"));\r\n  width && (styles += `${sizeStyled(width, \"width\")};flex-shrink: 0;`);\r\n\r\n  label_position_top && (styles += `top:${label_position_top};`);\r\n  label_position_left && (styles += `left:${label_position_left};`);\r\n  label_icon_position && (styles += `flex-direction:${label_icon_position};`);\r\n\r\n  styles += \"}\";\r\n\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-label-icon\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst labelIconStyle = settings => {\r\n  let styles = `&& .altrp-label-icon {`;\r\n  let padding, backgroundColor, iconSize;\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"icon_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (iconSize = getResponsiveSetting(settings, \"icon_size\"));\r\n  iconSize &&\r\n    (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  //for path\r\n  styles += `&& .altrp-label-icon path{`;\r\n\r\n  settings && (backgroundColor = getResponsiveSetting(settings, \"icon_color\"));\r\n  backgroundColor && (styles += colorPropertyStyled(backgroundColor, \"fill\"));\r\n\r\n  styles += \"}\";\r\n  //for svg\r\n  styles += `&& .altrp-label-icon svg{`;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(settings, \"icon_color_background\"));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background\"));\r\n  iconSize &&\r\n    (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  //for img\r\n  styles += `&& .altrp-label-icon img{`;\r\n\r\n  iconSize &&\r\n    (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для классов\r\n * altrp-field::placeholder\r\n * altrp-field-select2__placeholder\r\n * altrp-field-file__placeholder\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst placeholderStyle = settings => {\r\n  let styles = `&& .altrp-field, && .bp3-input::placeholder{`;\r\n  let color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderColor,\r\n    borderWidth,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"placeholder_style_font_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"background_style_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-select2__placeholder{`;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"background_style_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-file__placeholder{`;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\"));\r\n  borderType &&\r\n    (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n    (borderRadius = getResponsiveSetting(\r\n      settings,\r\n      \"global_filter_input_border_radius\"\r\n    ));\r\n  borderRadius &&\r\n    (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"background_style_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"placeholder_style_font_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label--required::after\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabelRequired = settings => {\r\n  let styles = `&& .altrp-field-label--required::after{`;\r\n  let color, typographic;\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"required_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"required_style_font_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-select2__option\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldSelect2Option = (settings, id) => {\r\n  let styles = `.${id}.altrp-field-select2__option{`;\r\n  let backgroundColor;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"option_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(\r\n      backgroundColor,\r\n      \"background-color\",\r\n      \"!important\"\r\n    ));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `.${id}.altrp-field-select2__option.altrp-field-select2__option--is-focused{`;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"option_focused_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(\r\n      backgroundColor,\r\n      \"background-color\",\r\n      \"!important\"\r\n    ));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `.${id}.altrp-field-select2__option.altrp-field-select2__option--is-selected{`;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"option_selected_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(\r\n      backgroundColor,\r\n      \"background-color\",\r\n      \"!important\"\r\n    ));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса mask-mismatch-message\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst maskMismatchMessage = (settings, id) => {\r\n  let styles = `&& .mask-mismatch-message{`;\r\n  let margin, padding, color, typographic;\r\n\r\n  settings &&\r\n    (margin = getResponsiveSetting(settings, \"mismatch_message_margin\"));\r\n  margin && (styles += dimensionsControllerToStyles(margin, \"margin\"));\r\n\r\n  settings &&\r\n    (padding = getResponsiveSetting(settings, \"mismatch_message_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(margin, \"padding\"));\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"mismatch_message_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"mismatch_message_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n//Точка входа\r\nfunction InputDateComponent(settings, elementId, prefix) {\r\n\r\n  let styles = \"\";\r\n  const { background_section_opacity } = settings;\r\n  //for all element\r\n  styles += `.${prefix}${elementId} {`\r\n  background_section_opacity &&\r\n    (styles += `opacity:${background_section_opacity.size};`);\r\n  //altrp-input-wrapper\r\n  styles += `}`;\r\n  styles += `.${prefix}${elementId} {`\r\n  const inputWrapperStyles = inputWrapperStyle(settings);\r\n  inputWrapperStyles && (styles += inputWrapperStyles);\r\n  styles += `}`;\r\n  //altrp-field-container\r\n  styles += `.${prefix}${elementId} {`\r\n  const containerStyles = containerStyle(settings);\r\n  containerStyles && (styles += containerStyles);\r\n  styles += `}`;\r\n  //altrp-field\r\n  styles += `.${prefix}${elementId} {`\r\n  const fieldStyles = fieldStyle(settings);\r\n  fieldStyles && (styles += fieldStyles);\r\n  styles += `}`;\r\n  //altrp-field:hover\r\n  styles += `.${prefix}${elementId} {`\r\n  const fieldStylesHover = fieldStyleHover(settings);\r\n  fieldStylesHover && (styles += fieldStylesHover);\r\n  styles += `}`;\r\n  //altrp-field:focus\r\n  styles += `.${prefix}${elementId} {`\r\n  const fieldStylesFocus = fieldStyleFocus(settings);\r\n  fieldStylesFocus && (styles += fieldStylesFocus);\r\n  styles += `}`;\r\n  //altrp-image-select__label\r\n  styles += `.${prefix}${elementId} {`\r\n  const imageSelectLabelStyles = imageSelectLabel(settings);\r\n  imageSelectLabelStyles && (styles += imageSelectLabelStyles);\r\n  styles += `}`;\r\n  //altrp-field-select2__single-value\r\n  styles += `.${prefix}${elementId} {`\r\n  const fieldSelect2SingleValueStyles = fieldSelect2SingleValueStyle(settings);\r\n  fieldSelect2SingleValueStyles && (styles += fieldSelect2SingleValueStyles);\r\n  styles += `}`;\r\n  //altrp-field-label\r\n  styles += `.${prefix}${elementId} {`\r\n  const fieldLabelStyles = fieldLabel(settings);\r\n  fieldLabelStyles && (styles += fieldLabelStyles);\r\n  styles += `}`;\r\n  //altrp-label-icon\r\n  styles += `.${prefix}${elementId} {`\r\n  const labelIconStyles = labelIconStyle(settings);\r\n  labelIconStyles && (styles += labelIconStyles);\r\n  styles += `}`;\r\n  //altrp-field::placeholder altrp-field-select2__placeholder altrp-field-file__placeholder\r\n  styles += `.${prefix}${elementId} {`\r\n  const placeholderStyles = placeholderStyle(settings);\r\n  placeholderStyles && (styles += placeholderStyles);\r\n  styles += `}`;\r\n  //altrp-field-label--required::after\r\n  styles += `.${prefix}${elementId} {`\r\n  const fieldLabelRequiredStyles = fieldLabelRequired(settings);\r\n  fieldLabelRequiredStyles && (styles += fieldLabelRequiredStyles);\r\n  styles += `}`;\r\n  //mask-mismatch-message\r\n  styles += `.${prefix}${elementId} {`\r\n  const maskMismatchMessageStyles = maskMismatchMessage(settings);\r\n  maskMismatchMessageStyles && (styles += maskMismatchMessageStyles);\r\n  styles += `}`;\r\n  //finish\r\n  return styles;\r\n}\r\nexport default InputDateComponent\r\n","import { getResponsiveSetting } from \"../../../../../../front-app/src/js/helpers\";\r\nimport {\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  simplePropertyStyled,\r\n  colorPropertyStyled,\r\n  borderWidthStyled,\r\n  shadowControllerToStyles,\r\n  sizeStyled, sliderStyled, defaultStyled, colorStyled, colorStyledSecond, styledString\r\n} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n/**\r\n * Стили для класса .altrp-input-wrapper\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst inputWrapperStyle = settings => {\r\n  let styles = `&& .altrp-input-wrapper {`;\r\n  let width;\r\n  //width begin\r\n  settings && (width = getResponsiveSetting(settings, \"field_width\"));\r\n  width && (styles += sizeStyled(width, \"width\"));\r\n  //width end\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field-container\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst containerStyle = settings => {\r\n  let styles = `&& .altrp-field-container {`;\r\n  let margin, aligment;\r\n\r\n  //margin begin\r\n  settings && (margin = getResponsiveSetting(settings, \"position_margin\"));\r\n  margin && (styles += dimensionsControllerToStyles(margin, \"margin\"));\r\n  //margin end\r\n\r\n  settings && (aligment = getResponsiveSetting(settings, \"alignment_radio\"));\r\n  aligment && (styles += `align-items: ${defaultStyled(aligment)};`);\r\n  //margin end\r\n\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldStyle = settings => {\r\n  let styles = `.altrp-field-container .bp3-control-indicator.bp3-control-indicator.bp3-control-indicator {`;\r\n  let padding,\r\n    color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow,\r\n    size\r\n  ;\r\n\r\n  const {\r\n    placeholder_and_value_alignment_position_section,\r\n    position_z_index,\r\n    input_position,\r\n    textarea_resize,\r\n    justify_options,\r\n    image_select_item_width,\r\n    image_select_item_height,\r\n    image_select_image_fit,\r\n    image_select_image_position,\r\n    cross_size\r\n  } = settings;\r\n\r\n  settings && (size = getResponsiveSetting(settings, \"field_size\"));\r\n  size && (styles += `height:${sliderStyled(size)};width:${sliderStyled(size)};`);\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  // settings &&\r\n  // (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  // typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  // settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  // color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"border_radius\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n  (styles += `text-align:${placeholder_and_value_alignment_position_section};`);\r\n\r\n  position_z_index && (styles += `z-index:${position_z_index};`);\r\n  textarea_resize && (styles += `resize:${textarea_resize};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-radio .bp3-control-indicator:before {\";\r\n\r\n  size && (styles += `height:${sliderStyled(size)};width:${sliderStyled(size)};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-radio {\";\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"position_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  styles += \"}\";\r\n\r\n\r\n  styles += \"&& .altrp-field-radio {\";\r\n\r\n  let fontTypographic;\r\n\r\n  settings &&\r\n  (fontTypographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  fontTypographic && (styles += typographicControllerToStyles(fontTypographic));\r\n\r\n  let fontColor;\r\n\r\n  settings && (fontColor = getResponsiveSetting(settings, \"field_font_color\"));\r\n  fontColor && (styles += colorPropertyStyled(fontColor, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-radio:hover {\";\r\n\r\n  let fontTypographicHover;\r\n\r\n  settings &&\r\n  (fontTypographicHover = getResponsiveSetting(settings, \"field_font_typographic\", \":hover\"));\r\n  fontTypographicHover && (styles += typographicControllerToStyles(fontTypographicHover));\r\n\r\n  let fontColorHover;\r\n\r\n  settings && (fontColorHover = getResponsiveSetting(settings, \"field_font_color\", \":hover\"));\r\n  fontColorHover && (styles += colorPropertyStyled(fontColorHover, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-radio.active {\";\r\n\r\n  let fontTypographicActive;\r\n\r\n  settings &&\r\n  (fontTypographicActive = getResponsiveSetting(settings, \"field_font_typographic\", \".active\"));\r\n  fontTypographicActive && (styles += typographicControllerToStyles(fontTypographicActive));\r\n\r\n  let fontColorActive;\r\n\r\n  settings && (fontColorActive = getResponsiveSetting(settings, \"field_font_color\", \".active\"));\r\n  fontColorActive && (styles += colorPropertyStyled(fontColorActive, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-radio.bp3-control.bp3-radio input:checked ~ .bp3-control-indicator::before {\";\r\n\r\n  let dotColor;\r\n\r\n  settings && (dotColor = getResponsiveSetting(settings, \"background_style_dot\"));\r\n\r\n  let dotSize;\r\n\r\n  settings && (dotSize = getResponsiveSetting(settings, \"size_style_dot\"));\r\n\r\n  if(dotSize || dotColor) {\r\n\r\n    if(!dotSize) {\r\n      dotSize = {\r\n        size: 28,\r\n        unit: \"%\"\r\n      }\r\n    }\r\n\r\n    if(!dotColor) {\r\n      dotColor = {\r\n        color: \"rgba(255, 255, 255, 1)\",\r\n        colorPickedHex: \"#ffffff\",\r\n        colorRGB: {r: 255, g: 255, b: 255, a: 1}\r\n      }\r\n    }\r\n\r\n    styles += `background-image: radial-gradient(${colorStyledSecond(dotColor)}, ${colorStyledSecond(dotColor)} ${sliderStyled(dotSize)}, rgba(0, 0, 0, 0) calc(${sliderStyled(dotSize)} + 6%));`\r\n  }\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-subgroup {`;\r\n\r\n  let fieldAlignment;\r\n\r\n  settings && (fieldAlignment = getResponsiveSetting(settings, \"alignment\"));\r\n  fieldAlignment && (styles += `justify-content: ${defaultStyled(fieldAlignment)};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-option{\";\r\n\r\n  input_position && (styles += `flex-direction:${input_position};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select{\";\r\n\r\n  justify_options && (styles += `justify-content:${justify_options};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select>.altrp-field{\";\r\n\r\n  image_select_item_width &&\r\n  (styles += `width:${image_select_item_width.size}${image_select_item_width.unit};`);\r\n\r\n  image_select_item_height &&\r\n  (styles += `height:${image_select_item_height.size}${image_select_item_height.unit};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select img{\";\r\n  image_select_image_fit && (styles += `object-fit:${image_select_image_fit};`);\r\n  image_select_image_position &&\r\n  (styles += `object-position:${image_select_image_position};`);\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .input-clear-btn{\";\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"cross_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  //TODO не нашел как активировать эту штуку\r\n  //cross_size && (styles += `font-size:${cross_size.size}${cross_size.unit};`);\r\n  styles += \"}\";\r\n\r\n  styles += \"}\";\r\n\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field:hover\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldStyleHover = settings => {\r\n  let styles = `.altrp-field-container .altrp-field-radio:hover .bp3-control-indicator.bp3-control-indicator.bp3-control-indicator {`;\r\n  let padding,\r\n    color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow,\r\n    size\r\n  ;\r\n\r\n  const {\r\n    placeholder_and_value_alignment_position_section,\r\n    position_z_index,\r\n    input_position,\r\n    textarea_resize,\r\n    justify_options,\r\n    image_select_item_width,\r\n    image_select_item_height,\r\n    image_select_image_fit,\r\n    image_select_image_position,\r\n    cross_size\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\", \":hover\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  // settings &&\r\n  // (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  // typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  // settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  // color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\", \":hover\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\", \":hover\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\", \":hover\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"border_radius\",\r\n    \":hover\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\",\r\n    \":hover\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n  (styles += `text-align:${placeholder_and_value_alignment_position_section};`);\r\n\r\n  position_z_index && (styles += `z-index:${position_z_index};`);\r\n  textarea_resize && (styles += `resize:${textarea_resize};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-radio.bp3-control.bp3-radio:hover input:checked ~ .bp3-control-indicator.bp3-control-indicator::before {\";\r\n\r\n  let dotColor;\r\n\r\n  settings && (dotColor = getResponsiveSetting(settings, \"background_style_dot\", \":hover\"));\r\n\r\n  let dotSize;\r\n\r\n  settings && (dotSize = getResponsiveSetting(settings, \"size_style_dot\", \":hover\"));\r\n\r\n  if(dotSize || dotColor) {\r\n\r\n    if(!dotSize) {\r\n      dotSize = {\r\n        size: 28,\r\n        unit: \"%\"\r\n      }\r\n    }\r\n\r\n    if(!dotColor) {\r\n      dotColor = {\r\n        color: \"rgba(255, 255, 255, 1)\",\r\n        colorPickedHex: \"#ffffff\",\r\n        colorRGB: {r: 255, g: 255, b: 255, a: 1}\r\n      }\r\n    }\r\n\r\n    styles += `background-image: radial-gradient(${colorStyledSecond(dotColor)}, ${colorStyledSecond(dotColor)} ${sliderStyled(dotSize)}, rgba(0, 0, 0, 0) calc(${sliderStyled(dotSize)} + 6%));`\r\n  }\r\n\r\n  styles += \"}\";\r\n\r\n  return styles\r\n};\r\n\r\nconst fieldStyleActive = settings => {\r\n  let styles = `.altrp-field-container .altrp-field-radio.active .bp3-control-indicator.bp3-control-indicator.bp3-control-indicator {`;\r\n  let padding,\r\n    color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow,\r\n    size\r\n  ;\r\n\r\n  const {\r\n    placeholder_and_value_alignment_position_section,\r\n    position_z_index,\r\n    input_position,\r\n    textarea_resize,\r\n    justify_options,\r\n    image_select_item_width,\r\n    image_select_item_height,\r\n    image_select_image_fit,\r\n    image_select_image_position,\r\n    cross_size\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\", \".active\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  // settings &&\r\n  // (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  // typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  // settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  // color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\", \".active\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\", \".active\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\", \".active\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"border_radius\",\r\n    \".active\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\",\r\n    \".active\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n  (styles += `text-align:${placeholder_and_value_alignment_position_section};`);\r\n\r\n  position_z_index && (styles += `z-index:${position_z_index};`);\r\n  textarea_resize && (styles += `resize:${textarea_resize};`);\r\n\r\n  styles += \"}\";\r\n\r\n  return styles\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field:hover\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldStyleFocus = settings => {\r\n  let styles = `&& .altrp-field:focus, && .bp3-input:focus {`;\r\n  let padding,\r\n    color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  const {\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\", \":focus\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\", \":focus\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\", \":focus\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\", \":focus\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\", \":focus\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"global_filter_input_border_radius\",\r\n    \":focus\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\",\r\n    \":focus\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  styles += \"&& .input-clear-btn{\";\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"cross_color\", \":focus\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  //TODO не нашел как активировать эту штуку\r\n  //cross_size && (styles += `font-size:${cross_size.size}${cross_size.unit};`);\r\n  styles += \"}\";\r\n  styles += \"}\";\r\n\r\n  return styles;\r\n};\r\n\r\n\r\n/**\r\n * Стили для класса altrp-image-select__label\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst imageSelectLabel = settings => {\r\n  let styles = `&& .altrp-image-select__label {`;\r\n  let color, typographic;\r\n\r\n  const { placeholder_and_value_alignment_position_section } = settings;\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n  (styles += `text-align:${placeholder_and_value_alignment_position_section}`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-select2__single-value\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldSelect2SingleValueStyle = settings => {\r\n  let styles = `&& .altrp-field-select2__single-value {`;\r\n  let typographic, color;\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label-container\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabelContainerStyle = settings => {\r\n  let styles = `&& .altrp-field-label-container {`;\r\n  let backgroundColor, padding, width;\r\n  const {\r\n    label_position_top,\r\n    label_position_left,\r\n    label_icon_position\r\n  } = settings;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"label_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"label_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (width = getResponsiveSetting(settings, \"label_width\"));\r\n  width && (styles += `${sizeStyled(width, \"width\")};flex-shrink: 0;`);\r\n\r\n  label_position_top && (styles += `top:${label_position_top};`);\r\n  label_position_left && (styles += `left:${label_position_left};`);\r\n  label_icon_position && (styles += `flex-direction:${label_icon_position};`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabel = settings => {\r\n  let styles = `&& .altrp-field-label {`;\r\n  let color, typographic;\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"label_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"label_style_font_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-label-icon\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst labelIconStyle = settings => {\r\n  let styles = `&& .altrp-label-icon {`;\r\n  let padding, backgroundColor, iconSize;\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"icon_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (iconSize = getResponsiveSetting(settings, \"icon_size\"));\r\n  iconSize &&\r\n  (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  //for path\r\n  styles += `&& .altrp-label-icon path{`;\r\n\r\n  settings && (backgroundColor = getResponsiveSetting(settings, \"icon_color\"));\r\n  backgroundColor && (styles += colorPropertyStyled(backgroundColor, \"fill\"));\r\n\r\n  styles += \"}\";\r\n  //for svg\r\n  styles += `&& .altrp-label-icon svg{`;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(settings, \"icon_color_background\"));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background\"));\r\n  iconSize &&\r\n  (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  //for img\r\n  styles += `&& .altrp-label-icon img{`;\r\n\r\n  iconSize &&\r\n  (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для классов\r\n * altrp-field::placeholder\r\n * altrp-field-select2__placeholder\r\n * altrp-field-file__placeholder\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst placeholderStyle = settings => {\r\n  let styles = `&& .altrp-field, && .bp3-input::placeholder{`;\r\n  let color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderColor,\r\n    borderWidth,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"placeholder_style_font_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-select2__placeholder{`;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-file__placeholder{`;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"global_filter_input_border_radius\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"placeholder_style_font_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label--required::after\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabelRequired = settings => {\r\n  let styles = `&& .altrp-field-label--required::after{`;\r\n  let color, typographic;\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"required_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"required_style_font_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-select2__option\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldSelect2Option = (settings, id) => {\r\n  let styles = `.${id}.altrp-field-select2__option{`;\r\n  let backgroundColor;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"option_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(\r\n    backgroundColor,\r\n    \"background-color\",\r\n    \"!important\"\r\n  ));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `.${id}.altrp-field-select2__option.altrp-field-select2__option--is-focused{`;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"option_focused_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(\r\n    backgroundColor,\r\n    \"background-color\",\r\n    \"!important\"\r\n  ));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `.${id}.altrp-field-select2__option.altrp-field-select2__option--is-selected{`;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"option_selected_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(\r\n    backgroundColor,\r\n    \"background-color\",\r\n    \"!important\"\r\n  ));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса mask-mismatch-message\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst maskMismatchMessage = (settings, id) => {\r\n  let styles = `&& .mask-mismatch-message{`;\r\n  let margin, padding, color, typographic;\r\n\r\n  settings &&\r\n  (margin = getResponsiveSetting(settings, \"mismatch_message_margin\"));\r\n  margin && (styles += dimensionsControllerToStyles(margin, \"margin\"));\r\n\r\n  settings &&\r\n  (padding = getResponsiveSetting(settings, \"mismatch_message_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(margin, \"padding\"));\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"mismatch_message_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"mismatch_message_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n//Точка входа\r\nfunction InputCheckboxComponent(settings, elementId, prefix) {\r\n\r\n  let styles = \"\";\r\n\r\n  styles += `.${prefix}${elementId} {`;\r\n  const { background_section_opacity } = settings;\r\n  //for all element\r\n  background_section_opacity &&\r\n  (styles += `opacity:${background_section_opacity.size};`);\r\n  styles += `}`;\r\n  //altrp-input-wrapper\r\n  styles += `.${prefix}${elementId} {`;\r\n  const inputWrapperStyles = inputWrapperStyle(settings);\r\n  inputWrapperStyles && (styles += inputWrapperStyles);\r\n  styles += `}`;\r\n  //altrp-field-container\r\n  styles += `.${prefix}${elementId} {`;\r\n  const containerStyles = containerStyle(settings);\r\n  containerStyles && (styles += containerStyles);\r\n  styles += `}`;\r\n  //altrp-field-radio\r\n  styles += `.${prefix}${elementId} {`;\r\n  const fieldStyles = fieldStyle(settings);\r\n  fieldStyles && (styles += fieldStyles);\r\n  styles += `}`;\r\n  //altrp-field-radio:hover\r\n  styles += `.${prefix}${elementId} {`;\r\n  const fieldStylesHover = fieldStyleHover(settings);\r\n  fieldStylesHover && (styles += fieldStylesHover);\r\n  styles += `}`;\r\n  //altrp-field-radio.active\r\n  styles += `.${prefix}${elementId} {`;\r\n  const fieldStylesActive = fieldStyleActive(settings);\r\n  fieldStylesActive && (styles += fieldStylesActive);\r\n  styles += `}`;\r\n\r\n  //altrp-field:focus\r\n  styles += `.${prefix}${elementId} {`;\r\n  const fieldStylesFocus = fieldStyleFocus(settings);\r\n  fieldStylesFocus && (styles += fieldStylesFocus);\r\n  styles += `}`;\r\n  //altrp-image-select__label\r\n  styles += `.${prefix}${elementId} {`;\r\n  const imageSelectLabelStyles = imageSelectLabel(settings);\r\n  imageSelectLabelStyles && (styles += imageSelectLabelStyles);\r\n  styles += `}`;\r\n  //altrp-field-select2__single-value\r\n  styles += `.${prefix}${elementId} {`;\r\n  const fieldSelect2SingleValueStyles = fieldSelect2SingleValueStyle(settings);\r\n  fieldSelect2SingleValueStyles && (styles += fieldSelect2SingleValueStyles);\r\n  styles += `}`;\r\n  //altrp-field-select2__single-value\r\n  styles += `.${prefix}${elementId} {`;\r\n  const fieldLabelContainerStyles = fieldLabelContainerStyle(settings);\r\n  fieldLabelContainerStyles && (styles += fieldLabelContainerStyles);\r\n  styles += `}`;\r\n  //altrp-field-label\r\n  styles += `.${prefix}${elementId} {`;\r\n  const fieldLabelStyles = fieldLabel(settings);\r\n  fieldLabelStyles && (styles += fieldLabelStyles);\r\n  styles += `}`;\r\n  //altrp-label-icon\r\n  styles += `.${prefix}${elementId} {`;\r\n  const labelIconStyles = labelIconStyle(settings);\r\n  labelIconStyles && (styles += labelIconStyles);\r\n  styles += `}`;\r\n  //altrp-field::placeholder altrp-field-select2__placeholder altrp-field-file__placeholder\r\n  styles += `.${prefix}${elementId} {`;\r\n  const placeholderStyles = placeholderStyle(settings);\r\n  placeholderStyles && (styles += placeholderStyles);\r\n  styles += `}`;\r\n  //altrp-field-label--required::after\r\n  styles += `.${prefix}${elementId} {`;\r\n  const fieldLabelRequiredStyles = fieldLabelRequired(settings);\r\n  fieldLabelRequiredStyles && (styles += fieldLabelRequiredStyles);\r\n  styles += `}`;\r\n  //mask-mismatch-message\r\n  styles += `.${prefix}${elementId} {`;\r\n  const maskMismatchMessageStyles = maskMismatchMessage(settings);\r\n  maskMismatchMessageStyles && (styles += maskMismatchMessageStyles);\r\n  styles += `}`;\r\n  //finish\r\n  return styles;\r\n}\r\nexport default InputCheckboxComponent\r\n","\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\n\nexport default function InputRangeSliderComponent(settings) {\n  const styles = [\n    \"bp3-slider-axis .bp3-slider-label\",\n      [\"\", \"label_typographic\", \"typographic\"],\n      [\"color\", \"label_color\", \"color\"],\n    \"}\",\n\n    \"bp3-slider-axis .bp3-slider-label:hover\",\n      [\"\", \"label_typographic\", \"typographic\", \":hover\"],\n      [\"color\", \"label_color\", \"color\", \":hover\"],\n    \"}\",\n\n    \"bp3-slider-handle span.bp3-slider-label\",\n      [\"\", \"current_label_typographic\", \"typographic\"],\n      [\"color\", \"current_label_color\", \"color\"],\n    \"}\",\n\n    \"bp3-slider-handle:hover span.bp3-slider-label\",\n      [\"\", \"current_label_typographic\", \"typographic\", \":hover\"],\n      [\"color\", \"current_label_color\", \"color\", \":hover\"],\n    \"}\",\n\n    \"altrp-field-slider-horizontal .bp3-slider-handle\",\n      () => {\n        let width = getResponsiveSetting(settings, \"size\");\n\n        width = sliderStyled(width);\n\n        if(width) {\n          return `width: calc(${width} / 2);`\n        } else {\n          return \"\"\n        }\n      },\n      [\"height\", \"handle_size\", \"slider\"],\n    \"}\",\n\n\n    \"bp3-slider-handle\",\n      [\"border-radius\", \"handle_radius\", \"dimensions\"],\n    \"}\",\n\n    \"bp3-slider-handle.bp3-start\",\n      [\"border-radius\", \"handle_radius\", \"dimensions\"],\n    \"}\",\n\n    \"bp3-slider-handle.bp3-end\",\n      [\"border-radius\", \"handle_radius_second\", \"dimensions\"],\n    \"}\",\n\n    \"altrp-field-slider-horizontal .altrp-field-slider\",\n      [\"width\", \"width\", \"slider\"],\n    \"}\",\n\n    \"altrp-field-slider-vertical .altrp-field-slider\",\n      [\"height\", \"length\", \"slider\"],\n    \"}\",\n\n    () => {\n      let tr_x = getResponsiveSetting(settings, \"tr_x\") ;\n      let tr_y = getResponsiveSetting(settings, \"tr_y\") ;\n      if(! tr_x && ! tr_y){\n        return ''\n      }\n      return `& .bp3-slider-handle{transform:translate(${tr_x || '0px'},${tr_y || '0px'});}`\n    },\n\n    \"bp3-slider-progress, & .bp3-slider-track\",\n      [\"height\", \"height\", \"slider\"],\n    \"}\",\n\n    \"altrp-field-slider-vertical .bp3-slider-progress.bp3-slider-progress, & .altrp-field-slider-vertical .bp3-slider-track.bp3-slider-track\",\n      [\"width\", \"thickness\", \"slider\"],\n    \"}\",\n\n    \"altrp-field-slider-horizontal .bp3-slider-label\",\n      () => {\n        let height = getResponsiveSetting(settings, \"height\", \"\", { size: 6, unit: \"px\" })\n\n        height = sliderStyled(height)\n\n        return `transform: translate(-50%, calc(14px + ${height}));`\n      },\n    \"}\",\n\n    \"altrp-field-slider-vertical .bp3-slider-label.bp3-slider-label.bp3-slider-label\",\n      () => {\n        let thickness = getResponsiveSetting(settings, \"thickness\", \"\", { size: 6, unit: \"px\" })\n\n        thickness = sliderStyled(thickness)\n\n        return `transform: translate(calc(14px + ${thickness}), 50%);`\n      },\n    \"}\",\n\n    \"bp3-slider-handle .bp3-slider-label, & .bp3-slider-handle.bp3-active .bp3-slider-label\",\n      [\"background-color\", \"tooltip_color\", \"color\"],\n    \"}\",\n\n    \"bp3-slider-handle, & .bp3-slider-handle.bp3-active\",\n      [\"background-color\", \"handle_color\", \"color\"],\n    \"}\",\n\n    \"bp3-slider-handle:hover, & .bp3-slider-handle:hover.bp3-active\",\n      [\"background-color\", \"handle_color\", \"color\", \":hover\"],\n    \"}\",\n\n    \"bp3-slider-handle:active, & .bp3-slider-handle:active.bp3-active \",\n    [\"background-color\", \"handle_color\", \"color\", \".active\"],\n    \"}\",\n\n    \"bp3-slider-progress.bp3-intent-primary\",\n      [\"background-color\", \"filled_color\", \"color\"],\n    \"}\",\n\n    \"bp3-slider-progress\",\n      [\"background-color\", \"blank_color\", \"color\"],\n    \"}\",\n  ];\n\n  return styledString(styles, settings)\n}\n","\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\n\nexport default function InputSliderComponent(settings) {\n  const styles = [\n    \"bp3-slider-axis .bp3-slider-label\",\n      [\"\", \"label_typographic\", \"typographic\"],\n      [\"color\", \"label_color\", \"color\"],\n    \"}\",\n\n    \"bp3-slider-axis .bp3-slider-label:hover\",\n      [\"\", \"label_typographic\", \"typographic\", \":hover\"],\n      [\"color\", \"label_color\", \"color\", \":hover\"],\n    \"}\",\n\n    \"bp3-slider-handle span.bp3-slider-label\",\n      [\"\", \"current_label_typographic\", \"typographic\"],\n      [\"color\", \"current_label_color\", \"color\"],\n    \"}\",\n\n    \"bp3-slider-handle:hover span.bp3-slider-label\",\n      [\"\", \"current_label_typographic\", \"typographic\", \":hover\"],\n      [\"color\", \"current_label_color\", \"color\", \":hover\"],\n    \"}\",\n\n\n    \"bp3-slider-handle\",\n      [\"height\", \"handle_size\", \"slider\"],\n      [\"width\", \"handle_size\", \"slider\"],\n      [\"border-radius\", \"handle_radius\", \"dimensions\"],\n    \"}\",\n\n    \"altrp-field-slider-horizontal .altrp-field-slider\",\n      [\"width\", \"width\", \"slider\"],\n    \"}\",\n      () => {\n        let tr_x = getResponsiveSetting(settings, \"tr_x\") ;\n        let tr_y = getResponsiveSetting(settings, \"tr_y\") ;\n        if(! tr_x && ! tr_y){\n          return ''\n        }\n        return `& .bp3-slider-handle{transform:translate(${tr_x || '0px'},${tr_y || '0px'});}`\n      },\n    \"altrp-field-slider-vertical .altrp-field-slider\",\n      [\"height\", \"length\", \"slider\"],\n    \"}\",\n\n    \"bp3-slider-progress, & .bp3-slider-track\",\n      [\"height\", \"height\", \"slider\"],\n    \"}\",\n\n    \"altrp-field-slider-vertical .bp3-slider-progress.bp3-slider-progress, & .altrp-field-slider-vertical .bp3-slider-track.bp3-slider-track\",\n      [\"width\", \"thickness\", \"slider\"],\n    \"}\",\n\n    \"altrp-field-slider-horizontal .bp3-slider-label\",\n      () => {\n        let height = getResponsiveSetting(settings, \"height\", \"\", { size: 6, unit: \"px\" })\n\n        height = sliderStyled(height)\n\n        return `transform: translate(-50%, calc(14px + ${height}));`\n      },\n    \"}\",\n\n    \"altrp-field-slider-vertical .bp3-slider-label.bp3-slider-label.bp3-slider-label\",\n      () => {\n        let thickness = getResponsiveSetting(settings, \"thickness\", \"\", { size: 6, unit: \"px\" })\n\n        thickness = sliderStyled(thickness)\n\n        return `transform: translate(calc(14px + ${thickness}), 50%);`\n      },\n    \"}\",\n\n    \"bp3-slider-handle .bp3-slider-label, & .bp3-slider-handle.bp3-active .bp3-slider-label\",\n      [\"background-color\", \"tooltip_color\", \"color\"],\n    \"}\",\n\n    \"bp3-slider-handle, & .bp3-slider-handle.bp3-active\",\n      [\"background-color\", \"handle_color\", \"color\"],\n    \"}\",\n\n    \"bp3-slider-handle:hover, & .bp3-slider-handle:hover.bp3-active\",\n      [\"background-color\", \"handle_color\", \"color\", \":hover\"],\n    \"}\",\n\n    \"bp3-slider-handle:active, & .bp3-slider-handle:active.bp3-active \",\n    [\"background-color\", \"handle_color\", \"color\", \".active\"],\n    \"}\",\n\n    \"bp3-slider-progress.bp3-intent-primary\",\n      [\"background-color\", \"filled_color\", \"color\"],\n    \"}\",\n\n    \"bp3-slider-progress\",\n      [\"background-color\", \"blank_color\", \"color\"],\n    \"}\",\n  ];\n\n  return styledString(styles, settings)\n}\n","import {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\nexport default function ListComponent(settings) {\r\n  const styles = [\r\n    \"altrp-list\",\r\n    [\"margin\", \"position_margin\", \"dimensions\"],\r\n    [\"padding\", \"position_padding\", \"dimensions\"],\r\n\r\n    [\"z-index\", \"position_z_index\"],\r\n    \"}\",\r\n\r\n    \"altrp-list:hover\",\r\n    [\"margin\", \"position_margin\", \"dimensions\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-ul-inline, & .altrp-list-ul-default .altrp-list-li\",\r\n    [\"justify-content\", \"alignment_list_style\"],\r\n    \"}\",\r\n\r\n    \"& div.altrp-list-li-divider-default\",\r\n    [\"border-top-style\", \"divider_style_list_style\"],\r\n    [\"border-top-width\", \"divider_weight_list_style\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-li-divider-inline\",\r\n    [\"border-right-style\", \"divider_style_list_style\"],\r\n    [\"border-right-width\", \"divider_weight_list_style\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"& div.altrp-list-li-divider\",\r\n    [\"border-color\", \"divider_color_list_style\", \"color\"],\r\n    [\"width\", \"divider_width_list_style\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-icon, & .altrp-list-icon svg\",\r\n    [\"width\", \"size_icon_style\", \"slider\"],\r\n    [\"height\", \"size_icon_style\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-icon path\",\r\n    [\"fill\", \"fill_icon_style\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-icon\",\r\n    [\"background-color\", \"background_icon_style\", \"color\"],\r\n    [\"padding\", \"padding_icon_style\", \"dimensions\"],\r\n    [\"border-radius\", \"border-radius_icon_style\", \"dimensions\"],\r\n    [\"border-style\", \"border-type_icon_style\"],\r\n    [\"border-width\", \"border-width_icon_style\", \"dimensions\"],\r\n    [\"border-color\", \"border_color_icon_style\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-label\",\r\n    [\"margin-left\", \"indent_text_style\", \"slider\"],\r\n    [\"color\", \"color_text_style\", \"color\"],\r\n    [\"background-color\", \"background_color_text_style\", \"color\"],\r\n    [\"padding\", \"padding_text_style\", \"dimensions\"],\r\n    [\"border-radius\", \"border-radius_text_style\", \"dimensions\"],\r\n    [\"border-style\", \"border-type_text_style\"],\r\n    [\"border-width\", \"border-width_text_style\", \"dimensions\"],\r\n    [\"border-color\", \"border_color_text_style\", \"color\"],\r\n    [\"\", \"typographic_text_style\", \"typographic\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-li:hover\",\r\n    \"altrp-list-icon, & .altrp-list-icon svg\",\r\n    [\"width\", \"size_icon_style\", \"slider\", \":hover\"],\r\n    [\"height\", \"size_icon_style\", \"slider\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-icon:hover path\",\r\n    [\"fill\", \"fill_icon_style\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-icon:hover\",\r\n    [\"background-color\", \"background_icon_style\", \"color\", \":hover\"],\r\n    [\"border-radius\", \"border-radius_icon_style\", \"dimensions\", \":hover\"],\r\n    [\"border-style\", \"border-type_icon_style\", \"\", \":hover\"],\r\n    [\"border-width\", \"border-width_icon_style\", \"dimensions\", \":hover\"],\r\n    [\"border-color\", \"border_color_icon_style\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-label:hover\",\r\n    [\"margin-left\", \"indent_text_style\", \"slider\", \":hover\"],\r\n    [\"color\", \"color_text_style\", \"color\", \":hover\"],\r\n    [\"background-color\", \"background_color_text_style\", \"color\", \":hover\"],\r\n    [\"border-radius\", \"border-radius_text_style\", \"dimensions\", \":hover\"],\r\n    [\"border-style\", \"border-type_text_style\", \"\", \":hover\"],\r\n    [\"border-width\", \"border-width_text_style\", \"dimensions\", \":hover\"],\r\n    [\"border-color\", \"border_color_text_style\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-li-link:hover\",\r\n    [\"text-decoration\", \"link_decoration_text_style\", \"\", \":hover\"],\r\n    \"}\",\r\n    \"}\",\r\n\r\n    \"altrp-list-li-link\",\r\n    [\"text-decoration\", \"link_decoration_text_style\"],\r\n    \"}\"\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","import {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\nexport default function MapComponent(settings) {\r\n  const styles = [\r\n    \"altrp-image\",\r\n    [\"height\", \"style_height\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-btn\",\r\n    [\"margin\", \"style_margin\", \"dimensions\"],\r\n    \"}\"\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n};\r\n","import {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\nexport default function MapConstructorComponent(settings) {\r\n  const styles = [\r\n    \"altrp-image\",\r\n    [\"height\", \"style_height\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-btn\",\r\n    [\"margin\", \"style_margin\", \"dimensions\"],\r\n    \"}\"\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n\r\n","const { getResponsiveSetting } = window.altrpHelpers;\r\nimport {\r\n  simplePropertyStyled,\r\n  borderWidthStyled,\r\n  colorPropertyStyled,\r\n  dimensionsControllerToStyles,\r\n  sizeStyled,\r\n  shadowControllerToStyles,\r\n  gradientStyled,\r\n  backgroundImageControllerToStyles, sliderStyled, styledString,\r\n} from \"../../../../../../front-app/src/js/helpers/styles\";\r\nfunction altrpSection(settings) {\r\n  let styles = '';\r\n\r\n  let backgroundColor, flexWrap, verticalAlign, gorizontalAlign, flexDirection, minHeight, overflow, borderStyle, borderWidth, borderColor, borderRadius, boxShadow;\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'section_style_background_color');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background');\r\n  }\r\n\r\n  //Получаем значения flex-wrap из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    flexWrap = getResponsiveSetting(settings, 'layout_flex_wrap_content');\r\n  }\r\n\r\n  if (flexWrap) {\r\n    styles += simplePropertyStyled(flexWrap, 'flex-wrap');\r\n  }\r\n\r\n  //Получаем значения vertical-align из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    verticalAlign = getResponsiveSetting(settings, 'layout_column_position');\r\n  }\r\n\r\n  if (verticalAlign) {\r\n    styles += simplePropertyStyled(verticalAlign, 'align-content');\r\n    styles += simplePropertyStyled(verticalAlign, 'align-items');\r\n  }\r\n\r\n  //Получаем значения gorizontal-align из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    gorizontalAlign = getResponsiveSetting(settings, 'layout_justify_content');\r\n  }\r\n\r\n  if (gorizontalAlign) {\r\n    styles += simplePropertyStyled(gorizontalAlign, 'justify-content');\r\n  }\r\n\r\n  //Получаем значения flex-direction из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    flexDirection = getResponsiveSetting(settings, 'layout_column_direction');\r\n  }\r\n\r\n  if (flexDirection) {\r\n    styles += simplePropertyStyled(flexDirection, 'flex-direction');\r\n  }\r\n\r\n  //Получаем значения min-height из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    minHeight = getResponsiveSetting(settings, 'label_style_min_height');\r\n  }\r\n\r\n  if (minHeight) {\r\n    styles += sizeStyled(minHeight, 'min-height');\r\n  }\r\n\r\n  //Получаем значения overflow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    overflow = getResponsiveSetting(settings, 'layout_overflow');\r\n  }\r\n\r\n  if (overflow) {\r\n    styles += simplePropertyStyled(overflow, 'overflow');\r\n  }\r\n\r\n  //Получаем значения border-style из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderStyle = getResponsiveSetting(settings, 'section_style_border_type');\r\n  }\r\n\r\n  if (borderStyle) {\r\n    styles += simplePropertyStyled(borderStyle, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'section_style_border_width');\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'section_style_border_color');\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'section_style_border_radius');\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += sizeStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения box-shadow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    boxShadow = getResponsiveSetting(settings, 'section_style_box_shadow');\r\n  }\r\n\r\n  if (boxShadow) {\r\n    styles += shadowControllerToStyles(boxShadow);\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionHover(settings,state=':hover') {\r\n  let styles = '';\r\n\r\n  let backgroundColor, borderStyle, borderWidth, borderColor, borderRadius, boxShadow;\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'section_style_background_color', state);\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background');\r\n  }\r\n\r\n  //Получаем значения border-style из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderStyle = getResponsiveSetting(settings, 'section_style_border_type', state);\r\n  }\r\n\r\n  if (borderStyle) {\r\n    styles += simplePropertyStyled(borderStyle, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'section_style_border_width', state);\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'section_style_border_color', state);\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'section_style_border_radius', state);\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += sizeStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения box-shadow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    boxShadow = getResponsiveSetting(settings, 'section_style_box_shadow', state);\r\n  }\r\n\r\n  if (boxShadow) {\r\n    styles += shadowControllerToStyles(boxShadow);\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionColumn(settings) {\r\n  let styles = '';\r\n\r\n  let padding;\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'layout_columns_gap');\r\n  }\r\n\r\n  if (padding && padding !== 'none') {\r\n    styles += `padding: ${padding}px; `;\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionColumnHover(settings) {\r\n  let styles = '';\r\n\r\n  let padding;\r\n\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionSecond(settings) {\r\n  let styles = '';\r\n\r\n  let gradient, positionTop, positionRight, positionLeft, positionBottom, zIndex;\r\n\r\n  //Получаем значения gradient из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    gradient = getResponsiveSetting(settings, 'gradient');\r\n  }\r\n\r\n  if (gradient) {\r\n    styles += gradientStyled(gradient);\r\n  }\r\n\r\n  //Получаем значения position-top из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    positionTop = getResponsiveSetting(settings, 'position_top');\r\n  }\r\n\r\n  if (positionTop) {\r\n    styles += simplePropertyStyled(positionTop, 'top');\r\n  }\r\n\r\n  //Получаем значения position-right из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    positionRight = getResponsiveSetting(settings, 'position_right');\r\n  }\r\n\r\n  if (positionRight) {\r\n    styles += simplePropertyStyled(positionRight, 'right');\r\n  }\r\n\r\n  //Получаем значения position-left из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    positionLeft = getResponsiveSetting(settings, 'position_left');\r\n  }\r\n\r\n  if (positionLeft) {\r\n    styles += simplePropertyStyled(positionLeft, 'left');\r\n  }\r\n\r\n  //Получаем значения position-bottom из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    positionBottom = getResponsiveSetting(settings, 'position_bottom');\r\n  }\r\n\r\n  if (positionBottom) {\r\n    styles += simplePropertyStyled(positionBottom, 'bottom');\r\n  }\r\n\r\n  //Получаем значения z-index из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    zIndex = getResponsiveSetting(settings, 'position_style_z_index');\r\n  }\r\n\r\n  if (zIndex) {\r\n    styles += simplePropertyStyled(zIndex, 'z-index');\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionSecondHover(settings) {\r\n  let styles = '';\r\n\r\n  let gradient, positionTop, positionRight, positionLeft, positionBottom;\r\n\r\n  //Получаем значения gradient из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    gradient = getResponsiveSetting(settings, 'gradient', ':hover');\r\n  }\r\n\r\n  if (gradient) {\r\n    styles += gradientStyled(gradient);\r\n  }\r\n\r\n  //Получаем значения position-top из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    positionTop = getResponsiveSetting(settings, 'position_top', ':hover');\r\n  }\r\n\r\n  if (positionTop) {\r\n    styles += simplePropertyStyled(positionTop, 'top');\r\n  }\r\n\r\n  //Получаем значения position-right из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    positionRight = getResponsiveSetting(settings, 'position_right', ':hover');\r\n  }\r\n\r\n  if (positionRight) {\r\n    styles += simplePropertyStyled(positionRight, 'right');\r\n  }\r\n\r\n  //Получаем значения position-left из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    positionLeft = getResponsiveSetting(settings, 'position_left', ':hover');\r\n  }\r\n\r\n  if (positionLeft) {\r\n    styles += simplePropertyStyled(positionLeft, 'left');\r\n  }\r\n\r\n  //Получаем значения position-bottom из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    positionBottom = getResponsiveSetting(settings, 'position_bottom', ':hover');\r\n  }\r\n\r\n  if (positionBottom) {\r\n    styles += simplePropertyStyled(positionBottom, 'bottom');\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpBackgroundImage(settings) {\r\n  let styles = '';\r\n\r\n  let backgroundSize, backgroundRepeat, backgroundSizeInUnit, backgroundAttachment, backgroundPosition, backgroundImage;\r\n\r\n\r\n  //Получаем значения background-image из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundImage = getResponsiveSetting(settings, 'background_image');\r\n  }\r\n\r\n  if (backgroundImage) {\r\n    styles += backgroundImageControllerToStyles(backgroundImage);\r\n  }\r\n\r\n  //Получаем значения background-size из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSize = getResponsiveSetting(settings, 'background_size');\r\n  }\r\n\r\n  if (backgroundSize) {\r\n    styles += simplePropertyStyled(backgroundSize, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-repeat из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundRepeat = getResponsiveSetting(settings, 'background_repeat');\r\n  }\r\n\r\n  if (backgroundRepeat) {\r\n    styles += simplePropertyStyled(backgroundRepeat, 'background-repeat');\r\n  }\r\n\r\n  //Получаем значения background-size в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSizeInUnit = getResponsiveSetting(settings, 'background_image_width');\r\n  }\r\n\r\n  if (backgroundSizeInUnit) {\r\n    styles += sizeStyled(backgroundSizeInUnit, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-attachment из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundAttachment = getResponsiveSetting(settings, 'background_attachment');\r\n  }\r\n\r\n  if (backgroundAttachment) {\r\n    styles += simplePropertyStyled(backgroundAttachment, 'background-attachment');\r\n  }\r\n\r\n  //Получаем значения background-position из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundPosition = getResponsiveSetting(settings, 'background_position');\r\n  }\r\n\r\n  if (backgroundPosition) {\r\n    styles += simplePropertyStyled(backgroundPosition, 'background-position');\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpBackgroundImageHover(settings) {\r\n  let styles = '';\r\n\r\n  let backgroundSize, backgroundRepeat, backgroundSizeInUnit, backgroundAttachment, backgroundPosition, backgroundImage;\r\n\r\n  //Получаем значения background-size из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSize = getResponsiveSetting(settings, 'background_size', ':hover');\r\n  }\r\n\r\n  if (backgroundSize) {\r\n    styles += simplePropertyStyled(backgroundSize, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-repeat из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundRepeat = getResponsiveSetting(settings, 'background_repeat', ':hover');\r\n  }\r\n\r\n  if (backgroundRepeat) {\r\n    styles += simplePropertyStyled(backgroundRepeat, 'background-repeat');\r\n  }\r\n\r\n  //Получаем значения background-size в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSizeInUnit = getResponsiveSetting(settings, 'background_image_width', ':hover');\r\n  }\r\n\r\n  if (backgroundSizeInUnit) {\r\n    styles += sizeStyled(backgroundSizeInUnit, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-attachment из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundAttachment = getResponsiveSetting(settings, 'background_attachment', ':hover');\r\n  }\r\n\r\n  if (backgroundAttachment) {\r\n    styles += simplePropertyStyled(backgroundAttachment, 'background-attachment');\r\n  }\r\n\r\n  //Получаем значения background-position из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundPosition = getResponsiveSetting(settings, 'background_position', ':hover');\r\n  }\r\n\r\n  if (backgroundPosition) {\r\n    styles += simplePropertyStyled(backgroundPosition, 'background-position');\r\n  }\r\n\r\n  //Получаем значения background-image из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundImage = getResponsiveSetting(settings, 'background_image', ':hover');\r\n  }\r\n\r\n  if (backgroundImage) {\r\n    styles += backgroundImageControllerToStyles(backgroundImage);\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionBoxed(settings) {\r\n  let styles = '';\r\n\r\n  let width;\r\n\r\n  //Получаем значения width в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    width = getResponsiveSetting(settings, 'layout_content_width');\r\n  }\r\n\r\n  if (width) {\r\n    width = sliderStyled(width);\r\n    styles += `width: ${width};`;\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionBoxedHover(settings) {\r\n  let styles = '';\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionSectionBoxed(settings) {\r\n  let styles = '';\r\n\r\n  let padding;\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'layout_content_width');\r\n  }\r\n  let width = '100vw';\r\n  if(window?.page_areas?.length > 4){//todo:weak place\r\n    width = '100%';\r\n  }\r\n  if (padding) {\r\n    if(padding.size) {\r\n      styles += `padding-left:calc((${width} - ${padding.size + padding.unit}) / 2);padding-right:calc((${width} - ${padding.size + padding.unit}) / 2);width:${width};`;\r\n    }\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionFull(settings) {\r\n  let styles = '';\r\n\r\n  let margin, padding;\r\n\r\n  //Получаем значения margin из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    margin = getResponsiveSetting(settings, 'position_style_position_margin');\r\n  }\r\n\r\n  if (margin) {\r\n    styles += dimensionsControllerToStyles(margin, 'margin');\r\n  }\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'position_style_position_padding');\r\n  }\r\n\r\n  if (padding) {\r\n    styles += ` > .altrp-section{${dimensionsControllerToStyles(padding, 'padding')}}`;\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionFullHover(settings) {\r\n  let styles = '';\r\n\r\n  // let margin;\r\n  //\r\n  // //Получаем значения margin из контроллера, обрабатываем и добавляем в styles\r\n  //\r\n  // if (settings !== undefined) {\r\n  //   margin = getResponsiveSetting(settings, 'position_style_position_margin', ':hover');\r\n  // }\r\n  //\r\n  // if (margin) {\r\n  //   styles += dimensionsControllerToStyles(margin, 'margin');\r\n  // }\r\n\r\n  return styles;\r\n}\r\n/**\r\n * @return {string}\r\n */\r\n\r\nexport default function SectionWidgetComponent(settings, childrenLength) {\r\n\r\n  // console.log(`& > .altrp-section > .altrp-element_column{width:${100/childrenLength}%;}`);\r\n  return `\r\n\r\n  & > .altrp-section > .altrp-element_column{width:${100/childrenLength}%;}\r\n\r\n  & > div.altrp-section,\r\n  & > div.altrp-section-full-fill {\r\n    ${altrpSection(settings)}\r\n  }\r\n\r\n  & > div.altrp-section:hover,\r\n  & > div.altrp-section-full-fill:hover {\r\n    ${altrpSectionHover(settings)}\r\n  }\r\n  & > div.altrp-section.active,\r\n  & > div.altrp-section-full-fill.active {\r\n    ${altrpSectionHover(settings,'.active')}\r\n    ${(()=>{\r\n      const  styles = [\r\n        ['margin', 'position_style_position_margin', 'dimensions', '.active'],\r\n        ['padding', 'position_style_position_padding', 'dimensions', '.active'],\r\n      ];\r\n      return styledString(styles, settings);\r\n    })()\r\n  }\r\n  }\r\n  & > div.altrp-section div.altrp-column {\r\n    ${altrpSectionColumn(settings)}\r\n  }\r\n\r\n  & > div.altrp-section:hover div.altrp-column:hover {\r\n    ${altrpSectionColumnHover(settings)}\r\n  }\r\n\r\n  & > div.altrp-section {\r\n    ${altrpSectionSecond(settings)}\r\n  }\r\n\r\n  & > div.altrp-section:hover {\r\n    ${altrpSectionSecondHover(settings)}\r\n  }\r\n\r\n  & > div.altrp-section.altrp-background-image {\r\n    ${altrpBackgroundImage(settings)}\r\n  }\r\n\r\n  & > div.altrp-section.altrp-background-image:hover {\r\n    ${altrpBackgroundImageHover(settings)}\r\n  }\r\n\r\n  & > div.altrp-section_boxed,\r\n  & > div.altrp-section_section_boxed {\r\n    ${altrpSectionBoxed(settings)}\r\n  }\r\n\r\n  & > div.altrp-section_boxed:hover,\r\n  & > div.altrp-section_section_boxed:hover {\r\n    ${altrpSectionBoxedHover(settings)}\r\n  }\r\n\r\n  & > div.altrp-section_section-boxed {\r\n    ${altrpSectionSectionBoxed(settings)}\r\n  }\r\n\r\n  &,\r\n  & > div.altrp-section-full-fill {\r\n    ${altrpSectionFull(settings)}\r\n  }\r\n\r\n  &:hover,\r\n  & > div.altrp-section-full-fill:hover {\r\n    ${altrpSectionFullHover(settings)}\r\n  }\r\n\r\n`\r\n}\r\n","\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\n\r\nexport default function TabsSwitcherComponent(settings) {\r\n  const styles = [\r\n    \"& div.altrp-tabs-switcher_switch-wrapper span.bp3-control-indicator.bp3-control-indicator.bp3-control-indicator\",\r\n      [\"background\", \"box_around_color_one\", \"color\"],\r\n      [\"border-radius\", \"box_border_radius\", \"slider\"],\r\n      () => {\r\n        const value = getResponsiveSetting(settings, \"size\");\r\n        const slider = sliderStyled(value);\r\n\r\n        if(slider) {\r\n          return `\r\n            height: ${slider};\r\n            width: calc(${slider} * 2);\r\n\r\n            &:before {\r\n              height: calc(${slider} - 4px);\r\n              width: calc(${slider} - 4px);\r\n            }\r\n          `\r\n        } else {\r\n          return \"\"\r\n        }\r\n      },\r\n    \"}\",\r\n\r\n    \"& div.altrp-tabs-switcher_switch-wrapper span.bp3-control-indicator.bp3-control-indicator.bp3-control-indicator::before\",\r\n      [\"border-radius\", \"switch_border_radius\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"& div.altrp-tabs-switcher_switch-wrapper .altrp-tabs-switcher_switch:hover span.bp3-control-indicator.bp3-control-indicator.bp3-control-indicator::before\",\r\n    [\"border-radius\", \"switch_border_radius\", \"slider\", \":hover\"],\r\n    \"}\",\r\n\r\n\r\n    \"altrp-tabs-switcher_switch-wrapper span.bp3-control-indicator.bp3-control-indicator::before\",\r\n      [\"background\", \"switch_color\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_switch-wrapper .altrp-tabs-switcher_switch:hover span.bp3-control-indicator.bp3-control-indicator::before\",\r\n    [\"background\", \"switch_color\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_switch-wrapper .altrp-tabs-switcher_switch:hover span.bp3-control-indicator.bp3-control-indicator\",\r\n      [\"background\", \"box_around_color_one\", \"color\", \":hover\"],\r\n      [\"border-radius\", \"box_border_radius\", \"slider\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_switch-wrapper .altrp-tabs-switcher_switch:hover input:checked ~ span.bp3-control-indicator.bp3-control-indicator\",\r\n      [\"background\", \"box_around_color_two\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"& div.altrp-tabs-switcher_switch-wrapper input:checked ~ span.bp3-control-indicator.bp3-control-indicator.bp3-control-indicator\",\r\n      [\"background\", \"box_around_color_two\", \"color\"],\r\n      () => {\r\n        const value = getResponsiveSetting(settings, \"size\");\r\n        const slider = sliderStyled(value);\r\n\r\n        if(slider) {\r\n          return `\r\n            &:before {\r\n              left: calc(100% - ${slider});\r\n            }\r\n          `\r\n        } else {\r\n          return \"\"\r\n        }\r\n      },\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_label-one\",\r\n      [\"margin-right\", \"spacing\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_label-two\",\r\n      [\"margin-left\", \"spacing\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_wrapper\",\r\n      [\"margin-bottom\", \"margin_bottom\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_label-one\",\r\n      [\"\", \"typographic_title_one\", \"typographic\"],\r\n      [\"color\", \"color_title_one\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_label-one:hover\",\r\n      [\"\", \"typographic_title_one\", \"typographic\", \":hover\"],\r\n      [\"color\", \"color_title_one\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_label-two\",\r\n    [\"\", \"typographic_title_two\", \"typographic\"],\r\n    [\"color\", \"color_title_two\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_label-two:hover\",\r\n    [\"\", \"typographic_title_two\", \"typographic\", \":hover\"],\r\n    [\"color\", \"color_title_two\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n\r\n    \"altrp-tabs-switcher_content-one\",\r\n    [\"\", \"typographic_section_one\", \"typographic\"],\r\n    [\"color\", \"color_section_one\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_content-one:hover\",\r\n    [\"\", \"typographic_section_one\", \"typographic\", \":hover\"],\r\n    [\"color\", \"color_section_one\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_content-two\",\r\n    [\"\", \"typographic_section_two\", \"typographic\"],\r\n    [\"color\", \"color_section_two\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_content-two:hover\",\r\n    [\"\", \"typographic_section_two\", \"typographic\", \":hover\"],\r\n    [\"color\", \"color_section_two\", \"color\", \":hover\"],\r\n    \"}\",\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\nexport default function VideoComponent(settings) {\r\n  const styles = [\r\n    \"altrp-video\",\r\n    [\"width\", \"video_width\", \"slider\"],\r\n    [\"height\", \"video_height\", \"slider\"],\r\n    \"}\"\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","import {styledString} from \"../../helpers/styles\";\r\nconst {getResponsiveSetting} = window.altrpHelpers;\r\n\r\n/**\r\n *\r\n * @param {{}} settings\r\n * @param {string} elementId\r\n */\r\nexport default function getInputFileStyles(settings, elementId) {\r\n  let styles = [\r\n    ()=>{\r\n      let styles ='&&{';\r\n      const alignment = getResponsiveSetting(settings, 'alignment')\r\n      if(alignment ){\r\n        // styles += `flex-direction:row;\r\n        // .bp3-file-input{flex-grow:0}`\r\n        switch(alignment){\r\n          case 'stretch':{\r\n            styles += `.bp3-file-input{align-self:${alignment};width:100%}`\r\n          }\r\n          break\r\n          default:{\r\n            styles += `.bp3-file-input{align-self:${alignment}}`\r\n          }break\r\n        }\r\n      }\r\n      styles += '}';\r\n      if(getResponsiveSetting(settings, 'preview')){\r\n        styles += `&  .bp3-file-upload-input{display:none!important}\r\n\r\n        `\r\n      }\r\n      return styles\r\n    },\r\n    //<editor-fold description=text>\r\n    '.bp3-file-input.bp3-file-input',\r\n    ['width', 'width', 'slider'],\r\n    ['height', 'height', 'slider'],\r\n    '}',\r\n    '.bp3-file-upload-input',\r\n    ['height', 'height', 'slider'],\r\n    ['padding', 'padding', 'dimensions'],\r\n    ['', 'typographic', 'typographic'],\r\n    ['color', 'color', 'color'],\r\n    ['background-color', 'background', 'color'],\r\n    ['box-shadow', 'box_shadow', 'shadow'],\r\n    ['border-radius', 'radius', 'dimensions'],\r\n    '}',\r\n    '.bp3-file-input_preview',\r\n    ['color', 'color', 'color'],\r\n    ['background-color', 'background', 'color'],\r\n    '}',\r\n    '.bp3-file-input .bp3-file-upload-input-custom-text::after',\r\n    ['width', 'b_width', 'slider'],\r\n    ['height', 'b_height', 'slider'],\r\n    ['margin', 'b_margin', 'dimensions'],\r\n    ['padding', 'b_padding', 'dimensions'],\r\n    ['background-image', 'b_background', 'gradient'],\r\n    ['', 'b_typographic', 'typographic'],\r\n    ['color', 'b_color', 'color'],\r\n    ['box-shadow', 'b_box_shadow', 'shadow'],\r\n    '}',\r\n    /**\r\n     * hover\r\n     */\r\n    '.bp3-file-upload-input:hover',\r\n    ['', 'typographic', 'typographic', ':hover'],\r\n    ['color', 'color', 'color', ':hover'],\r\n    ['background-color', 'background', 'color', ':hover'],\r\n    ['box-shadow', 'box_shadow', 'shadow', ':hover'],\r\n    '}',\r\n    '.bp3-file-upload-input.bp3-file-upload-input-custom-text:hover::after',\r\n    ['background-image', 'b_background', 'gradient', ':hover'],\r\n    ['', 'b_typographic', 'typographic', ':hover'],\r\n    ['color', 'b_color', 'color', ':hover'],\r\n    ['box-shadow', 'b_box_shadow', 'shadow', ':hover'],\r\n    '}',\r\n    '.bp3-file-input_preview:hover',\r\n    ['color', 'color', 'color', ':hover'],\r\n    ['background-color', 'background', 'color', ':hover'],\r\n    '}',\r\n    /**\r\n     * active\r\n     */\r\n    '.bp3-file-input_preview:active',\r\n    ['color', 'color', 'color', '.active'],\r\n    ['background-color', 'background', 'color', '.active'],\r\n    '}',\r\n    '& input:active + .bp3-file-upload-input',\r\n    ['', 'typographic', 'typographic', '.active'],\r\n    ['color', 'color', 'color', '.active'],\r\n    ['background-color', 'background', 'color', '.active'],\r\n    ['box-shadow', 'box_shadow', 'shadow', ':hover'],\r\n    '}',\r\n    '& input:active + .bp3-file-upload-input.bp3-file-upload-input-custom-text::after',\r\n    ['background-image', 'b_background', 'gradient', '.active'],\r\n    ['', 'b_typographic', 'typographic', '.active'],\r\n    ['color', 'b_color', 'color', '.active'],\r\n    ['box-shadow', 'b_box_shadow', 'shadow', '.active'],\r\n    '}',\r\n    //</editor-fold>\r\n  ];\r\n  return styledString(styles, settings)\r\n}\r\n\r\n","import {styledString} from '../../helpers/styles';\r\nconst {getResponsiveSetting} = window.altrpHelpers;\r\n\r\n/**\r\n *\r\n * @param {{}} settings\r\n * @param {string} elementId\r\n */\r\nexport default function getInputGalleryStyles(settings, elementId) {\r\n  let styles = [\r\n    ()=>{\r\n      let styles ='&{';\r\n      let columns = getResponsiveSetting(settings, 'columns')\r\n      if(! columns){\r\n        columns = 6\r\n      }\r\n      styles += '.input-gallery-wrapper{grid-template-columns:'\r\n      let width = 100 / columns + '%';\r\n      let v_gap = getResponsiveSetting(settings, 'v_gap')\r\n      if(v_gap && v_gap.size && columns > 1){\r\n        width = `calc(${width} - ${(v_gap.size * (columns - 1)) / columns  + (v_gap.unit || 'px')})`\r\n      }\r\n      styles += `repeat(${columns}, ${width});`\r\n      const alignment = getResponsiveSetting(settings, 'alignment');\r\n\r\n      styles +='}'\r\n      styles +='}'\r\n      return styles\r\n    },\r\n\r\n    '.input-gallery-wrapper',\r\n    ['column-gap', 'v_gap', 'slider'],\r\n    ['row-gap', 'h_gap', 'slider'],\r\n    '}',\r\n    //<editor-fold description=items>\r\n    '.input-gallery__item.input-gallery__item',\r\n    ['height', 'height', 'slider'],\r\n    ['background-color', 'background', 'color'],\r\n    ['background-image', 'gradient', 'gradient'],\r\n    ['box-shadow', 'box_shadow', 'shadow'],\r\n    ['border-radius', 'radius', 'dimensions'],\r\n    ['border-style', 'b_style', '',],\r\n    ['border-width', 'b_width', 'dimensions',],\r\n    ['border-color', 'b_color', 'color',],\r\n    '}',\r\n    /**\r\n     * hover\r\n     */\r\n\r\n    '.input-gallery__item.input-gallery__item:hover',\r\n    ['background-color', 'background', 'color', ':hover'],\r\n    ['background-image', 'gradient', 'gradient', ':hover'],\r\n    ['box-shadow', 'box_shadow', 'shadow', ':hover'],\r\n    ['border-radius', 'radius', 'dimensions', ':hover'],\r\n    ['border-style', 'b_style', '', ':hover'],\r\n    ['border-width', 'b_width', 'dimensions', ':hover'],\r\n    ['border-color', 'b_color', 'color', ':hover'],\r\n    '}',\r\n    /**\r\n     * active\r\n     */\r\n\r\n    //</editor-fold>\r\n    //<editor-fold description=delete>\r\n\r\n    '.input-gallery__delete.input-gallery__delete',\r\n    ['height', 'delete_s', 'slider'],\r\n    ['width', 'delete_s', 'slider'],\r\n    ['top', 'delete_o', 'slider'],\r\n    ['right', 'delete_o', 'slider'],\r\n\r\n    '}',\r\n    //</editor-fold>\r\n  ];\r\n  return styledString(styles, settings)\r\n}\r\n\r\n","import {gradientStyled, styledString} from \"../../helpers/styles\";\nconst {getResponsiveSetting} = window.altrpHelpers;\n\n/**\n *\n * @param {{}} settings\n * @param {string} elementId\n */\nexport default function getInputMultiSelectStyles(settings, elementId) {\n  let styles = [\n    //<editor-fold description=\"стили лэйбла\">\n    '.altrp-field-label-container',\n    ['background-color', 'label_background_color', 'color'],\n    ['padding', 'label_padding', 'dimensions'],\n    ['color', 'label_style_font_color', 'color'],\n    ['top', 'label_position_top', 'slider'],\n    ['left', 'label_position_left', 'slider'],\n    ['width', 'label_width', 'slider'],\n    '}',\n    '.altrp-field-label',\n    ['', 'label_style_font_typographic', 'typographic'],\n    '}',\n    '.altrp-label-icon',\n    ['padding', 'icon_padding', 'dimensions'],\n    // ['width', 'icon_size', 'slider'],\n    // ['height', 'icon_size', 'slider'],\n    '}',\n\n    '.altrp-label-icon svg',\n    ['width', 'icon_size', 'slider'],\n    ['height', 'icon_size', 'slider'],\n    ['background-color', 'icon_color_background', 'color'],\n    ['fill', 'icon_color', 'color'],\n    ['stroke', 'icon_color', 'color'],\n    '}',\n    '.altrp-label-icon svg path',\n    ['fill', 'icon_color', 'color'],\n    ['stroke', 'icon_color', 'color'],\n    '}',\n    '.altrp-label-icon img',\n    ['width', 'icon_size', 'slider'],\n    ['height', 'icon_size', 'slider'],\n    ['background-color', 'icon_color_background', 'color'],\n    '}',\n    //</editor-fold>\n    '.altrp-field-label--required::after',\n    ['', 'required_style_font_typographic', 'typographic'],\n    ['color', 'required_style_font_color', 'color'],\n    '}',\n    '.mask-mismatch-message',\n    ['margin', 'mismatch_message_margin', 'dimensions'],\n    ['padding', 'mismatch_message_padding', 'dimensions'],\n    ['color', 'mismatch_message_font_color', 'color'],\n    ['', 'mismatch_message_typographic', 'typographic'],\n    '}',\n    //<editor-fold description=\"стили иконок\">\n    '.bp3-icon_text-widget.bp3-icon_text-widget.bp3-icon_text-widget',\n    ['margin', 'input_icons_margin', 'dimensions'],\n    ['padding', 'input_icons_padding', 'dimensions'],\n    ['border-radius', 'input_icons_radius', 'dimensions'],\n    '}',\n    '.bp3-icon_text-widget',\n    ['background-color', 'input_icons_background', 'color', ],\n    '}',\n    '.bp3-icon_text-widget:hover',\n    ['background-color', 'input_icons_background', 'color', ':hover'],\n    '}',\n    '.bp3-icon_text-widget:active',\n    ['background-color', 'input_icons_background', 'color', '.active'],\n    '}',\n    '.bp3-icon_text-widget svg',\n    ['width', 'input_icons_size', 'slider'],\n    ['height', 'input_icons_size', 'slider'],\n    '}',\n    '.bp3-icon_text-widget svg,& .bp3-icon_text-widget path',\n    ['fill', 'input_icons_fill', 'color'],\n    ['stroke', 'input_icons_stroke', 'color'],\n    '}',\n    '.bp3-icon_text-widget:hover svg,& .bp3-icon_text-widget:hover path',\n    ['fill', 'input_icons_fill', 'color', ':hover'],\n    ['stroke', 'input_icons_stroke', 'color', ':hover'],\n    '}',\n    '.bp3-icon_text-widget:active svg,& .bp3-icon_text-widget:active path',\n    ['fill', 'input_icons_fill', 'color', '.active'],\n    ['stroke', 'input_icons_stroke', 'color', '.active'],\n    '}',\n    '.bp3-icon_text-widget img',\n    ['width', 'input_icons_size', 'slider'],\n    ['height', 'input_icons_size', 'slider'],\n    '}',\n    //</editor-fold>\n    //<editor-fold description=\"стили тэгов\">\n    '.bp3-tag',\n    ['margin', 'tags_ma', 'dimensions'],\n    ['background-color', 'tags_bg', 'color'],\n    ['', 'tags_t', 'typographic'],\n    ['color', 'tags_color', 'color'],\n    '}',\n    '.bp3-tag:hover',\n    ['background-color', 'tags_bg', 'color', ':hover'],\n    ['', 'tags_t', 'typographic', ':hover'],\n    ['color', 'tags_color', 'color', ':hover'],\n    '}',\n    '.bp3-tag svg',\n    ['margin', 'delete_ma', 'dimensions'],\n    ['width', 'delete_s', 'slider'],\n    ['height', 'delete_s', 'slider'],\n    '}',\n    '.bp3-tag path',\n    ['fill', 'tags_delete_color', 'color'],\n    '}',\n    //</editor-fold>\n    //<editor-fold description=\"стили кнопки очистить\">\n    '.altrp-clear',\n    ['background-color', 'clear_bg', 'clear_bg'],\n    ['margin', 'clear_ma', 'dimensions'],\n    ['padding', 'clear_pa', 'dimensions'],\n    '}',\n    '.altrp-clear:hover',\n    ['background-color', 'clear_bg', 'clear_bg', ':hover'],\n    '}',\n    '.altrp-clear:active',\n    ['background-color', 'clear_bg', 'clear_bg', '.active'],\n    '}',\n    '.altrp-clear svg',\n    ['width', 'clear_s', 'slider'],\n    ['height', 'clear_s', 'slider'],\n    ['fill', 'clear_color', 'color'],\n    '}',\n    '.altrp-clear:hover svg',\n    ['fill', 'clear_color', 'color',':hover'],\n    '}',\n    '.altrp-clear:active svg',\n    ['fill', 'clear_color', 'color','.active'],\n    '}',\n    //</editor-fold>\n    //<editor-fold description=\"стили кнопки\">\n    ()=>{\n      const alignment = getResponsiveSetting(settings, 'alignment')\n      switch (alignment){\n        case 'flex-start':{\n          return '& .bp3-popover-target.bp3-popover-target{flex-grow:0}'\n        }\n        case 'flex-end':{\n          return '& .bp3-popover-target.bp3-popover-target{flex-grow:0}& .bp3-popover-wrapper{justify-content:flex-end;}'\n        }\n        case 'center':{\n          return '& .bp3-popover-target.bp3-popover-target{flex-grow:0}& .bp3-popover-wrapper{justify-content:center;}'\n        }\n      }\n    },\n    '.bp3-popover-target',\n    ['width', 'field_width', 'slider'],\n    ['margin', 'position_margin', 'dimensions'],\n    '}',\n    '.bp3-tag-input-values.bp3-tag-input-values',\n    ['height', 'field_height', 'slider'],\n    ['text-align', 'placeholder_and_value_alignment_position_section', ],\n    ['padding', 'position_padding', 'dimensions'],\n    ['', 'field_font_typographic', 'typographic'],\n    ['color', 'field_font_color', 'color'],\n    ['opacity', 'background_section_opacity', 'slider'],\n    '}',\n    '.bp3-tag-input',\n    ['background-color', 'input_bg', 'color'],\n    ['align-items', 'clear_align', ''],\n    ['border-style', 'border_type',],\n    ['border-width', 'border_width', 'dimensions'],\n    ['border-color', 'border_color', 'color'],\n    ['border-radius', 'border_radius', 'dimensions'],\n    ['', 'box_shadow', 'shadow'],\n    '}',\n    '.bp3-tag-input:hover',\n    ['background-color', 'input_bg', 'color', ':hover'],\n    ['', 'box_shadow', 'shadow',':hover'],\n    '}',\n    '.bp3-tag-input.bp3-active',\n    ['background-color', 'input_bg', 'color', ':focus'],\n    ['', 'box_shadow', 'shadow',':focus'],\n    '}',\n    '.bp3-tag-input-values.bp3-tag-input-values:hover',\n    ['', 'field_font_typographic', 'typographic', ':hover'],\n    ['color', 'field_font_color', 'color', ':hover'],\n    ['border-color', 'border_color', 'color',':hover'],\n    ['border-radius', 'border_radius', 'dimensions',':hover'],\n    '.bp3-icon svg',\n    ['height', 'i_size', 'slider',':hover'],\n    ['width', 'i_size', 'slider',':hover'],\n    ['margin', 'i_margin', 'dimensions',':hover'],\n    '}',\n    '.bp3-icon path',\n    ['fill', 'i_color', 'color',':hover'],\n    '}',\n    '.bp3-icon img',\n    ['height', 'i_size', 'slider',':hover'],\n    ['width', 'i_size', 'slider',':hover'],\n    ['margin', 'i_margin', 'dimensions',':hover'],\n    '}',\n    '}',\n    //</editor-fold>\n    //<editor-fold description=\"стили иконок\">\n    '.bp3-icon svg',\n    ['height', 'i_size', 'slider'],\n    ['width', 'i_size', 'slider'],\n    ['margin', 'i_margin', 'dimensions'],\n    '}',\n    '.bp3-icon path',\n    ['fill', 'i_color', 'color'],\n    '}',\n    '.bp3-icon img',\n    ['height', 'i_size', 'slider'],\n    ['width', 'i_size', 'slider'],\n    ['margin', 'i_margin', 'dimensions'],\n    '}',\n    //</editor-fold>\n\n  ];\n  return styledString(styles, settings)\n}\n\nexport function getInputMultiSelectPopoverStyles(settings, elementId){\n  let styles = [\n  //<editor-fold description=\"стили поповера\">\n    `.altrp-portal${elementId}`,\n    '.bp3-menu',\n    ['background-color', 'menu_bg', 'color'],\n    '}',\n    '.bp3-menu-item',\n    ['background-color', 'background_style_background_color', 'color'],\n    ['color', 'items_font_color', 'color'],\n    ['', 'field_font_typographic', 'typographic',],\n    '}',\n    '.bp3-menu-item:hover',\n    ['color', 'items_font_color', 'color', ':hover'],\n    ['background-color', 'background_style_background_color', 'color',':hover'],\n    ['', 'field_font_typographic', 'typographic', ':hover'],\n    '}',\n    '.bp3-menu-item.bp3-active.bp3-active',\n    ['color', 'items_font_color', 'color', '.active'],\n    ['background-color', 'background_style_background_color', 'color','.active'],\n    ['', 'field_font_typographic', 'typographic', '.active'],\n    '}',\n\n    '.bp3-icon-add svg',\n    ['height', 'a_size', 'slider'],\n    ['width', 'a_size', 'slider'],\n    ['margin', 'a_margin', 'dimensions'],\n    '}',\n    '.bp3-icon-add path',\n    ['fill', 'a_color', 'color'],\n    '}',\n    '.bp3-menu-item:hover .bp3-icon-add path',\n    ['fill', 'a_color', 'color', ':hover'],\n    '}',\n    '}',\n  //</editor-fold>\n  ];\n  return styledString(styles, settings)\n\n}\n","import {gradientStyled, styledString} from \"../../helpers/styles\";\r\nconst {getResponsiveSetting} = window.altrpHelpers;\r\n\r\n/**\r\n *\r\n * @param {{}} settings\r\n * @param {string} elementId\r\n */\r\nexport default function getInputSelectStyles(settings, elementId) {\r\n  let styles = [\r\n    //<editor-fold description=\"стили лэйбла\">\r\n    '.altrp-field-label-container',\r\n    ['background-color', 'label_background_color', 'color'],\r\n    ['padding', 'label_padding', 'dimensions'],\r\n    ['color', 'label_style_font_color', 'color'],\r\n    ['top', 'label_position_top', 'slider'],\r\n    ['left', 'label_position_left', 'slider'],\r\n    ['width', 'label_width', 'slider'],\r\n    '}',\r\n    '.altrp-field-label',\r\n    ['', 'label_style_font_typographic', 'typographic'],\r\n    '}',\r\n    '.altrp-label-icon',\r\n    ['padding', 'icon_padding', 'dimensions'],\r\n    // ['width', 'icon_size', 'slider'],\r\n    // ['height', 'icon_size', 'slider'],\r\n    '}',\r\n\r\n    '.altrp-label-icon svg',\r\n    ['width', 'icon_size', 'slider'],\r\n    ['height', 'icon_size', 'slider'],\r\n    ['background-color', 'icon_color_background', 'color'],\r\n    ['fill', 'icon_color', 'color'],\r\n    ['stroke', 'icon_color', 'color'],\r\n    '}',\r\n    '.altrp-label-icon svg path',\r\n    ['fill', 'icon_color', 'color'],\r\n    ['stroke', 'icon_color', 'color'],\r\n    '}',\r\n    '.altrp-label-icon img',\r\n    ['width', 'icon_size', 'slider'],\r\n    ['height', 'icon_size', 'slider'],\r\n    ['background-color', 'icon_color_background', 'color'],\r\n    '}',\r\n    //</editor-fold>\r\n    '.altrp-field-label--required::after',\r\n    ['', 'required_style_font_typographic', 'typographic'],\r\n    ['color', 'required_style_font_color', 'color'],\r\n    '}',\r\n    '.mask-mismatch-message',\r\n    ['margin', 'mismatch_message_margin', 'dimensions'],\r\n    ['padding', 'mismatch_message_padding', 'dimensions'],\r\n    ['color', 'mismatch_message_font_color', 'color'],\r\n    ['', 'mismatch_message_typographic', 'typographic'],\r\n    '}',\r\n    //<editor-fold description=\"стили иконок\">\r\n    '.bp3-icon_text-widget.bp3-icon_text-widget.bp3-icon_text-widget',\r\n    ['margin', 'input_icons_margin', 'dimensions'],\r\n    ['padding', 'input_icons_padding', 'dimensions'],\r\n    ['border-radius', 'input_icons_radius', 'dimensions'],\r\n    '}',\r\n    '.bp3-icon_text-widget',\r\n    ['background-color', 'input_icons_background', 'color', ],\r\n    '}',\r\n    '.bp3-icon_text-widget:hover',\r\n    ['background-color', 'input_icons_background', 'color', ':hover'],\r\n    '}',\r\n    '.bp3-icon_text-widget:active',\r\n    ['background-color', 'input_icons_background', 'color', '.active'],\r\n    '}',\r\n    '.bp3-icon_text-widget svg',\r\n    ['width', 'input_icons_size', 'slider'],\r\n    ['height', 'input_icons_size', 'slider'],\r\n    '}',\r\n    '.bp3-icon_text-widget svg,& .bp3-icon_text-widget path',\r\n    ['fill', 'input_icons_fill', 'color'],\r\n    ['stroke', 'input_icons_stroke', 'color'],\r\n    '}',\r\n    '.bp3-icon_text-widget:hover svg,& .bp3-icon_text-widget:hover path',\r\n    ['fill', 'input_icons_fill', 'color', ':hover'],\r\n    ['stroke', 'input_icons_stroke', 'color', ':hover'],\r\n    '}',\r\n    '.bp3-icon_text-widget:active svg,& .bp3-icon_text-widget:active path',\r\n    ['fill', 'input_icons_fill', 'color', '.active'],\r\n    ['stroke', 'input_icons_stroke', 'color', '.active'],\r\n    '}',\r\n    '.bp3-icon_text-widget img',\r\n    ['width', 'input_icons_size', 'slider'],\r\n    ['height', 'input_icons_size', 'slider'],\r\n    '}',\r\n    //</editor-fold>\r\n    //<editor-fold description=\"стили кнопки\">\r\n    ()=>{\r\n      const alignment = getResponsiveSetting(settings, 'alignment')\r\n      switch (alignment){\r\n        case 'flex-start':{\r\n          return '& .bp3-popover-target.bp3-popover-target{flex-grow:0}'\r\n        }\r\n        case 'flex-end':{\r\n          return '& .bp3-popover-target.bp3-popover-target{flex-grow:0}& .bp3-popover-wrapper{justify-content:flex-end;}'\r\n        }\r\n        case 'center':{\r\n          return '& .bp3-popover-target.bp3-popover-target{flex-grow:0}& .bp3-popover-wrapper{justify-content:center;}'\r\n        }\r\n      }\r\n    },\r\n    '.bp3-popover-target',\r\n    ['width', 'field_width', 'slider'],\r\n    ['margin', 'position_margin', 'dimensions'],\r\n    '}',\r\n    '.bp3-button.bp3-button',\r\n    ['height', 'field_height', 'slider'],\r\n    ['text-align', 'placeholder_and_value_alignment_position_section', ],\r\n    ['padding', 'position_padding', 'dimensions'],\r\n    ['', 'field_font_typographic', 'typographic'],\r\n    ['color', 'field_font_color', 'color'],\r\n    ['opacity', 'background_section_opacity', 'slider'],\r\n    ['border-style', 'border_type',],\r\n    ['border-width', 'border_width', 'dimensions'],\r\n    ['border-color', 'border_color', 'color'],\r\n    ['border-radius', 'border_radius', 'dimensions'],\r\n    ['', 'box_shadow', 'shadow'],\r\n    '}',\r\n    ()=>{\r\n      let styles = '.bp3-button.bp3-button{';\r\n      let button_gradient = getResponsiveSetting(settings, 'button_gradient')\r\n      if(button_gradient){\r\n        styles += gradientStyled(button_gradient)\r\n      }\r\n      styles += '}'\r\n      styles += '.bp3-button:hover{'\r\n      button_gradient = getResponsiveSetting(settings, 'button_gradient', ':hover')\r\n      if(button_gradient){\r\n        styles += gradientStyled(button_gradient)\r\n      }\r\n      styles += '}'\r\n      styles += '.bp3-button.bp3-button:active{'\r\n      button_gradient = getResponsiveSetting(settings, 'button_gradient', '.active')\r\n      if(button_gradient){\r\n        styles += gradientStyled(button_gradient)\r\n      }\r\n      styles += '}'\r\n      return styles;\r\n    },\r\n    '.bp3-button.bp3-button:hover',\r\n    ['', 'field_font_typographic', 'typographic', ':hover'],\r\n    ['color', 'field_font_color', 'color', ':hover'],\r\n    ['border-color', 'border_color', 'color',':hover'],\r\n    ['border-radius', 'border_radius', 'dimensions',':hover'],\r\n    '.bp3-icon svg',\r\n    ['height', 'i_size', 'slider',':hover'],\r\n    ['width', 'i_size', 'slider',':hover'],\r\n    ['margin', 'i_margin', 'dimensions',':hover'],\r\n    '}',\r\n    '.bp3-icon path',\r\n    ['fill', 'i_color', 'color',':hover'],\r\n    '}',\r\n    '.bp3-icon img',\r\n    ['height', 'i_size', 'slider',':hover'],\r\n    ['width', 'i_size', 'slider',':hover'],\r\n    ['margin', 'i_margin', 'dimensions',':hover'],\r\n    '}',\r\n    ['', 'box_shadow', 'shadow',':hover'],\r\n    '}',\r\n    '.bp3-button.bp3-button:active',\r\n    ['', 'field_font_typographic', 'typographic', '.active'],\r\n    ['color', 'field_font_color', 'color', '.active'],\r\n    ['border-color', 'border_color', 'color','.active'],\r\n    ['border-radius', 'border_radius', 'dimensions','.active'],\r\n    ['', 'box_shadow', 'shadow','.active'],\r\n\r\n    '.bp3-icon svg',\r\n    ['height', 'i_size', 'slider','.active'],\r\n    ['width', 'i_size', 'slider','.active'],\r\n    ['margin', 'i_margin', 'dimensions','.active'],\r\n    '}',\r\n    '.bp3-icon path',\r\n    ['fill', 'i_color', 'color','.active'],\r\n    '}',\r\n    '.bp3-icon img',\r\n    ['height', 'i_size', 'slider','.active'],\r\n    ['width', 'i_size', 'slider','.active'],\r\n    ['margin', 'i_margin', 'dimensions','.active'],\r\n    '}',\r\n    '}',\r\n    // '.bp3-input.bp3-input.bp3-input.bp3-input::placeholder',\r\n    // ['', 'placeholder_style_font_typographic', 'typographic'],\r\n    // ['color', 'placeholder_style_font_color', 'color'],\r\n    // '}',\r\n    // '.bp3-input.bp3-input.bp3-input.bp3-input:hover::placeholder',\r\n    // ['', 'placeholder_style_font_typographic', 'typographic',':hover'],\r\n    // ['color', 'placeholder_style_font_color', 'color', ':hover'],\r\n    // '}',\r\n    // '.bp3-input.bp3-input.bp3-input.bp3-input:focus::placeholder',\r\n    // ['', 'placeholder_style_font_typographic', 'typographic',':focus'],\r\n    // ['color', 'placeholder_style_font_color', 'color', ':focus'],\r\n    // '}',\r\n    //</editor-fold>\r\n    //<editor-fold description=\"стили иконок\">\r\n    '.bp3-icon svg',\r\n    ['height', 'i_size', 'slider'],\r\n    ['width', 'i_size', 'slider'],\r\n    ['margin', 'i_margin', 'dimensions'],\r\n    '}',\r\n    '.bp3-icon path',\r\n    ['fill', 'i_color', 'color'],\r\n    '}',\r\n    '.bp3-icon img',\r\n    ['height', 'i_size', 'slider'],\r\n    ['width', 'i_size', 'slider'],\r\n    ['margin', 'i_margin', 'dimensions'],\r\n    '}',\r\n    //</editor-fold>\r\n\r\n  ];\r\n  return styledString(styles, settings)\r\n}\r\n\r\nexport function getInputSelectPopoverStyles(settings, elementId){\r\n  let styles = [\r\n  //<editor-fold description=\"стили поповера\">\r\n    `.altrp-portal${elementId}`,\r\n    '.bp3-menu-item',\r\n    ['background-color', 'background_style_background_color', 'color'],\r\n    ['color', 'items_font_color', 'color'],\r\n    ['', 'field_font_typographic', 'typographic',],\r\n    '}',\r\n    '.bp3-menu-item:hover',\r\n    ['color', 'items_font_color', 'color', ':hover'],\r\n    ['background-color', 'background_style_background_color', 'color',':hover'],\r\n    ['', 'field_font_typographic', 'typographic', ':hover'],\r\n    '}',\r\n    '.bp3-menu-item.bp3-active.bp3-active',\r\n    ['color', 'items_font_color', 'color', '.active'],\r\n    ['background-color', 'background_style_background_color', 'color','.active'],\r\n    ['', 'field_font_typographic', 'typographic', '.active'],\r\n    '}',\r\n    '.bp3-input',\r\n    ['', 'field_font_typographic', 'typographic'],\r\n    ['height', 'si_size', 'slider'],\r\n    ['padding', 'si_padding', 'dimensions'],\r\n    ['color', 'si_color', 'color'],\r\n    ['background-color', 'si_bg_color', 'color'],\r\n    '}',\r\n    '.bp3-input:hover',\r\n    ['color', 'si_color', 'color', ':hover'],\r\n    ['background-color', 'si_bg_color', 'color', ':hover'],\r\n    '}',\r\n    '.bp3-input:focus',\r\n    ['color', 'si_color', 'color', ':focus'],\r\n    ['background-color', 'si_bg_color', 'color', ':focus'],\r\n    '}',\r\n    '.bp3-input-group .bp3-icon svg',\r\n      ['height', 'sii_size', 'slider'],\r\n      ['width', 'sii_size', 'slider'],\r\n      ['margin', 'sii_margin', 'dimensions'],\r\n    '}',\r\n    '.bp3-input-group .bp3-icon path',\r\n      ['fill', 'sii_color', 'color'],\r\n    '}',\r\n    '.bp3-icon-add svg',\r\n\r\n    ['height', 'a_size', 'slider'],\r\n    ['width', 'a_size', 'slider'],\r\n    ['margin', 'a_margin', 'dimensions'],\r\n    '}',\r\n    '.bp3-icon-add path',\r\n    ['fill', 'a_color', 'color'],\r\n    '}',\r\n    '.bp3-menu-item:hover .bp3-icon-add path',\r\n    ['fill', 'a_color', 'color', ':hover'],\r\n    '}',\r\n    '}',\r\n  //</editor-fold>\r\n  ];\r\n  return styledString(styles, settings)\r\n\r\n}\r\n","import {styledString} from \"../../helpers/styles\";\r\n\r\n/**\r\n *\r\n * @param {{}} settings\r\n * @param {string} elementId\r\n */\r\nexport default function getInputTextCommonStyles(settings, elementId) {\r\n  let styles = [\r\n    //<editor-fold description=\"стили лэйбла\">\r\n    '.altrp-field-label',\r\n    ['background-color', 'label_background_color', 'color'],\r\n    ['padding', 'label_padding', 'dimensions'],\r\n    ['color', 'label_style_font_color', 'color'],\r\n    ['', 'label_style_font_typographic', 'typographic'],\r\n    ['top', 'label_position_top', 'slider'],\r\n    ['left', 'label_position_left', 'slider'],\r\n    '}',\r\n    '.altrp-field-label-container',\r\n    ['width', 'label_width', 'slider'],\r\n    '}',\r\n    '.altrp-label-icon',\r\n    ['padding', 'icon_padding', 'dimensions'],\r\n    ['width', 'icon_size', 'slider'],\r\n    ['height', 'icon_size', 'slider'],\r\n    '}',\r\n\r\n    '.altrp-label-icon svg',\r\n    ['width', 'icon_size', 'slider'],\r\n    ['height', 'icon_size', 'slider'],\r\n    ['background-color', 'icon_color_background', 'color'],\r\n    ['fill', 'icon_color', 'color'],\r\n    ['stroke', 'icon_color', 'color'],\r\n    '}',\r\n    '.altrp-label-icon svg path',\r\n    ['fill', 'icon_color', 'color'],\r\n    ['stroke', 'icon_color', 'color'],\r\n    '}',\r\n    '.altrp-label-icon img',\r\n    ['width', 'icon_size', 'slider'],\r\n    ['height', 'icon_size', 'slider'],\r\n    ['background-color', 'icon_color_background', 'color'],\r\n    '}',\r\n    //</editor-fold>\r\n    //<editor-fold description=\"стили инпута\">\r\n    '.bp3-input-group',\r\n    ['width', 'field_width', 'slider'],\r\n    ['padding', 'position_margin', 'dimensions'],\r\n    '}',\r\n    '.bp3-input.bp3-input.bp3-input.bp3-input',\r\n    ['height', 'field_height', 'slider'],\r\n    ['text-align', 'placeholder_and_value_alignment_position_section', ],\r\n    ['padding', 'position_padding', 'dimensions'],\r\n    ['', 'field_font_typographic', 'typographic'],\r\n    ['color', 'field_font_color', 'color'],\r\n    ['background-color', 'background_style_background_color', 'color'],\r\n    ['opacity', 'background_section_opacity', 'slider'],\r\n    ['border-style', 'border_type',],\r\n    ['border-width', 'border_width', 'dimensions'],\r\n    ['border-color', 'border_color', 'color'],\r\n    ['border-radius', 'border_radius', 'dimensions'],\r\n    ['', 'box_shadow', 'shadow'],\r\n    '}',\r\n    '.bp3-input.bp3-input.bp3-input.bp3-input:hover',\r\n    ['', 'field_font_typographic', 'typographic', ':hover'],\r\n    ['color', 'field_font_color', 'color', ':hover'],\r\n    ['background-color', 'background_style_background_color', 'color',':hover'],\r\n    ['border-color', 'border_color', 'color',':hover'],\r\n    ['border-radius', 'border_radius', 'dimensions',':hover'],\r\n    ['', 'box_shadow', 'shadow',':hover'],\r\n    '}',\r\n    '.bp3-input.bp3-input.bp3-input.bp3-input:focus',\r\n    ['', 'field_font_typographic', 'typographic', ':focus'],\r\n    ['color', 'field_font_color', 'color', ':focus'],\r\n    ['background-color', 'background_style_background_color', 'color',':focus'],\r\n    ['border-color', 'border_color', 'color',':focus'],\r\n    ['border-radius', 'border_radius', 'dimensions',':focus'],\r\n    ['', 'box_shadow', 'shadow',':focus'],\r\n    '}',\r\n    '.bp3-input.bp3-input.bp3-input.bp3-input::placeholder',\r\n    ['', 'placeholder_style_font_typographic', 'typographic'],\r\n    ['color', 'placeholder_style_font_color', 'color'],\r\n    '}',\r\n    '.bp3-input.bp3-input.bp3-input.bp3-input:hover::placeholder',\r\n    ['', 'placeholder_style_font_typographic', 'typographic',':hover'],\r\n    ['color', 'placeholder_style_font_color', 'color', ':hover'],\r\n    '}',\r\n    '.bp3-input.bp3-input.bp3-input.bp3-input:focus::placeholder',\r\n    ['', 'placeholder_style_font_typographic', 'typographic',':focus'],\r\n    ['color', 'placeholder_style_font_color', 'color', ':focus'],\r\n    '}',\r\n    //</editor-fold>\r\n    '.altrp-field-label--required::after',\r\n    ['', 'required_style_font_typographic', 'typographic'],\r\n    ['color', 'required_style_font_color', 'color'],\r\n    '}',\r\n    '.mask-mismatch-message',\r\n    ['margin', 'mismatch_message_margin', 'dimensions'],\r\n    ['padding', 'mismatch_message_padding', 'dimensions'],\r\n    ['color', 'mismatch_message_font_color', 'color'],\r\n    ['', 'mismatch_message_typographic', 'typographic'],\r\n    '}',\r\n    '.bp3-icon_text-widget.bp3-icon_text-widget.bp3-icon_text-widget',\r\n    ['margin', 'input_icons_margin', 'dimensions'],\r\n    ['padding', 'input_icons_padding', 'dimensions'],\r\n    ['border-radius', 'input_icons_radius', 'dimensions'],\r\n    '}',\r\n    '.bp3-icon_text-widget',\r\n    ['background-color', 'input_icons_background', 'color', ],\r\n    '}',\r\n    '.bp3-icon_text-widget:hover',\r\n    ['background-color', 'input_icons_background', 'color', ':hover'],\r\n    '}',\r\n    '.bp3-icon_text-widget:active',\r\n    ['background-color', 'input_icons_background', 'color', '.active'],\r\n    '}',\r\n    '.bp3-icon_text-widget svg',\r\n    ['width', 'input_icons_size', 'slider'],\r\n    ['height', 'input_icons_size', 'slider'],\r\n    '}',\r\n    '.bp3-icon_text-widget svg,& .bp3-icon_text-widget path',\r\n    ['fill', 'input_icons_fill', 'color'],\r\n    ['stroke', 'input_icons_stroke', 'color'],\r\n    '}',\r\n    '.bp3-icon_text-widget:hover svg,& .bp3-icon_text-widget:hover path',\r\n    ['fill', 'input_icons_fill', 'color', ':hover'],\r\n    ['stroke', 'input_icons_stroke', 'color', ':hover'],\r\n    '}',\r\n    '.bp3-icon_text-widget:active svg,& .bp3-icon_text-widget:active path',\r\n    ['fill', 'input_icons_fill', 'color', '.active'],\r\n    ['stroke', 'input_icons_stroke', 'color', '.active'],\r\n    '}',\r\n    '.bp3-icon_text-widget img',\r\n    ['width', 'input_icons_size', 'slider'],\r\n    ['height', 'input_icons_size', 'slider'],\r\n    '}',\r\n  ];\r\n  return styledString(styles, settings)\r\n}\r\n","import {styledString} from \"../../helpers/styles\";\r\n\r\n/**\r\n *\r\n * @param {{}} settings\r\n * @param {string} elementId\r\n */\r\nexport default function getTemplateStyles(settings, elementId) {\r\n  let styles =[\r\n    '& > .altrp-posts > .altrp-post > .sections-wrapper',\r\n    ['width', 'width'],\r\n    '}'\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n\r\n","import {getResponsiveSetting} from \"../../helpers\";\r\nimport { typographicControllerToStyles, colorPropertyStyled } from \"../../helpers/styles\";\r\n\r\nconst getBreadcrumbsStyles =(settings,id)=>{\r\n    const parentClass = `.altrp-element${id}`;\r\n\r\n  let styles = '';\r\n\r\n  styles = `${parentClass} .bp3-icon svg{\r\n    width:${getResponsiveSetting(settings, 'icon_width') || '20px'};\r\n    height:${getResponsiveSetting(settings, 'icon_height') || '20px'};`\r\n\r\n  const colorIcon = getResponsiveSetting(settings, 'icon_color');\r\n\r\n  if (colorIcon) {\r\n    styles += colorPropertyStyled(colorIcon, 'color');\r\n  }\r\n\r\n    styles += `} `;\r\n\r\n    styles += `${parentClass} .bp3-icon{`;\r\n    let icon_ml = getResponsiveSetting(settings, 'icon_ml');\r\n    if(icon_ml){\r\n      styles += `margin-left:${icon_ml};`;\r\n    }\r\n    let icon_mr = getResponsiveSetting(settings, 'icon_mr');\r\n    if(icon_mr){\r\n        styles += `margin-right:${icon_mr};`;\r\n    }\r\n    styles += `} `;\r\n\r\n    styles += `${parentClass} .altrp-menu-item__icon {display:flex;}`;\r\n    let height = getResponsiveSetting(settings, 'height');\r\n    if(height){\r\n        styles += `${parentClass} .bp3-breadcrumbs{height:${height};}`;\r\n    }\r\n    styles += `${parentClass} .bp3-breadcrumbs > li::after{`;\r\n    const delimiter = getResponsiveSetting(settings, 'delimiter');\r\n    if(delimiter && delimiter.url){\r\n        styles += `background:url(${delimiter.url}) no-repeat center;`\r\n        styles += `background-size:contain;`\r\n    }\r\n    const delimiter_width = getResponsiveSetting(settings, 'delimiter_width');\r\n    if(delimiter_width){\r\n        styles += `width:${delimiter_width};`\r\n    }\r\n    const delimiter_height = getResponsiveSetting(settings, 'delimiter_height');\r\n    if(delimiter_height){\r\n        styles += `height:${delimiter_height};`\r\n    }\r\n    const delimiter_ml = getResponsiveSetting(settings, 'delimiter_ml');\r\n    if(delimiter_ml){\r\n        styles += `margin-left:${delimiter_ml};`\r\n    }\r\n    const delimiter_mr = getResponsiveSetting(settings, 'delimiter_mr');\r\n    if(delimiter_mr){\r\n        styles += `margin-right:${delimiter_mr};`\r\n    }\r\n\r\n    styles += `} `;\r\n    styles += `${parentClass} .bp3-breadcrumb:not(.bp3-breadcrumb-current){`;\r\n\r\n    let color = getResponsiveSetting(settings, 'color');\r\n\r\n    if(color && color.color){\r\n        styles += `color:${color.color};`;\r\n        styles += `svg, path {fill: ${color.color};`;\r\n    }\r\n    let font = getResponsiveSetting(settings, 'font');\r\n    if(font){\r\n        styles += typographicControllerToStyles(font);\r\n    }\r\n    styles += `} `;\r\n\r\n    styles += `${parentClass} .bp3-breadcrumb:not(.bp3-breadcrumb-current):hover{`;\r\n\r\n    color = getResponsiveSetting(settings, 'color', ':hover');\r\n\r\n    if(color && color.color){\r\n        styles += `color:${color.color};`;\r\n        styles += `svg, path {fill: ${color.color};`;\r\n    }\r\n    font = getResponsiveSetting(settings, 'font', ':hover');\r\n\r\n    if(font){\r\n        styles += typographicControllerToStyles(font);\r\n    }\r\n    styles += `}`;\r\n\r\n  styles += `${parentClass} .bp3-breadcrumb.bp3-breadcrumb-current{`;\r\n\r\n    let current_color = getResponsiveSetting(settings, 'current_color');\r\n\r\n    if(current_color && current_color.color){\r\n        styles += `color:${current_color.color};`;\r\n        styles += `svg, path {fill: ${current_color.color};}`;\r\n    }\r\n\r\n    let current_font = getResponsiveSetting(settings, 'current_font');\r\n\r\n    if(current_font){\r\n        styles += typographicControllerToStyles(current_font);\r\n    }\r\n\r\n    styles += `} `;\r\n\r\n    return styles;\r\n}\r\n\r\nexport default getBreadcrumbsStyles;\r\n","import {\r\n  simplePropertyStyled,\r\n  borderWidthStyled,\r\n  colorPropertyStyled,\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  sizeStyled,\r\n  textShadowControllerToStyles,\r\n  opacityStyled,\r\n  gradientStyled,\r\n  backgroundImageControllerToStyles,\r\n  translateStyled\r\n} from \"../../helpers/styles\";\r\nimport { getResponsiveSetting } from \"../../helpers\";\r\n\r\n/**\r\n * Преобразует объект стилей, который задается в виджете Heading в строку css для вставки в GlobalStyles\r\n * @param {{}} settings\r\n * @param {string} id\r\n * @return {string}\r\n */\r\n\r\nexport function getHeadingTypeAnimatingStyles(settings, id) {\r\n  let styles = \"\";\r\n\r\n  if (settings === undefined) {\r\n    return styles;\r\n  }\r\n\r\n  const parentClass = `.altrp-element${id}`;\r\n\r\n  styles += `${parentClass} .altrp-heading-sub:hover {`;\r\n\r\n  const justifyContentHeaddingSubHover = getResponsiveSetting(\r\n    settings,\r\n    \"sub_heading_settings_alignment\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (justifyContentHeaddingSubHover) {\r\n    styles += simplePropertyStyled(\r\n      justifyContentHeaddingSubHover,\r\n      \"justify-content\"\r\n    );\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  //hover\r\n  styles += `${parentClass} .altrp-icon-header:hover {`;\r\n\r\n  const marginBottomForHorizontalHover = getResponsiveSetting(\r\n    settings,\r\n    \"horizontal_offset_advanced_heading_content\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginBottomForHorizontalHover) {\r\n    styles += sizeStyled(marginBottomForHorizontalHover, \"margin-bottom\");\r\n  }\r\n\r\n  const marginBottomForVerticalHover = getResponsiveSetting(\r\n    settings,\r\n    \"vertical_offset_advanced_heading_content\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginBottomForVerticalHover) {\r\n    styles += sizeStyled(marginBottomForVerticalHover, \"margin-bottom\");\r\n  }\r\n\r\n  const marginBottomForRotateHover = getResponsiveSetting(\r\n    settings,\r\n    \"rotate_offset_advanced_heading_content\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginBottomForRotateHover) {\r\n    styles += sizeStyled(marginBottomForRotateHover, \"margin-bottom\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading {`;\r\n\r\n  //fix display with <strong> and <b> tags\r\n  styles += \"display:block;\";\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-animating-text {`;\r\n\r\n  const typographicAnimating = getResponsiveSetting(\r\n    settings,\r\n    \"animated_text_headline_animating_style\"\r\n  );\r\n\r\n  if (typographicAnimating) {\r\n    styles += typographicControllerToStyles(typographicAnimating);\r\n  }\r\n\r\n  const colorAnimating = getResponsiveSetting(\r\n    settings,\r\n    \"animated_text_color_headline_animating_style\"\r\n  );\r\n\r\n  if (colorAnimating) {\r\n    styles += colorPropertyStyled(colorAnimating, \"color\");\r\n  }\r\n\r\n  styles += `} `;\r\n  //hover\r\n  styles += `${parentClass} .altrp-animating-text:hover {`;\r\n\r\n  const typographicAnimatingHover = getResponsiveSetting(\r\n    settings,\r\n    \"animated_text_headline_animating_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (typographicAnimatingHover) {\r\n    styles += typographicControllerToStyles(typographicAnimatingHover);\r\n  }\r\n\r\n  const colorAnimatingHover = getResponsiveSetting(\r\n    settings,\r\n    \"animated_text_color_headline_animating_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (colorAnimatingHover) {\r\n    styles += colorPropertyStyled(colorAnimatingHover, \"color\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-no-animating-text {`;\r\n\r\n  const typographicNoAnimating = getResponsiveSetting(\r\n    settings,\r\n    \"text_headline_animating_style\"\r\n  );\r\n\r\n  if (typographicNoAnimating) {\r\n    styles += typographicControllerToStyles(typographicNoAnimating);\r\n  }\r\n\r\n  const colorNoAnimating = getResponsiveSetting(\r\n    settings,\r\n    \"text_color_headline_animating_style\"\r\n  );\r\n\r\n  if (colorNoAnimating) {\r\n    styles += colorPropertyStyled(colorNoAnimating, \"color\");\r\n  }\r\n\r\n  styles += `} `;\r\n  //hover\r\n  styles += `${parentClass} .altrp-heading-no-animating-text:hover {`;\r\n\r\n  const typographicNoAnimatingHover = getResponsiveSetting(\r\n    settings,\r\n    \"text_headline_animating_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (typographicNoAnimatingHover) {\r\n    styles += typographicControllerToStyles(typographicNoAnimatingHover);\r\n  }\r\n\r\n  const colorNoAnimatingHover = getResponsiveSetting(\r\n    settings,\r\n    \"text_color_headline_animating_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (colorNoAnimatingHover) {\r\n    styles += colorPropertyStyled(colorNoAnimatingHover, \"color\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-animating-highlighted-svg svg path {`;\r\n\r\n  const strokeWidthAnimatingSvg = getResponsiveSetting(\r\n    settings,\r\n    \"width_shape_animating\"\r\n  );\r\n\r\n  if (strokeWidthAnimatingSvg) {\r\n    styles += sizeStyled(strokeWidthAnimatingSvg, \"stroke-width\");\r\n  }\r\n\r\n  const colorAnimatingSvg = getResponsiveSetting(\r\n    settings,\r\n    \"color_shape_animating\"\r\n  );\r\n\r\n  if (colorAnimatingSvg) {\r\n    styles += colorPropertyStyled(colorAnimatingSvg, \"stroke\");\r\n  }\r\n\r\n  styles += `} `;\r\n  //hover\r\n  styles += `${parentClass} .altrp-animating-highlighted-svg:hover svg path {`;\r\n\r\n  const strokeWidthAnimatingSvgHover = getResponsiveSetting(\r\n    settings,\r\n    \"width_shape_animating\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (strokeWidthAnimatingSvgHover) {\r\n    styles += sizeStyled(strokeWidthAnimatingSvgHover, \"stroke-width\");\r\n  }\r\n\r\n  const colorAnimatingSvgHover = getResponsiveSetting(\r\n    settings,\r\n    \"color_shape_animating\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (colorAnimatingSvgHover) {\r\n    styles += colorPropertyStyled(colorAnimatingSvgHover, \"stroke\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  return styles;\r\n}\r\n","import {\r\n  simplePropertyStyled,\r\n  borderWidthStyled,\r\n  colorPropertyStyled,\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  sizeStyled,\r\n  textShadowControllerToStyles,\r\n  opacityStyled,\r\n  gradientStyled,\r\n  backgroundImageControllerToStyles,\r\n  translateStyled\r\n} from \"../../helpers/styles\";\r\nimport { getResponsiveSetting } from \"../../helpers\";\r\n\r\n/**\r\n * Преобразует объект стилей, который задается в виджете Heading в строку css для вставки в GlobalStyles\r\n * @param {{}} settings\r\n * @param {string} id\r\n * @return {string}\r\n */\r\n\r\nexport function getHeadingTypeHeadingStyles(settings, id) {\r\n  let styles = \"\";\r\n\r\n  if (settings === undefined) {\r\n    return styles;\r\n  }\r\n\r\n  const parentClass = `.altrp-element${id}`;\r\n\r\n  styles += `${parentClass} .altrp-heading-wrapper {`;\r\n\r\n  const justifyContent = getResponsiveSetting(\r\n    settings,\r\n    \"heading_settings_alignment\"\r\n  );\r\n  if (justifyContent) {\r\n\r\n    styles += simplePropertyStyled(justifyContent, \"justify-content\");\r\n    switch (justifyContent){\r\n      case 'stretch':{\r\n        styles += `& .altrp-heading{text-align:justify}`\r\n      }break\r\n      case 'center':{\r\n        styles += `& .altrp-heading{text-align:center}`\r\n      }break\r\n      case 'flex-start':{\r\n        styles += `& .altrp-heading{text-align:left}`\r\n      }break\r\n      case 'flex-end':{\r\n        styles += `& .altrp-heading{text-align:right}`\r\n      }break\r\n    }\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-sub {`;\r\n\r\n  const justifyContentHeaddingSub = getResponsiveSetting(\r\n    settings,\r\n    \"sub_heading_settings_alignment\"\r\n  );\r\n\r\n  if (justifyContentHeaddingSub) {\r\n    styles += simplePropertyStyled(\r\n      justifyContentHeaddingSub,\r\n      \"justify-content\"\r\n    );\r\n  }\r\n\r\n  const textShadowHeaddingSub = getResponsiveSetting(\r\n    settings,\r\n    \"text_shadow_sub_heading\"\r\n  );\r\n\r\n  if (textShadowHeaddingSub) {\r\n    styles += textShadowControllerToStyles(textShadowHeaddingSub);\r\n  }\r\n\r\n  const typographicHeaddingSub = getResponsiveSetting(\r\n    settings,\r\n    \"typographic_sub_heading\"\r\n  );\r\n\r\n  if (typographicHeaddingSub) {\r\n    styles += typographicControllerToStyles(typographicHeaddingSub);\r\n  }\r\n\r\n  const paddingHeaddingSub = getResponsiveSetting(\r\n    settings,\r\n    \"padding_sub_heading\"\r\n  );\r\n\r\n  if (paddingHeaddingSub) {\r\n    styles += dimensionsControllerToStyles(paddingHeaddingSub);\r\n  }\r\n\r\n  const colorHeaddingSub = getResponsiveSetting(settings, \"color_sub_heading\");\r\n\r\n  if (colorHeaddingSub) {\r\n    styles += colorPropertyStyled(colorHeaddingSub, \"color\");\r\n  }\r\n\r\n  const backgroundColorHeaddingSub = getResponsiveSetting(\r\n    settings,\r\n    \"bg_sub_heading\"\r\n  );\r\n\r\n  if (backgroundColorHeaddingSub) {\r\n    styles += colorPropertyStyled(\r\n      backgroundColorHeaddingSub,\r\n      \"background-color\"\r\n    );\r\n  }\r\n\r\n  const widthHeadingSub = getResponsiveSetting(settings, \"width_sub_heading\");\r\n\r\n  if (widthHeadingSub) {\r\n    styles += sizeStyled(widthHeadingSub, \"width\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-sub:hover {`;\r\n\r\n  const justifyContentHeaddingSubHover = getResponsiveSetting(\r\n    settings,\r\n    \"sub_heading_settings_alignment\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (justifyContentHeaddingSubHover) {\r\n    styles += simplePropertyStyled(\r\n      justifyContentHeaddingSubHover,\r\n      \"justify-content\"\r\n    );\r\n  }\r\n\r\n  const textShadowHeaddingSubHover = getResponsiveSetting(\r\n    settings,\r\n    \"text_shadow_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (textShadowHeaddingSubHover) {\r\n    styles += textShadowControllerToStyles(textShadowHeaddingSubHover);\r\n  }\r\n\r\n  const typographicHeaddingSubHover = getResponsiveSetting(\r\n    settings,\r\n    \"typographic_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (typographicHeaddingSubHover) {\r\n    styles += typographicControllerToStyles(typographicHeaddingSubHover);\r\n  }\r\n\r\n  const paddingHeaddingSubHover = getResponsiveSetting(\r\n    settings,\r\n    \"padding_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (paddingHeaddingSubHover) {\r\n    styles += dimensionsControllerToStyles(paddingHeaddingSubHover);\r\n  }\r\n\r\n  const colorHeaddingSubHover = getResponsiveSetting(\r\n    settings,\r\n    \"color_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (colorHeaddingSubHover) {\r\n    styles += colorPropertyStyled(colorHeaddingSubHover, \"color\");\r\n  }\r\n\r\n  const backgroundColorHeaddingSubHover = getResponsiveSetting(\r\n    settings,\r\n    \"bg_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (backgroundColorHeaddingSubHover) {\r\n    styles += colorPropertyStyled(\r\n      backgroundColorHeaddingSubHover,\r\n      \"background-color\"\r\n    );\r\n  }\r\n\r\n  const widthHeadingSubHover = getResponsiveSetting(\r\n    settings,\r\n    \"width_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (widthHeadingSubHover) {\r\n    styles += sizeStyled(widthHeadingSubHover, \"width\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-wrapper-sub-bottom .altrp-heading-sub {`;\r\n\r\n  const marginTop = getResponsiveSetting(settings, \"spacing_sub_heading\");\r\n\r\n  if (marginTop) {\r\n    styles += sizeStyled(marginTop, \"margin-top\");\r\n  }\r\n\r\n  styles += `} `;\r\n  //hover\r\n  styles += `${parentClass} .altrp-heading-wrapper-sub-bottom .altrp-heading-sub:hover {`;\r\n\r\n  const marginTopHover = getResponsiveSetting(\r\n    settings,\r\n    \"spacing_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginTopHover) {\r\n    styles += sizeStyled(marginTopHover, \"margin-top\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-wrapper-sub-top .altrp-heading-sub {`;\r\n\r\n  const marginBottom = getResponsiveSetting(settings, \"spacing_sub_heading\");\r\n\r\n  if (marginBottom) {\r\n    styles += sizeStyled(marginBottom, \"margin-bottom\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-wrapper-sub-top .altrp-heading-sub:hover {`;\r\n\r\n  const marginBottomHover = getResponsiveSetting(\r\n    settings,\r\n    \"spacing_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginBottomHover) {\r\n    styles += sizeStyled(marginBottomHover, \"margin-bottom\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-wrapper-sub-left .altrp-heading-sub {`;\r\n\r\n  const marginRight = getResponsiveSetting(settings, \"spacing_sub_heading\");\r\n\r\n  if (marginRight) {\r\n    styles += sizeStyled(marginRight, \"margin-right\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-wrapper-sub-left .altrp-heading-sub:hover {`;\r\n\r\n  const marginRightHover = getResponsiveSetting(\r\n    settings,\r\n    \"spacing_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginRightHover) {\r\n    styles += sizeStyled(marginRightHover, \"margin-right\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-wrapper-sub-right .altrp-heading-sub {`;\r\n\r\n  const marginLeft = getResponsiveSetting(settings, \"spacing_sub_heading\");\r\n\r\n  if (marginLeft) {\r\n    styles += sizeStyled(marginLeft, \"margin-left\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-wrapper-sub-right .altrp-heading-sub:hover {`;\r\n\r\n  const marginLeftHover = getResponsiveSetting(\r\n    settings,\r\n    \"spacing_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginLeftHover) {\r\n    styles += sizeStyled(marginLeftHover, \"margin-left\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-advanced-wrapper {`;\r\n\r\n  const textAlignAdvancedWrapper = getResponsiveSetting(\r\n    settings,\r\n    \"alignment_advanced_heading_content\"\r\n  );\r\n\r\n  if (textAlignAdvancedWrapper) {\r\n    styles += simplePropertyStyled(textAlignAdvancedWrapper, \"text-align\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-advanced {`;\r\n\r\n  const backgroundColorHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"background_color_advanced_heading_style\"\r\n  );\r\n\r\n  if (backgroundColorHeadingAdvanced) {\r\n    styles += colorPropertyStyled(\r\n      backgroundColorHeadingAdvanced,\r\n      \"background-color\"\r\n    );\r\n  }\r\n\r\n  const colorHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"color_advanced_heading_style\"\r\n  );\r\n\r\n  if (colorHeadingAdvanced) {\r\n    styles += colorPropertyStyled(colorHeadingAdvanced, \"color\");\r\n  }\r\n\r\n  const paddingHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"padding_advanced_heading_style\"\r\n  );\r\n\r\n  if (paddingHeadingAdvanced) {\r\n    styles += dimensionsControllerToStyles(paddingHeadingAdvanced);\r\n  }\r\n\r\n  const typographicHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"typography_advanced_heading_style\"\r\n  );\r\n\r\n  if (typographicHeadingAdvanced) {\r\n    styles += typographicControllerToStyles(typographicHeadingAdvanced);\r\n  }\r\n\r\n  const textShadowHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"text_shadow_advanced_heading_style\"\r\n  );\r\n\r\n  if (textShadowHeadingAdvanced) {\r\n    styles += textShadowControllerToStyles(textShadowHeadingAdvanced);\r\n  }\r\n\r\n  const borderTypeHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"border_type_advanced_heading_style\"\r\n  );\r\n\r\n  if (borderTypeHeadingAdvanced) {\r\n    styles += simplePropertyStyled(borderTypeHeadingAdvanced, \"border-style\");\r\n  }\r\n\r\n  const borderWidthHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"border_width_advanced_heading_style\"\r\n  );\r\n\r\n  if (borderWidthHeadingAdvanced) {\r\n    styles += borderWidthStyled(borderWidthHeadingAdvanced);\r\n  }\r\n\r\n  const borderColorHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"border_color_advanced_heading_style\"\r\n  );\r\n\r\n  if (borderColorHeadingAdvanced) {\r\n    styles += colorPropertyStyled(borderColorHeadingAdvanced, \"border-color\");\r\n  }\r\n\r\n  const borderRadiusHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"border_radius_advanced_heading_style\"\r\n  );\r\n\r\n  if (borderRadiusHeadingAdvanced) {\r\n    styles += dimensionsControllerToStyles(\r\n      borderRadiusHeadingAdvanced,\r\n      \"border-radius\"\r\n    );\r\n  }\r\n\r\n  const opacityHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"opacity_advanced_heading_style\"\r\n  );\r\n\r\n  if (opacityHeadingAdvanced) {\r\n    styles += opacityStyled(opacityHeadingAdvanced);\r\n  }\r\n\r\n  styles += `} `;\r\n  //hover\r\n  styles += `${parentClass} .altrp-heading-advanced:hover {`;\r\n\r\n  const backgroundColorHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"background_color_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (backgroundColorHeadingAdvancedHover) {\r\n    styles += colorPropertyStyled(\r\n      backgroundColorHeadingAdvancedHover,\r\n      \"background-color\"\r\n    );\r\n  }\r\n\r\n  const colorHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"color_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (colorHeadingAdvancedHover) {\r\n    styles += colorPropertyStyled(colorHeadingAdvancedHover, \"color\");\r\n  }\r\n\r\n  const paddingHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"padding_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (paddingHeadingAdvancedHover) {\r\n    styles += dimensionsControllerToStyles(paddingHeadingAdvancedHover);\r\n  }\r\n\r\n  const typographicHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"typography_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (typographicHeadingAdvancedHover) {\r\n    styles += typographicControllerToStyles(typographicHeadingAdvancedHover);\r\n  }\r\n\r\n  const textShadowHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"text_shadow_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (textShadowHeadingAdvancedHover) {\r\n    styles += textShadowControllerToStyles(textShadowHeadingAdvancedHover);\r\n  }\r\n\r\n  const borderTypeHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"border_type_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (borderTypeHeadingAdvancedHover) {\r\n    styles += simplePropertyStyled(\r\n      borderTypeHeadingAdvancedHover,\r\n      \"border-style\"\r\n    );\r\n  }\r\n\r\n  const borderWidthHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"border_width_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (borderWidthHeadingAdvancedHover) {\r\n    styles += borderWidthStyled(borderWidthHeadingAdvancedHover);\r\n  }\r\n\r\n  const borderColorHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"border_color_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (borderColorHeadingAdvancedHover) {\r\n    styles += colorPropertyStyled(\r\n      borderColorHeadingAdvancedHover,\r\n      \"border-color\"\r\n    );\r\n  }\r\n\r\n  const borderRadiusHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"border_radius_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (borderRadiusHeadingAdvancedHover) {\r\n    styles += dimensionsControllerToStyles(\r\n      borderRadiusHeadingAdvancedHover,\r\n      \"border-radius\"\r\n    );\r\n  }\r\n\r\n  const opacityHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"opacity_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (opacityHeadingAdvancedHover) {\r\n    styles += opacityStyled(opacityHeadingAdvancedHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-icon-header {`;\r\n\r\n  const marginBottomForHorizontal = getResponsiveSetting(\r\n    settings,\r\n    \"horizontal_offset_advanced_heading_content\"\r\n  );\r\n\r\n  if (marginBottomForHorizontal) {\r\n    styles += sizeStyled(marginBottomForHorizontal, \"margin-bottom\");\r\n  }\r\n\r\n  const marginBottomForVertical = getResponsiveSetting(\r\n    settings,\r\n    \"vertical_offset_advanced_heading_content\"\r\n  );\r\n\r\n  if (marginBottomForVertical) {\r\n    styles += sizeStyled(marginBottomForVertical, \"margin-bottom\");\r\n  }\r\n\r\n  const marginBottomForRotate = getResponsiveSetting(\r\n    settings,\r\n    \"rotate_offset_advanced_heading_content\"\r\n  );\r\n\r\n  if (marginBottomForRotate) {\r\n    styles += sizeStyled(marginBottomForRotate, \"margin-bottom\");\r\n  }\r\n\r\n  styles += `} `;\r\n  //hover\r\n  styles += `${parentClass} .altrp-icon-header:hover {`;\r\n\r\n  const marginBottomForHorizontalHover = getResponsiveSetting(\r\n    settings,\r\n    \"horizontal_offset_advanced_heading_content\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginBottomForHorizontalHover) {\r\n    styles += sizeStyled(marginBottomForHorizontalHover, \"margin-bottom\");\r\n  }\r\n\r\n  const marginBottomForVerticalHover = getResponsiveSetting(\r\n    settings,\r\n    \"vertical_offset_advanced_heading_content\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginBottomForVerticalHover) {\r\n    styles += sizeStyled(marginBottomForVerticalHover, \"margin-bottom\");\r\n  }\r\n\r\n  const marginBottomForRotateHover = getResponsiveSetting(\r\n    settings,\r\n    \"rotate_offset_advanced_heading_content\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginBottomForRotateHover) {\r\n    styles += sizeStyled(marginBottomForRotateHover, \"margin-bottom\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading, ${parentClass} .altrp-heading a {`;\r\n\r\n  const color = getResponsiveSetting(settings, \"heading_style_color\");\r\n\r\n  if (color) {\r\n    styles += colorPropertyStyled(color, \"color\");\r\n  }\r\n\r\n  const typographic = getResponsiveSetting(\r\n    settings,\r\n    \"heading_style_typographic\"\r\n  );\r\n\r\n  if (typographic) {\r\n    styles += typographicControllerToStyles(typographic);\r\n  }\r\n\r\n  const textShadow = getResponsiveSetting(\r\n    settings,\r\n    \"heading_style_text_shadow\"\r\n  );\r\n\r\n  if (textShadow) {\r\n    styles += textShadowControllerToStyles(textShadow);\r\n  }\r\n\r\n  const margin = getResponsiveSetting(settings, \"style_position_margin\");\r\n\r\n  if (margin) {\r\n    styles += dimensionsControllerToStyles(margin, \"margin\");\r\n  }\r\n\r\n  const padding = getResponsiveSetting(settings, \"style_position_padding\");\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  const zIndex = getResponsiveSetting(settings, \"position_z_index\");\r\n\r\n  if (zIndex) {\r\n    styles += simplePropertyStyled(zIndex, \"z-index\");\r\n  }\r\n\r\n  const backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"style_background_color\"\r\n  );\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, \"background-color\");\r\n  }\r\n\r\n  const opacity = getResponsiveSetting(settings, \"style_background_opacity\");\r\n\r\n  if (opacity) {\r\n    styles += opacityStyled(opacity);\r\n  }\r\n\r\n  const gradient = getResponsiveSetting(settings, \"gradient\");\r\n\r\n  if (gradient) {\r\n    styles += gradientStyled(gradient);\r\n  }\r\n\r\n  const transform = getResponsiveSetting(settings, \"transform_style\");\r\n\r\n  if (transform) {\r\n    styles += translateStyled(transform);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading, ${parentClass} .altrp-heading a:hover {`;\r\n\r\n  const colorLinkHover = getResponsiveSetting(settings, \"heading_style_color\", \":hover\");\r\n\r\n  if (colorLinkHover) {\r\n    styles += colorPropertyStyled(colorLinkHover, \"color\");\r\n    styles += \"text-decoration: none; \";\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading {`;\r\n\r\n  const borderType = getResponsiveSetting(settings, \"style_border_type\");\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, \"border-style\");\r\n  }\r\n\r\n  const borderWidth = getResponsiveSetting(settings, \"style_border_width\");\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  const borderColor = getResponsiveSetting(settings, \"style_border_color\");\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, \"border-color\");\r\n  }\r\n\r\n  const borderRadius = getResponsiveSetting(settings, \"style_border_radius\");\r\n\r\n  if (borderRadius) {\r\n    styles += sizeStyled(borderRadius, \"border-radius\");\r\n  }\r\n  //fix display with <strong> and <b> tags\r\n  styles += \"display:block;\";\r\n  styles += `} `;\r\n  //hover\r\n  styles += `${parentClass} .altrp-heading:hover {`;\r\n\r\n  const colorHover = getResponsiveSetting(\r\n    settings,\r\n    \"heading_style_color\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (colorHover) {\r\n    styles += colorPropertyStyled(colorHover, \"color\");\r\n  }\r\n\r\n  const typographicHover = getResponsiveSetting(\r\n    settings,\r\n    \"heading_style_typographic\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (typographicHover) {\r\n    styles += typographicControllerToStyles(typographicHover);\r\n  }\r\n\r\n  const textShadowHover = getResponsiveSetting(\r\n    settings,\r\n    \"heading_style_text_shadow\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (textShadowHover) {\r\n    styles += textShadowControllerToStyles(textShadowHover);\r\n  }\r\n\r\n  const marginHover = getResponsiveSetting(\r\n    settings,\r\n    \"style_position_margin\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginHover) {\r\n    styles += dimensionsControllerToStyles(marginHover, \"margin\");\r\n  }\r\n\r\n  const paddingHover = getResponsiveSetting(\r\n    settings,\r\n    \"style_position_padding\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (paddingHover) {\r\n    styles += dimensionsControllerToStyles(paddingHover);\r\n  }\r\n\r\n  const zIndexHover = getResponsiveSetting(\r\n    settings,\r\n    \"position_z_index\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (zIndexHover) {\r\n    styles += simplePropertyStyled(zIndexHover, \"z-index\");\r\n  }\r\n\r\n  const backgroundColorHover = getResponsiveSetting(\r\n    settings,\r\n    \"style_background_color\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (backgroundColorHover) {\r\n    styles += colorPropertyStyled(backgroundColorHover, \"background-color\");\r\n  }\r\n\r\n  const opacityHover = getResponsiveSetting(\r\n    settings,\r\n    \"style_background_opacity\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (opacityHover) {\r\n    styles += opacityStyled(opacityHover);\r\n  }\r\n\r\n  const gradientHover = getResponsiveSetting(settings, \"gradient\", \":hover\");\r\n\r\n  if (gradientHover) {\r\n    styles += gradientStyled(gradientHover);\r\n  }\r\n\r\n  const borderTypeHover = getResponsiveSetting(\r\n    settings,\r\n    \"style_border_type\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (borderTypeHover) {\r\n    styles += simplePropertyStyled(borderTypeHover, \"border-style\");\r\n  }\r\n\r\n  const borderWidthHover = getResponsiveSetting(\r\n    settings,\r\n    \"style_border_width\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (borderWidthHover) {\r\n    styles += borderWidthStyled(borderWidthHover);\r\n  }\r\n\r\n  const borderColorHover = getResponsiveSetting(\r\n    settings,\r\n    \"style_border_color\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (borderColorHover) {\r\n    styles += colorPropertyStyled(borderColorHover, \"border-color\");\r\n  }\r\n\r\n  const borderRadiusHover = getResponsiveSetting(\r\n    settings,\r\n    \"style_border_radius\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (borderRadiusHover) {\r\n    styles += sizeStyled(borderRadiusHover, \"border-radius\");\r\n  }\r\n\r\n  const transformHover = getResponsiveSetting(\r\n    settings,\r\n    \"transform_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (transformHover) {\r\n    styles += translateStyled(transformHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading.altrp-background-image {`;\r\n\r\n  const backgroundImage = getResponsiveSetting(settings, \"background_image\");\r\n\r\n  if (backgroundImage) {\r\n    styles += backgroundImageControllerToStyles(backgroundImage);\r\n  }\r\n\r\n  const backgroundPosition = getResponsiveSetting(\r\n    settings,\r\n    \"background_position\"\r\n  );\r\n\r\n  if (backgroundPosition) {\r\n    styles += simplePropertyStyled(backgroundPosition, \"background-position\");\r\n  }\r\n\r\n  const backgroundAttachment = getResponsiveSetting(\r\n    settings,\r\n    \"background_attachment\"\r\n  );\r\n\r\n  if (backgroundAttachment) {\r\n    styles += simplePropertyStyled(\r\n      backgroundAttachment,\r\n      \"background-attachment\"\r\n    );\r\n  }\r\n\r\n  const backgroundRepeat = getResponsiveSetting(settings, \"background_repeat\");\r\n\r\n  if (backgroundRepeat) {\r\n    styles += simplePropertyStyled(backgroundRepeat, \"background-repeat\");\r\n  }\r\n\r\n  const backgroundSizeInUnits = getResponsiveSetting(\r\n    settings,\r\n    \"background_image_width\"\r\n  );\r\n\r\n  if (backgroundSizeInUnits) {\r\n    styles += sizeStyled(backgroundSizeInUnits, \"background-size\");\r\n  }\r\n\r\n  const backgroundSize = getResponsiveSetting(settings, \"background_size\");\r\n\r\n  if (backgroundSize) {\r\n    styles += simplePropertyStyled(backgroundSize, \"background-size\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading.altrp-background-image:hover {`;\r\n\r\n  const backgroundImageHover = getResponsiveSetting(\r\n    settings,\r\n    \"background_image\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (backgroundImageHover) {\r\n    styles += backgroundImageControllerToStyles(backgroundImageHover);\r\n  }\r\n\r\n  const backgroundPositionHover = getResponsiveSetting(\r\n    settings,\r\n    \"background_position\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (backgroundPositionHover) {\r\n    styles += simplePropertyStyled(\r\n      backgroundPositionHover,\r\n      \"background-position\"\r\n    );\r\n  }\r\n\r\n  const backgroundAttachmentHover = getResponsiveSetting(\r\n    settings,\r\n    \"background_attachment\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (backgroundAttachmentHover) {\r\n    styles += simplePropertyStyled(\r\n      backgroundAttachmentHover,\r\n      \"background-attachment\"\r\n    );\r\n  }\r\n\r\n  const backgroundRepeatHover = getResponsiveSetting(\r\n    settings,\r\n    \"background_repeat\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (backgroundRepeatHover) {\r\n    styles += simplePropertyStyled(backgroundRepeatHover, \"background-repeat\");\r\n  }\r\n\r\n  const backgroundSizeInUnitsHover = getResponsiveSetting(\r\n    settings,\r\n    \"background_image_width\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (backgroundSizeInUnitsHover) {\r\n    styles += sizeStyled(backgroundSizeInUnitsHover, \"background-size\");\r\n  }\r\n\r\n  const backgroundSizeHover = getResponsiveSetting(\r\n    settings,\r\n    \"background_size\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (backgroundSizeHover) {\r\n    styles += simplePropertyStyled(backgroundSizeHover, \"background-size\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  return styles;\r\n}\r\n","import { getResponsiveSetting } from '../../helpers';\r\nimport {\r\n    dimensionsControllerToStyles,\r\n    gradientStyled,\r\n    filtersControllerToStyles,\r\n    simplePropertyStyled,\r\n    colorPropertyStyled,\r\n    sizeStyled,\r\n    opacityStyled,\r\n    borderWidthStyled,\r\n    backgroundImageControllerToStyles,\r\n  } from \"../../helpers/styles\";\r\n\r\n\r\nconst getImageStyles = (settings,id)=>{\r\n    let styles = '';\r\n\r\n    let objectFit, height, width, margin, padding, zIndex, opacity, borderType, filters;\r\n    let borderWidth, borderColor, borderRadius, transitionDuration, animationDuration, backgroundColor, backgroundColorHover, gradient;\r\n    let justifyContent;\r\n    let backgroundImage, backgroundPosition, backgroundAttachment, backgroundRepeat,backgroundSizeInUnit, backgroundSize;\r\n\r\n    const parentClass = `.altrp-element${id}`;\r\n\r\n    styles += `${parentClass} .altrp-image {`;\r\n\r\n     //Получаем значения object-fit из контроллера, обрабатываем и добавляем в styles\r\n\r\n     if (settings !== undefined) {\r\n        objectFit = getResponsiveSetting(settings, 'image_fit_size');\r\n      }\r\n\r\n      if (objectFit) {\r\n        styles += simplePropertyStyled(objectFit, 'object-fit');\r\n      }\r\n\r\n      //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundColor = getResponsiveSetting(settings, 'background_color');\r\n      }\r\n\r\n      if (backgroundColor) {\r\n        styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n      }\r\n\r\n      //Получаем значения gradient из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        gradient = getResponsiveSetting(settings, 'gradient');\r\n      }\r\n\r\n      if (gradient) {\r\n        styles += gradientStyled(gradient);\r\n      }\r\n\r\n      //Получаем значения filters из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        filters = getResponsiveSetting(settings, 'image_style_text_shadow');\r\n      }\r\n\r\n      if (filters) {\r\n        styles += filtersControllerToStyles(filters);\r\n      }\r\n\r\n      //Получаем значения height из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        height = getResponsiveSetting(settings, 'height_size');\r\n      }\r\n\r\n      if (height) {\r\n        if(height.size !== \"0\") {\r\n          styles += sizeStyled(height, 'height');\r\n        } else {\r\n\r\n        }\r\n      }\r\n\r\n      //Получаем значения margin из контроллера, обрабатываем и добавляем в styles\r\n      //Свойство margin было убрано из Контроллера у виджета Image. Перенес сюда на всякий случай, так как были активные rules в Image.js\r\n\r\n      if (settings !== undefined) {\r\n        margin = getResponsiveSetting(settings, 'position_margin');\r\n      }\r\n\r\n      if (margin) {\r\n        styles += dimensionsControllerToStyles(margin, 'margin');\r\n      }\r\n\r\n      //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        padding = getResponsiveSetting(settings, 'position_padding');\r\n      }\r\n\r\n      if (padding) {\r\n        styles += dimensionsControllerToStyles(padding);\r\n      }\r\n\r\n      //Получаем значения z-index из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        zIndex = getResponsiveSetting(settings, 'position_z_index');\r\n      }\r\n\r\n      if (zIndex) {\r\n        styles += simplePropertyStyled(zIndex, 'z-index');\r\n      }\r\n\r\n      //Получаем значения opacity из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        opacity = getResponsiveSetting(settings, 'opacity_overlay');\r\n      }\r\n\r\n      if (opacity) {\r\n        styles += opacityStyled(opacity);\r\n      }\r\n\r\n      //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        borderType = getResponsiveSetting(settings, 'border_type');\r\n      }\r\n\r\n      if (borderType) {\r\n        styles += simplePropertyStyled(borderType, 'border-style');\r\n      }\r\n\r\n      //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        borderWidth = getResponsiveSetting(settings, 'border_width');\r\n      }\r\n\r\n      if (borderWidth) {\r\n        styles += borderWidthStyled(borderWidth);\r\n      }\r\n\r\n      //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        borderColor = getResponsiveSetting(settings, 'border_color');\r\n      }\r\n\r\n      if (borderColor) {\r\n        styles += colorPropertyStyled(borderColor, 'border-color');\r\n      }\r\n\r\n      //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        borderRadius = getResponsiveSetting(settings, 'border_radius');\r\n      }\r\n\r\n      if (borderRadius) {\r\n        styles += sizeStyled(borderRadius, 'border-radius');\r\n      }\r\n\r\n      //Получаем значения transition-duration в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        transitionDuration = getResponsiveSetting(settings, 'creative_hover_controller');\r\n      }\r\n\r\n      if (transitionDuration) {\r\n        styles += sizeStyled(transitionDuration, 'transition-duration');\r\n      }\r\n\r\n      //Получаем значения animation-duration в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        animationDuration = getResponsiveSetting(settings, 'creative_hover_controller');\r\n      }\r\n\r\n      if (animationDuration) {\r\n        styles += sizeStyled(animationDuration, 'animation-duration');\r\n      }\r\n\r\n      styles += `} `;\r\n\r\n      styles += `${parentClass} .altrp-image:hover {`;\r\n\r\n      //Получаем значения object-fit из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        objectFit = getResponsiveSetting(settings, 'image_fit_size', ':hover');\r\n      }\r\n\r\n      if (objectFit) {\r\n        styles += simplePropertyStyled(objectFit, 'object-fit');\r\n      }\r\n\r\n      //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundColor = getResponsiveSetting(settings, 'background_color', ':hover');\r\n      }\r\n\r\n      if (backgroundColor) {\r\n        styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n      }\r\n\r\n      //Получаем значения gradient из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        gradient = getResponsiveSetting(settings, 'gradient', ':hover');\r\n      }\r\n\r\n      if (gradient) {\r\n        styles += gradientStyled(gradient);\r\n      }\r\n\r\n      //Получаем значения filters из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        filters = getResponsiveSetting(settings, 'image_style_text_shadow', ':hover');\r\n      }\r\n\r\n      if (filters) {\r\n        styles += filtersControllerToStyles(filters);\r\n      }\r\n\r\n      //Получаем значения height из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        height = getResponsiveSetting(settings, 'height_size', ':hover');\r\n      }\r\n\r\n      if (height) {\r\n        if(height.size !== \"0\") {\r\n          styles += sizeStyled(height, 'height');\r\n        }\r\n      }\r\n\r\n      //Получаем значения margin из контроллера, обрабатываем и добавляем в styles\r\n      //Свойство margin было убрано из Контроллера у виджета Image. Перенес сюда на всякий случай, так как были активные rules в Image.js\r\n\r\n      if (settings !== undefined) {\r\n        margin = getResponsiveSetting(settings, 'position_margin', ':hover');\r\n      }\r\n\r\n      if (margin) {\r\n        styles += dimensionsControllerToStyles(margin, 'margin');\r\n      }\r\n\r\n      //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        padding = getResponsiveSetting(settings, 'position_padding', ':hover');\r\n      }\r\n\r\n      if (padding) {\r\n        styles += dimensionsControllerToStyles(padding);\r\n      }\r\n\r\n      //Получаем значения z-index из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        zIndex = getResponsiveSetting(settings, 'position_z_index', ':hover');\r\n      }\r\n\r\n      if (zIndex) {\r\n        styles += simplePropertyStyled(zIndex, 'z-index');\r\n      }\r\n\r\n      //Получаем значения opacity из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        opacity = getResponsiveSetting(settings, 'opacity_overlay', ':hover');\r\n      }\r\n\r\n      if (opacity) {\r\n        styles += opacityStyled(opacity);\r\n      }\r\n\r\n      //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        borderType = getResponsiveSetting(settings, 'border_type', ':hover');\r\n      }\r\n\r\n      if (borderType) {\r\n        styles += simplePropertyStyled(borderType, 'border-style');\r\n      }\r\n\r\n      //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        borderWidth = getResponsiveSetting(settings, 'border_width', ':hover');\r\n      }\r\n\r\n      if (borderWidth) {\r\n        styles += borderWidthStyled(borderWidth);\r\n      }\r\n\r\n      //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        borderColor = getResponsiveSetting(settings, 'border_color', ':hover');\r\n      }\r\n\r\n      if (borderColor) {\r\n        styles += colorPropertyStyled(borderColor, 'border-color');\r\n      }\r\n\r\n      //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        borderRadius = getResponsiveSetting(settings, 'border_radius', ':hover');\r\n      }\r\n\r\n      if (borderRadius) {\r\n        styles += sizeStyled(borderRadius, 'border-radius');\r\n      }\r\n\r\n      //Получаем значения transition-duration в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        transitionDuration = getResponsiveSetting(settings, 'creative_hover_controller', ':hover');\r\n      }\r\n\r\n      if (transitionDuration) {\r\n        styles += sizeStyled(transitionDuration, 'transition-duration');\r\n      }\r\n\r\n      //Получаем значения animation-duration в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        animationDuration = getResponsiveSetting(settings, 'creative_hover_controller', ':hover');\r\n      }\r\n\r\n      if (animationDuration) {\r\n        styles += sizeStyled(animationDuration, 'animation-duration');\r\n      }\r\n\r\n      styles+=\"} \";\r\n\r\n      styles+=`${parentClass} .altrp-image-container,${parentClass} .altrp-image-container a {`;\r\n\r\n      //Получаем значения justify-content из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        justifyContent = getResponsiveSetting(settings, 'image_style_alignment');\r\n      }\r\n\r\n      if (justifyContent) {\r\n        styles += 'display:flex;'\r\n        styles += simplePropertyStyled(justifyContent, 'justify-content');\r\n      }\r\n\r\n      styles+=\"} \";\r\n\r\n\r\n      styles+=`${parentClass} .altrp-background-image {`;\r\n\r\n      //Получаем значения background-image из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundImage = getResponsiveSetting(settings, 'background_image');\r\n      }\r\n\r\n      if (backgroundImage) {\r\n        styles += backgroundImageControllerToStyles(backgroundImage);\r\n      }\r\n\r\n      //Получаем значения background-position из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundPosition = getResponsiveSetting(settings, 'background_position');\r\n      }\r\n\r\n      if (backgroundPosition) {\r\n        styles += simplePropertyStyled(backgroundPosition, 'background-position');\r\n      }\r\n\r\n      //Получаем значения background-attachment из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundAttachment = getResponsiveSetting(settings, 'background_attachment');\r\n      }\r\n\r\n      if (backgroundAttachment) {\r\n        styles += simplePropertyStyled(backgroundAttachment, 'background-attachment');\r\n      }\r\n\r\n      //Получаем значения background-repeat из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundRepeat = getResponsiveSetting(settings, 'background_repeat');\r\n      }\r\n\r\n      if (backgroundRepeat) {\r\n        styles += simplePropertyStyled(backgroundRepeat, 'background-repeat');\r\n      }\r\n\r\n      //Получаем значения background-size в конкретных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundSizeInUnit = getResponsiveSetting(settings, 'background_image_width');\r\n      }\r\n\r\n      if (backgroundSizeInUnit) {\r\n        styles += sizeStyled(backgroundSizeInUnit, 'background-size');\r\n      }\r\n\r\n      //Получаем значения background-size из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundSize = getResponsiveSetting(settings, 'background_size');\r\n      }\r\n\r\n      if (backgroundSize) {\r\n        styles += simplePropertyStyled(backgroundSize, 'background-size');\r\n      }\r\n\r\n      styles+=\"} \";\r\n\r\n      styles+=`${parentClass} .altrp-background-image:hover {`;\r\n\r\n      //Получаем значения background-image из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundImage = getResponsiveSetting(settings, 'background_image', ':hover');\r\n      }\r\n\r\n      if (backgroundImage) {\r\n        styles += backgroundImageControllerToStyles(backgroundImage);\r\n      }\r\n\r\n      //Получаем значения background-position из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundPosition = getResponsiveSetting(settings, 'background_position', ':hover');\r\n      }\r\n\r\n      if (backgroundPosition) {\r\n        styles += simplePropertyStyled(backgroundPosition, 'background-position');\r\n      }\r\n\r\n      //Получаем значения background-attachment из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundAttachment = getResponsiveSetting(settings, 'background_attachment', ':hover');\r\n      }\r\n\r\n      if (backgroundAttachment) {\r\n        styles += simplePropertyStyled(backgroundAttachment, 'background-attachment');\r\n      }\r\n\r\n      //Получаем значения background-repeat из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundRepeat = getResponsiveSetting(settings, 'background_repeat', ':hover');\r\n      }\r\n\r\n      if (backgroundRepeat) {\r\n        styles += simplePropertyStyled(backgroundRepeat, 'background-repeat');\r\n      }\r\n\r\n      //Получаем значения background-size в конкретных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundSizeInUnit = getResponsiveSetting(settings, 'background_image_width', ':hover');\r\n      }\r\n\r\n      if (backgroundSizeInUnit) {\r\n        styles += sizeStyled(backgroundSizeInUnit, 'background-size');\r\n      }\r\n\r\n      //Получаем значения background-size из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundSize = getResponsiveSetting(settings, 'background_size', ':hover');\r\n      }\r\n\r\n      if (backgroundSize) {\r\n        styles += simplePropertyStyled(backgroundSize, 'background-size');\r\n      }\r\n\r\n      styles+=\"} \";\r\n\r\n      let aspect_ratio_size;\r\n\r\n      if (settings !== undefined) {\r\n        aspect_ratio_size = getResponsiveSetting(settings, 'aspect_ratio_size');\r\n        if(Number(aspect_ratio_size) !== 0) {\r\n            styles+= 'padding:0;';\r\n        }\r\n        else{\r\n            padding = getResponsiveSetting(settings, 'position_padding');\r\n            styles +=dimensionsControllerToStyles(padding);\r\n        }\r\n      }\r\n\r\n      return styles;\r\n}\r\n\r\nexport default getImageStyles;\r\n","import { getResponsiveSetting } from '../../helpers';\r\nimport {dimensionsControllerToStyles} from \"../../helpers/styles\";\r\n\r\nconst getMenuStyles = (settings,id)=>{\r\n\r\n    const parentClass = `.altrp-element${id}`;\r\n\r\n    let styles = `${parentClass} .altrp-menu{`;\r\n\r\n    if (getResponsiveSetting(settings, 'type') === 'horizontal') {\r\n      styles += 'display: flex;';\r\n      styles += '.bp3-submenu{flex-grow:1}';\r\n      styles += '.bp3-icon-caret-right{transform: rotate(90deg);}';\r\n    }\r\n\r\n    styles += '} ';\r\n    /**\r\n     * Стили поповера\r\n     * @type {string}\r\n     */\r\n    let renderButton = getResponsiveSetting(settings, 'button');\r\n    if (renderButton) {\r\n      styles += `${parentClass} .altrp-popover{display:flex;`;\r\n      let alignment = getResponsiveSetting(settings, 'alignment')\r\n      styles += `justify-content:${alignment};`;\r\n      if (alignment === 'stretch') {\r\n        styles += `${parentClass} .altrp-menu-toggle{flex-grow:1;}`;\r\n      }\r\n      styles += '} ';\r\n    }\r\n    /**\r\n     * Стили кнопки\r\n     * @type {string}\r\n     */\r\n    if (renderButton) {\r\n      styles += `${parentClass} .altrp-menu-toggle{`;\r\n      let buttonBg = getResponsiveSetting(settings, 'button_bg')\r\n      if (buttonBg && buttonBg.color) {\r\n        styles += `background-color:${buttonBg.color};background-image:none;`;\r\n      }\r\n      let buttonColor = getResponsiveSetting(settings, 'button_color')\r\n      if (buttonColor && buttonColor.color) {\r\n        styles += `svg, path{fill:${buttonColor.color};}`;\r\n      }\r\n      let buttonPadding = getResponsiveSetting(settings, 'button_padding')\r\n      if (buttonPadding) {\r\n        styles += dimensionsControllerToStyles(buttonPadding);\r\n      }\r\n      let border = getResponsiveSetting(settings, 'border');\r\n      if(border){\r\n        styles += `border-style:${border};`;\r\n        styles += dimensionsControllerToStyles(getResponsiveSetting(settings, 'border_width'), 'border-width');\r\n        let borderColor = getResponsiveSetting(settings, 'border_color')\r\n        if(borderColor && borderColor.color){\r\n          styles += `border-color:${borderColor.color};`;\r\n        }\r\n      }\r\n      let borderRadius = getResponsiveSetting(settings, 'button_radius');\r\n      if(borderRadius){\r\n        styles += dimensionsControllerToStyles(borderRadius, 'border-radius');\r\n      }\r\n      styles += '} ';\r\n\r\n      styles += `${parentClass} .altrp-menu-toggle:hover{`;\r\n      buttonBg = getResponsiveSetting(settings, 'button_bg', ':hover')\r\n      if (buttonBg && buttonBg.color) {\r\n        styles += `background-color:${buttonBg.color};background-image:none;`;\r\n      }\r\n      buttonColor = getResponsiveSetting(settings, 'button_color', ':hover')\r\n      if (buttonColor && buttonColor.color) {\r\n        styles += `svg, path{fill:${buttonColor.color};}`;\r\n      }\r\n      border = getResponsiveSetting(settings, 'border', ':hover');\r\n      if(border){\r\n        styles += `border-style:${border};`;\r\n        styles += dimensionsControllerToStyles(getResponsiveSetting(settings, 'border_width', ':hover'), 'border-width');\r\n        let borderColor = getResponsiveSetting(settings, 'border_color', ':hover')\r\n        if(borderColor && borderColor.color){\r\n          styles += `border-color:${borderColor.color};`;\r\n        }\r\n      }\r\n      borderRadius = getResponsiveSetting(settings, 'button_radius', ':hover');\r\n      if(borderRadius){\r\n        styles += dimensionsControllerToStyles(borderRadius, 'border-radius');\r\n      }\r\n      styles += '}';\r\n    }\r\n\r\n    return styles;\r\n}\r\n\r\nexport default getMenuStyles;","import {\r\n  simplePropertyStyled,\r\n  borderWidthStyled,\r\n  colorPropertyStyled,\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  sizeStyled,\r\n  heightCalcStyled,\r\n  transformRotateStyled,\r\n  iconSizeStyled,\r\n  shadowControllerToStyles,\r\n} from '../../helpers/styles';\r\nimport { getResponsiveSetting } from '../../helpers';\r\n\r\n/**\r\n * Преобразует объект стилей, который задается в виджете Cards в строку css для вставки в GlobalStyles\r\n * @param {{}} settings \r\n * @param {string} id \r\n * @return {string}\r\n */\r\n\r\nexport function getPostsStyles(settings, id) {\r\n  let styles = '';\r\n\r\n  if (settings === undefined) {\r\n    return styles;\r\n  }\r\n\r\n  const parentClass = `.altrp-element${id}`;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous {`;\r\n\r\n  const flexDirectionPaginPrev = getResponsiveSetting(settings, 'prev_icon_position');\r\n\r\n  if (flexDirectionPaginPrev && flexDirectionPaginPrev !== 'default') {\r\n    styles += simplePropertyStyled(flexDirectionPaginPrev, 'flex-direction');\r\n  }\r\n\r\n  const marginPaginPrev = getResponsiveSetting(settings, 'posts_prev_margin');\r\n\r\n  if (marginPaginPrev) {\r\n    styles += dimensionsControllerToStyles(marginPaginPrev, 'margin');\r\n  }\r\n\r\n  const paddingPaginPrev = getResponsiveSetting(settings, 'posts_prev_padding');\r\n\r\n  if (paddingPaginPrev) {\r\n    styles += dimensionsControllerToStyles(paddingPaginPrev);\r\n  }\r\n\r\n  const colorPaginPrev = getResponsiveSetting(settings, 'posts_prev_color');\r\n\r\n  if (colorPaginPrev) {\r\n    styles += colorPropertyStyled(colorPaginPrev, 'color');\r\n  }\r\n\r\n  const typographicPaginPrev = getResponsiveSetting(settings, 'posts_prev_typographic');\r\n\r\n  if (typographicPaginPrev) {\r\n    styles += typographicControllerToStyles(typographicPaginPrev);\r\n  }\r\n\r\n  const borderTypePaginPrev = getResponsiveSetting(settings, 'posts_prev_border_type');\r\n\r\n  if (borderTypePaginPrev) {\r\n    styles += simplePropertyStyled(borderTypePaginPrev, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginPrev = getResponsiveSetting(settings, 'posts_prev_border_width');\r\n\r\n  if (borderWidthPaginPrev) {\r\n    styles += borderWidthStyled(borderWidthPaginPrev);\r\n  }\r\n\r\n  const borderColorPaginPrev = getResponsiveSetting(settings, 'posts_prev_border_color');\r\n\r\n  if (borderColorPaginPrev) {\r\n    styles += colorPropertyStyled(borderColorPaginPrev, 'border-color');\r\n  }\r\n\r\n  const borderRadiusPaginPrev = getResponsiveSetting(settings, 'border_prev_radius');\r\n\r\n  if (borderRadiusPaginPrev) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginPrev, 'border-radius');\r\n  }\r\n\r\n  const boxShadowPaginPrev = getResponsiveSetting(settings, 'style_prev_background_shadow');\r\n\r\n  if (boxShadowPaginPrev) {\r\n    styles += shadowControllerToStyles(boxShadowPaginPrev);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover {`;\r\n\r\n  const flexDirectionPaginPrevHover = getResponsiveSetting(settings, 'prev_icon_position', ':hover');\r\n\r\n  if (flexDirectionPaginPrevHover && flexDirectionPaginPrevHover !== 'default') {\r\n    styles += simplePropertyStyled(flexDirectionPaginPrevHover, 'flex-direction');\r\n  }\r\n\r\n  const marginPaginPrevHover = getResponsiveSetting(settings, 'posts_prev_margin', ':hover');\r\n\r\n  if (marginPaginPrevHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginPrevHover, 'margin');\r\n  }\r\n\r\n  const paddingPaginPrevHover = getResponsiveSetting(settings, 'posts_prev_padding', ':hover');\r\n\r\n  if (paddingPaginPrevHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginPrevHover);\r\n  }\r\n\r\n  const colorPaginPrevHover = getResponsiveSetting(settings, 'posts_prev_color', ':hover');\r\n\r\n  if (colorPaginPrevHover) {\r\n    styles += colorPropertyStyled(colorPaginPrevHover, 'color');\r\n  }\r\n\r\n  const typographicPaginPrevHover = getResponsiveSetting(settings, 'posts_prev_typographic', ':hover');\r\n\r\n  if (typographicPaginPrevHover) {\r\n    styles += typographicControllerToStyles(typographicPaginPrevHover);\r\n  }\r\n\r\n  const borderTypePaginPrevHover = getResponsiveSetting(settings, 'posts_prev_border_type', ':hover');\r\n\r\n  if (borderTypePaginPrevHover) {\r\n    styles += simplePropertyStyled(borderTypePaginPrevHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginPrevHover = getResponsiveSetting(settings, 'posts_prev_border_width', ':hover');\r\n\r\n  if (borderWidthPaginPrevHover) {\r\n    styles += borderWidthStyled(borderWidthPaginPrevHover);\r\n  }\r\n\r\n  const borderColorPaginPrevHover = getResponsiveSetting(settings, 'posts_prev_border_color', ':hover');\r\n\r\n  if (borderColorPaginPrevHover) {\r\n    styles += colorPropertyStyled(borderColorPaginPrevHover, 'border-color');\r\n  }\r\n\r\n  const borderRadiusPaginPrevHover = getResponsiveSetting(settings, 'border_prev_radius', ':hover');\r\n\r\n  if (borderRadiusPaginPrevHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginPrevHover, 'border-radius');\r\n  }\r\n\r\n  const boxShadowPaginPrevHover = getResponsiveSetting(settings, 'style_prev_background_shadow', ':hover');\r\n\r\n  if (boxShadowPaginPrevHover) {\r\n    styles += shadowControllerToStyles(boxShadowPaginPrevHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous svg, ${parentClass} .altrp-pagination__previous img {`;\r\n\r\n  const marginPaginPrevSvgImg = getResponsiveSetting(settings, 'prev_icon_padding');\r\n\r\n  if (marginPaginPrevSvgImg) {\r\n    styles += dimensionsControllerToStyles(marginPaginPrevSvgImg, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover svg, ${parentClass} .altrp-pagination__previous:hover img {`;\r\n\r\n  const marginPaginPrevSvgImgHover = getResponsiveSetting(settings, 'prev_icon_padding', ':hover');\r\n\r\n  if (marginPaginPrevSvgImgHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginPrevSvgImgHover, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous svg {`;\r\n\r\n  const sizePaginPrevSvg = getResponsiveSetting(settings, 'prev_icon_size');\r\n\r\n  if (sizePaginPrevSvg) {\r\n    styles += iconSizeStyled(sizePaginPrevSvg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover svg {`;\r\n\r\n  const sizePaginPrevSvgHover = getResponsiveSetting(settings, 'prev_icon_size', ':hover');\r\n\r\n  if (sizePaginPrevSvgHover) {\r\n    styles += iconSizeStyled(sizePaginPrevSvgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous img {`;\r\n\r\n  const heightPaginPrevImg = getResponsiveSetting(settings, 'prev_icon_size');\r\n\r\n  if (heightPaginPrevImg) {\r\n    styles += sizeStyled(heightPaginPrevImg, 'height');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover img {`;\r\n\r\n  const heightPaginPrevImgHover = getResponsiveSetting(settings, 'prev_icon_size', ':hover');\r\n\r\n  if (heightPaginPrevImgHover) {\r\n    styles += sizeStyled(heightPaginPrevImgHover, 'height');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous path {`;\r\n\r\n  const fillPaginPrevPath = getResponsiveSetting(settings, 'prev_icon_color');\r\n\r\n  if (fillPaginPrevPath) {\r\n    styles += colorPropertyStyled(fillPaginPrevPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover path {`;\r\n\r\n  const fillPaginPrevPathHover = getResponsiveSetting(settings, 'prev_icon_color', ':hover');\r\n\r\n  if (fillPaginPrevPathHover) {\r\n    styles += colorPropertyStyled(fillPaginPrevPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next {`;\r\n\r\n  const flexDirectionPaginNext = getResponsiveSetting(settings, 'next_icon_position');\r\n\r\n  if (flexDirectionPaginNext && flexDirectionPaginNext !== 'default') {\r\n    styles += simplePropertyStyled(flexDirectionPaginNext, 'flex-direction');\r\n  }\r\n\r\n  const marginPaginNext = getResponsiveSetting(settings, 'posts_next_margin');\r\n\r\n  if (marginPaginNext) {\r\n    styles += dimensionsControllerToStyles(marginPaginNext, 'margin');\r\n  }\r\n\r\n  const paddingPaginNext = getResponsiveSetting(settings, 'posts_next_padding');\r\n\r\n  if (paddingPaginNext) {\r\n    styles += dimensionsControllerToStyles(paddingPaginNext);\r\n  }\r\n\r\n  const colorPaginNext = getResponsiveSetting(settings, 'posts_next_color');\r\n\r\n  if (colorPaginNext) {\r\n    styles += colorPropertyStyled(colorPaginNext, 'color');\r\n  }\r\n\r\n  const typographicPaginNext = getResponsiveSetting(settings, 'posts_next_typographic');\r\n\r\n  if (typographicPaginNext) {\r\n    styles += typographicControllerToStyles(typographicPaginNext);\r\n  }\r\n\r\n  const borderTypePaginNext = getResponsiveSetting(settings, 'posts_next_border_type');\r\n\r\n  if (borderTypePaginNext) {\r\n    styles += simplePropertyStyled(borderTypePaginNext, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginNext = getResponsiveSetting(settings, 'posts_next_border_width');\r\n\r\n  if (borderWidthPaginNext) {\r\n    styles += borderWidthStyled(borderWidthPaginNext);\r\n  }\r\n\r\n  const borderColorPaginNext = getResponsiveSetting(settings, 'posts_next_border_color');\r\n\r\n  if (borderColorPaginNext) {\r\n    styles += colorPropertyStyled(borderColorPaginNext, 'border-color');\r\n  }\r\n\r\n  const borderRadiusPaginNext = getResponsiveSetting(settings, 'border_next_radius');\r\n\r\n  if (borderRadiusPaginNext) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginNext, 'border-radius');\r\n  }\r\n\r\n  const boxShadowPaginNext = getResponsiveSetting(settings, 'style_next_background_shadow');\r\n\r\n  if (boxShadowPaginNext) {\r\n    styles += shadowControllerToStyles(boxShadowPaginNext);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover {`;\r\n\r\n  const flexDirectionPaginNextHover = getResponsiveSetting(settings, 'next_icon_position', ':hover');\r\n\r\n  if (flexDirectionPaginNextHover && flexDirectionPaginNextHover !== 'default') {\r\n    styles += simplePropertyStyled(flexDirectionPaginNextHover, 'flex-direction');\r\n  }\r\n\r\n  const marginPaginNextHover = getResponsiveSetting(settings, 'posts_next_margin', ':hover');\r\n\r\n  if (marginPaginNextHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginNextHover, 'margin');\r\n  }\r\n\r\n  const paddingPaginNextHover = getResponsiveSetting(settings, 'posts_next_padding', ':hover');\r\n\r\n  if (paddingPaginNextHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginNextHover);\r\n  }\r\n\r\n  const colorPaginNextHover = getResponsiveSetting(settings, 'posts_next_color', ':hover');\r\n\r\n  if (colorPaginNextHover) {\r\n    styles += colorPropertyStyled(colorPaginNextHover, 'color');\r\n  }\r\n\r\n  const typographicPaginNextHover = getResponsiveSetting(settings, 'posts_next_typographic', ':hover');\r\n\r\n  if (typographicPaginNextHover) {\r\n    styles += typographicControllerToStyles(typographicPaginNextHover);\r\n  }\r\n\r\n  const borderTypePaginNextHover = getResponsiveSetting(settings, 'posts_next_border_type', ':hover');\r\n\r\n  if (borderTypePaginNextHover) {\r\n    styles += simplePropertyStyled(borderTypePaginNextHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginNextHover = getResponsiveSetting(settings, 'posts_next_border_width', ':hover');\r\n\r\n  if (borderWidthPaginNextHover) {\r\n    styles += borderWidthStyled(borderWidthPaginNextHover);\r\n  }\r\n\r\n  const borderColorPaginNextHover = getResponsiveSetting(settings, 'posts_next_border_color', ':hover');\r\n\r\n  if (borderColorPaginNextHover) {\r\n    styles += colorPropertyStyled(borderColorPaginNextHover, 'border-color');\r\n  }\r\n\r\n  const borderRadiusPaginNextHover = getResponsiveSetting(settings, 'border_next_radius', ':hover');\r\n\r\n  if (borderRadiusPaginNextHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginNextHover, 'border-radius');\r\n  }\r\n\r\n  const boxShadowPaginNextHover = getResponsiveSetting(settings, 'style_next_background_shadow', ':hover');\r\n\r\n  if (boxShadowPaginNextHover) {\r\n    styles += shadowControllerToStyles(boxShadowPaginNextHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next svg, ${parentClass} .altrp-pagination__next img {`;\r\n\r\n  const marginPaginNextSvgImg = getResponsiveSetting(settings, 'next_icon_margin');\r\n\r\n  if (marginPaginNextSvgImg) {\r\n    styles += dimensionsControllerToStyles(marginPaginNextSvgImg, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover svg, ${parentClass} .altrp-pagination__next:hover img {`;\r\n\r\n  const marginPaginNextSvgImgHover = getResponsiveSetting(settings, 'next_icon_margin', ':hover');\r\n\r\n  if (marginPaginNextSvgImgHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginNextSvgImgHover, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next svg {`;\r\n\r\n  const sizePaginNextSvg = getResponsiveSetting(settings, 'next_icon_size');\r\n\r\n  if (sizePaginNextSvg) {\r\n    styles += iconSizeStyled(sizePaginNextSvg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover svg {`;\r\n\r\n  const sizePaginNextSvgHover = getResponsiveSetting(settings, 'next_icon_size', ':hover');\r\n\r\n  if (sizePaginNextSvgHover) {\r\n    styles += iconSizeStyled(sizePaginNextSvgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next img {`;\r\n\r\n  const heightPaginNextImg = getResponsiveSetting(settings, 'next_icon_size');\r\n\r\n  if (heightPaginNextImg) {\r\n    styles += sizeStyled(heightPaginNextImg, 'height');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover img {`;\r\n\r\n  const heightPaginNextImgHover = getResponsiveSetting(settings, 'next_icon_size', ':hover');\r\n\r\n  if (heightPaginNextImgHover) {\r\n    styles += sizeStyled(heightPaginNextImgHover, 'height');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next path {`;\r\n\r\n  const fillPaginNextPath = getResponsiveSetting(settings, 'next_icon_color');\r\n\r\n  if (fillPaginNextPath) {\r\n    styles += colorPropertyStyled(fillPaginNextPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover path {`;\r\n\r\n  const fillPaginNextPathHover = getResponsiveSetting(settings, 'next_icon_color', ':hover');\r\n\r\n  if (fillPaginNextPathHover) {\r\n    styles += colorPropertyStyled(fillPaginNextPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__count {`;\r\n\r\n  const marginPaginCount = getResponsiveSetting(settings, 'count_buttons_margin');\r\n\r\n  if (marginPaginCount) {\r\n    styles += dimensionsControllerToStyles(marginPaginCount, 'margin');\r\n  }\r\n\r\n  const backgroundColorPaginCount = getResponsiveSetting(settings, 'table_style_pagination_count_background_color');\r\n\r\n  if (backgroundColorPaginCount) {\r\n    styles += colorPropertyStyled(backgroundColorPaginCount, 'background-color');\r\n  }\r\n\r\n  const paddingPaginCount = getResponsiveSetting(settings, 'table_style_pagination_padding_count');\r\n\r\n  if (paddingPaginCount) {\r\n    styles += dimensionsControllerToStyles(paddingPaginCount);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__count:hover {`;\r\n\r\n  const marginPaginCountHover = getResponsiveSetting(settings, 'count_buttons_margin', ':hover');\r\n\r\n  if (marginPaginCountHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginCountHover, 'margin');\r\n  }\r\n\r\n  const backgroundColorPaginCountHover = getResponsiveSetting(settings, 'table_style_pagination_count_background_color', ':hover');\r\n\r\n  if (backgroundColorPaginCountHover) {\r\n    styles += colorPropertyStyled(backgroundColorPaginCountHover, 'background-color');\r\n  }\r\n\r\n  const paddingPaginCountHover = getResponsiveSetting(settings, 'table_style_pagination_padding_count', ':hover');\r\n\r\n  if (paddingPaginCountHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginCountHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__count, ${parentClass} .altrp-pagination-pages__item {`;\r\n\r\n  const colorPaginCountPagesItem = getResponsiveSetting(settings, 'table_style_pagination_count_text_color');\r\n\r\n  if (colorPaginCountPagesItem) {\r\n    styles += colorPropertyStyled(colorPaginCountPagesItem, 'color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__count:hover, ${parentClass} .altrp-pagination-pages__item:hover {`;\r\n\r\n  const colorPaginCountPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_count_text_color', ':hover');\r\n\r\n  if (colorPaginCountPagesItemHover) {\r\n    styles += colorPropertyStyled(colorPaginCountPagesItemHover, 'color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination-pages__item {`;\r\n\r\n  const marginPaginPagesItem = getResponsiveSetting(settings, 'count_button_item_margin');\r\n\r\n  if (marginPaginPagesItem) {\r\n    styles += dimensionsControllerToStyles(marginPaginPagesItem, 'margin');\r\n  }\r\n\r\n  const backgroundColorPaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_count_item_background_color');\r\n\r\n  if (backgroundColorPaginPagesItem) {\r\n    styles += colorPropertyStyled(backgroundColorPaginPagesItem, 'background-color');\r\n  }\r\n\r\n  const borderTypePaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_type');\r\n\r\n  if (borderTypePaginPagesItem) {\r\n    styles += simplePropertyStyled(borderTypePaginPagesItem, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_width');\r\n\r\n  if (borderWidthPaginPagesItem) {\r\n    styles += borderWidthStyled(borderWidthPaginPagesItem);\r\n  }\r\n\r\n  const borderRadiusPaginPagesItem = getResponsiveSetting(settings, 'table_style_count_item_border_radius');\r\n\r\n  if (borderRadiusPaginPagesItem) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginPagesItem, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_color');\r\n\r\n  if (borderColorPaginPagesItem) {\r\n    styles += colorPropertyStyled(borderColorPaginPagesItem, 'border-color', '!important');\r\n  }\r\n\r\n  const boxShadowPaginPagesItem = getResponsiveSetting(settings, 'pagination_count_item_shadow');\r\n\r\n  if (boxShadowPaginPagesItem) {\r\n    styles += shadowControllerToStyles(boxShadowPaginPagesItem);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination-pages__item:hover {`;\r\n\r\n  const marginPaginPagesItemHover = getResponsiveSetting(settings, 'count_button_item_margin', ':hover');\r\n\r\n  if (marginPaginPagesItemHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginPagesItemHover, 'margin');\r\n  }\r\n\r\n  const backgroundColorPaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_count_item_background_color', ':hover');\r\n\r\n  if (backgroundColorPaginPagesItemHover) {\r\n    styles += colorPropertyStyled(backgroundColorPaginPagesItemHover, 'background-color');\r\n  }\r\n\r\n  const borderTypePaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_type', ':hover');\r\n\r\n  if (borderTypePaginPagesItemHover) {\r\n    styles += simplePropertyStyled(borderTypePaginPagesItemHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_width', ':hover');\r\n\r\n  if (borderWidthPaginPagesItemHover) {\r\n    styles += borderWidthStyled(borderWidthPaginPagesItemHover);\r\n  }\r\n\r\n  const borderRadiusPaginPagesItemHover = getResponsiveSetting(settings, 'table_style_count_item_border_radius', ':hover');\r\n\r\n  if (borderRadiusPaginPagesItemHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginPagesItemHover, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_color', ':hover');\r\n\r\n  if (borderColorPaginPagesItemHover) {\r\n    styles += colorPropertyStyled(borderColorPaginPagesItemHover, 'border-color', '!important');\r\n  }\r\n\r\n  const boxShadowPaginPagesItemHover = getResponsiveSetting(settings, 'pagination_count_item_shadow', ':hover');\r\n\r\n  if (boxShadowPaginPagesItemHover) {\r\n    styles += shadowControllerToStyles(boxShadowPaginPagesItemHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .active.altrp-pagination-pages__item {`;\r\n\r\n  const colorActivePaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_active_count_text_color');\r\n\r\n  if (colorActivePaginPagesItem) {\r\n    styles += colorPropertyStyled(colorActivePaginPagesItem, 'color');\r\n  }\r\n\r\n  const backgroundColorActivePaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_active_count_item_background_color');\r\n\r\n  if (backgroundColorActivePaginPagesItem) {\r\n    styles += colorPropertyStyled(backgroundColorActivePaginPagesItem, 'background');\r\n  }\r\n\r\n  const borderColorActivePaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_active_count_item_border_color');\r\n\r\n  if (borderColorActivePaginPagesItem) {\r\n    styles += colorPropertyStyled(borderColorActivePaginPagesItem, 'border-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .active.altrp-pagination-pages__item:hover {`;\r\n\r\n  const colorActivePaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_active_count_text_color', ':hover');\r\n\r\n  if (colorActivePaginPagesItemHover) {\r\n    styles += colorPropertyStyled(colorActivePaginPagesItemHover, 'color');\r\n  }\r\n\r\n  const backgroundColorActivePaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_active_count_item_background_color', ':hover');\r\n\r\n  if (backgroundColorActivePaginPagesItemHover) {\r\n    styles += colorPropertyStyled(backgroundColorActivePaginPagesItemHover, 'background');\r\n  }\r\n\r\n  const borderColorActivePaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_active_count_item_border_color', ':hover');\r\n\r\n  if (borderColorActivePaginPagesItemHover) {\r\n    styles += colorPropertyStyled(borderColorActivePaginPagesItemHover, 'border-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination-pages__item {`;\r\n\r\n  const typographicPaginPaginPagesItem = getResponsiveSetting(settings, 'table_style_item_count_pagination_typographic');\r\n\r\n  if (typographicPaginPaginPagesItem) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginPagesItem);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination-pages__item:hover {`;\r\n\r\n  const typographicPaginPaginPagesItemHover = getResponsiveSetting(settings, 'table_style_item_count_pagination_typographic', ':hover');\r\n\r\n  if (typographicPaginPaginPagesItemHover) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginPagesItemHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__ellipsis {`;\r\n\r\n  const marginPaginEllipsis = getResponsiveSetting(settings, 'ellipsis_margin');\r\n\r\n  if (marginPaginEllipsis) {\r\n    styles += dimensionsControllerToStyles(marginPaginEllipsis, 'margin');\r\n  }\r\n\r\n  const colorPaginEllipsis = getResponsiveSetting(settings, 'ellipsis_color');\r\n\r\n  if (colorPaginEllipsis) {\r\n    styles += colorPropertyStyled(colorPaginEllipsis, 'color');\r\n  }\r\n\r\n  const typographicPaginEllipsis = getResponsiveSetting(settings, 'ellipsis_typographic');\r\n\r\n  if (typographicPaginEllipsis) {\r\n    styles += typographicControllerToStyles(typographicPaginEllipsis);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__ellipsis:hover {`;\r\n\r\n  const marginPaginEllipsisHover = getResponsiveSetting(settings, 'ellipsis_margin', ':hover');\r\n\r\n  if (marginPaginEllipsisHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginEllipsisHover, 'margin');\r\n  }\r\n\r\n  const colorPaginEllipsisHover = getResponsiveSetting(settings, 'ellipsis_color', ':hover');\r\n\r\n  if (colorPaginEllipsisHover) {\r\n    styles += colorPropertyStyled(colorPaginEllipsisHover, 'color');\r\n  }\r\n\r\n  const typographicPaginEllipsisHover = getResponsiveSetting(settings, 'ellipsis_typographic', ':hover');\r\n\r\n  if (typographicPaginEllipsisHover) {\r\n    styles += typographicControllerToStyles(typographicPaginEllipsisHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__goto-page {`;\r\n\r\n  const marginPaginGotoPage = getResponsiveSetting(settings, 'goto-page_margin');\r\n\r\n  if (marginPaginGotoPage) {\r\n    styles += dimensionsControllerToStyles(marginPaginGotoPage, 'margin');\r\n  }\r\n\r\n  const paddingPaginGotoPage = getResponsiveSetting(settings, 'page_input_padding');\r\n\r\n  if (paddingPaginGotoPage) {\r\n    styles += dimensionsControllerToStyles(paddingPaginGotoPage);\r\n  }\r\n\r\n  const colorPaginGotoPage = getResponsiveSetting(settings, 'page_input_text_color');\r\n\r\n  if (colorPaginGotoPage) {\r\n    styles += colorPropertyStyled(colorPaginGotoPage, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginGotoPage = getResponsiveSetting(settings, 'page_input_background_color');\r\n\r\n  if (backgroundColorPaginGotoPage) {\r\n    styles += colorPropertyStyled(backgroundColorPaginGotoPage, 'background-color');\r\n  }\r\n\r\n  const borderTypePaginGotoPage = getResponsiveSetting(settings, 'page_input_border_type');\r\n\r\n  if (borderTypePaginGotoPage) {\r\n    styles += simplePropertyStyled(borderTypePaginGotoPage, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginGotoPage = getResponsiveSetting(settings, 'page_input_border_width');\r\n\r\n  if (borderWidthPaginGotoPage) {\r\n    styles += borderWidthStyled(borderWidthPaginGotoPage);\r\n  }\r\n\r\n  const borderColorPaginGotoPage = getResponsiveSetting(settings, 'page_input_border_color');\r\n\r\n  if (borderColorPaginGotoPage) {\r\n    styles += colorPropertyStyled(borderColorPaginGotoPage, 'border-color');\r\n  }\r\n\r\n  const borderRadiusPaginGotoPage = getResponsiveSetting(settings, 'page_input_border_radius');\r\n\r\n  if (borderRadiusPaginGotoPage) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginGotoPage, 'border-radius');\r\n  }\r\n\r\n  const boxShadowPaginGotoPage = getResponsiveSetting(settings, 'page_input_shadow');\r\n\r\n  if (boxShadowPaginGotoPage) {\r\n    styles += shadowControllerToStyles(boxShadowPaginGotoPage);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__goto-page:hover {`;\r\n\r\n  const marginPaginGotoPageHover = getResponsiveSetting(settings, 'goto-page_margin', ':hover');\r\n\r\n  if (marginPaginGotoPageHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginGotoPageHover, 'margin');\r\n  }\r\n\r\n  const paddingPaginGotoPageHover = getResponsiveSetting(settings, 'page_input_padding', ':hover');\r\n\r\n  if (paddingPaginGotoPageHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginGotoPageHover);\r\n  }\r\n\r\n  const colorPaginGotoPageHover = getResponsiveSetting(settings, 'page_input_text_color', ':hover');\r\n\r\n  if (colorPaginGotoPageHover) {\r\n    styles += colorPropertyStyled(colorPaginGotoPageHover, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginGotoPageHover = getResponsiveSetting(settings, 'page_input_background_color', ':hover');\r\n\r\n  if (backgroundColorPaginGotoPageHover) {\r\n    styles += colorPropertyStyled(backgroundColorPaginGotoPageHover, 'background-color');\r\n  }\r\n\r\n  const borderTypePaginGotoPageHover = getResponsiveSetting(settings, 'page_input_border_type', ':hover');\r\n\r\n  if (borderTypePaginGotoPageHover) {\r\n    styles += simplePropertyStyled(borderTypePaginGotoPageHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginGotoPageHover = getResponsiveSetting(settings, 'page_input_border_width', ':hover');\r\n\r\n  if (borderWidthPaginGotoPageHover) {\r\n    styles += borderWidthStyled(borderWidthPaginGotoPageHover);\r\n  }\r\n\r\n  const borderColorPaginGotoPageHover = getResponsiveSetting(settings, 'page_input_border_color', ':hover');\r\n\r\n  if (borderColorPaginGotoPageHover) {\r\n    styles += colorPropertyStyled(borderColorPaginGotoPageHover, 'border-color');\r\n  }\r\n\r\n  const borderRadiusPaginGotoPageHover = getResponsiveSetting(settings, 'page_input_border_radius', ':hover');\r\n\r\n  if (borderRadiusPaginGotoPageHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginGotoPageHover, 'border-radius');\r\n  }\r\n\r\n  const boxShadowPaginGotoPageHover = getResponsiveSetting(settings, 'page_input_shadow', ':hover');\r\n\r\n  if (boxShadowPaginGotoPageHover) {\r\n    styles += shadowControllerToStyles(boxShadowPaginGotoPageHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-posts {`;\r\n\r\n  const paddingPosts = getResponsiveSetting(settings, 'position_padding');\r\n\r\n  if (paddingPosts) {\r\n    styles += dimensionsControllerToStyles(paddingPosts);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-posts:hover {`;\r\n\r\n  const paddingPostsHover = getResponsiveSetting(settings, 'position_padding', ':hover');\r\n\r\n  if (paddingPostsHover) {\r\n    styles += dimensionsControllerToStyles(paddingPostsHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} > .altrp-pagination-pages {`;\r\n\r\n  const paddingPaginPages = getResponsiveSetting(settings, 'posts_pagination_padding');\r\n\r\n  if (paddingPaginPages) {\r\n    styles += dimensionsControllerToStyles(paddingPaginPages);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} > .altrp-pagination-pages:hover {`;\r\n\r\n  const paddingPaginPagesHover = getResponsiveSetting(settings, 'posts_pagination_padding', ':hover');\r\n\r\n  if (paddingPaginPagesHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginPagesHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__goto-page {`;\r\n\r\n  const typographicPaginPaginGotoPages = getResponsiveSetting(settings, '.altrp-pagination .altrp-pagination__goto-page');\r\n\r\n  if (typographicPaginPaginGotoPages) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginGotoPages);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__goto-page:hover {`;\r\n\r\n  const typographicPaginPaginGotoPagesHover = getResponsiveSetting(settings, '.altrp-pagination .altrp-pagination__goto-page', ':hover');\r\n\r\n  if (typographicPaginPaginGotoPagesHover) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginGotoPagesHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next, ${parentClass} .altrp-pagination-pages__item, ${parentClass} .altrp-pagination__count, ${parentClass} .altrp-pagination__previous {`;\r\n\r\n  const typographicPaginPaginPagesItemCountPrev = getResponsiveSetting(settings, 'table_style_pagination_typographic');\r\n\r\n  if (typographicPaginPaginPagesItemCountPrev) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginPagesItemCountPrev);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover, ${parentClass} .altrp-pagination-pages__item:hover, ${parentClass} .altrp-pagination__count:hover, ${parentClass} .altrp-pagination__previous:hover {`;\r\n\r\n  const typographicPaginPaginPagesItemCountPrevHover = getResponsiveSetting(settings, 'table_style_pagination_typographic', ':hover');\r\n\r\n  if (typographicPaginPaginPagesItemCountPrevHover) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginPagesItemCountPrevHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size {`;\r\n\r\n  const marginPaginSelectSize = getResponsiveSetting(settings, 'pagination_select_margin');\r\n\r\n  if (marginPaginSelectSize) {\r\n    styles += dimensionsControllerToStyles(marginPaginSelectSize, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size:hover {`;\r\n\r\n  const marginPaginSelectSizeHover = getResponsiveSetting(settings, 'pagination_select_margin', ':hover');\r\n\r\n  if (marginPaginSelectSizeHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginSelectSizeHover, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size .altrp-field-select2__control {`;\r\n\r\n  const paddingPaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_padding');\r\n\r\n  if (paddingPaginSelectSizeControl) {\r\n    styles += dimensionsControllerToStyles(paddingPaginSelectSizeControl);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size .altrp-field-select2__control:hover {`;\r\n\r\n  const paddingPaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_padding', ':hover');\r\n\r\n  if (paddingPaginSelectSizeControlHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginSelectSizeControlHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__select-size {`;\r\n\r\n  const typographicPaginPaginSelectSize = getResponsiveSetting(settings, 'table_style_pagination_select__pagination_typographic');\r\n\r\n  if (typographicPaginPaginSelectSize) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginSelectSize);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__select-size:hover {`;\r\n\r\n  const typographicPaginPaginSelectSizeHover = getResponsiveSetting(settings, 'table_style_pagination_select__pagination_typographic', ':hover');\r\n\r\n  if (typographicPaginPaginSelectSizeHover) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginSelectSizeHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size .altrp-field-select2__control {`;\r\n\r\n  const borderTypePaginSelect2Control = getResponsiveSetting(settings, 'pagination_select_border_type');\r\n\r\n  if (borderTypePaginSelect2Control) {\r\n    styles += simplePropertyStyled(borderTypePaginSelect2Control, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginSelect2Control = getResponsiveSetting(settings, 'pagination_select_border_width');\r\n\r\n  if (borderWidthPaginSelect2Control) {\r\n    styles += borderWidthStyled(borderWidthPaginSelect2Control);\r\n  }\r\n\r\n  const borderRadiusPaginSelect2Control = getResponsiveSetting(settings, 'pagination_select_border_radius');\r\n\r\n  if (borderRadiusPaginSelect2Control) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginSelect2Control, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginSelect2Control = getResponsiveSetting(settings, 'pagination_select_border_color');\r\n\r\n  if (borderColorPaginSelect2Control) {\r\n    styles += colorPropertyStyled(borderColorPaginSelect2Control, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginSelect2Control = getResponsiveSetting(settings, 'pagination_select_shadow');\r\n\r\n  if (boxShadowPaginSelect2Control) {\r\n    styles += shadowControllerToStyles(boxShadowPaginSelect2Control);\r\n  }\r\n\r\n  const colorPaginSelect2Control = getResponsiveSetting(settings, 'pagination_select_text_color');\r\n\r\n  if (colorPaginSelect2Control) {\r\n    styles += colorPropertyStyled(colorPaginSelect2Control, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginSelect2Control = getResponsiveSetting(settings, 'pagination_select_background_color');\r\n\r\n  if (backgroundColorPaginSelect2Control) {\r\n    styles += colorPropertyStyled(backgroundColorPaginSelect2Control, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size .altrp-field-select2__control:hover {`;\r\n\r\n  const borderTypePaginSelect2ControlHover = getResponsiveSetting(settings, 'pagination_select_border_type', ':hover');\r\n\r\n  if (borderTypePaginSelect2ControlHover) {\r\n    styles += simplePropertyStyled(borderTypePaginSelect2ControlHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginSelect2ControlHover = getResponsiveSetting(settings, 'pagination_select_border_width', ':hover');\r\n\r\n  if (borderWidthPaginSelect2ControlHover) {\r\n    styles += borderWidthStyled(borderWidthPaginSelect2ControlHover);\r\n  }\r\n\r\n  const borderRadiusPaginSelect2ControlHover = getResponsiveSetting(settings, 'pagination_select_border_radius', ':hover');\r\n\r\n  if (borderRadiusPaginSelect2ControlHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginSelect2ControlHover, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginSelect2ControlHover = getResponsiveSetting(settings, 'pagination_select_border_color', ':hover');\r\n\r\n  if (borderColorPaginSelect2ControlHover) {\r\n    styles += colorPropertyStyled(borderColorPaginSelect2ControlHover, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginSelect2ControlHover = getResponsiveSetting(settings, 'pagination_select_shadow', ':hover');\r\n\r\n  if (boxShadowPaginSelect2ControlHover) {\r\n    styles += shadowControllerToStyles(boxShadowPaginSelect2ControlHover);\r\n  }\r\n\r\n  const colorPaginSelect2ControlHover = getResponsiveSetting(settings, 'pagination_select_text_color', ':hover');\r\n\r\n  if (colorPaginSelect2ControlHover) {\r\n    styles += colorPropertyStyled(colorPaginSelect2ControlHover, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginSelect2ControlHover = getResponsiveSetting(settings, 'pagination_select_background_color', ':hover');\r\n\r\n  if (backgroundColorPaginSelect2ControlHover) {\r\n    styles += colorPropertyStyled(backgroundColorPaginSelect2ControlHover, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  return styles;\r\n}","import {\r\n  simplePropertyStyled,\r\n  borderWidthStyled,\r\n  colorPropertyStyled,\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  filtersControllerToStyles,\r\n  marginTopLeftStyled,\r\n  iconSizeStyled,\r\n  sizeStyled,\r\n  shadowControllerToStyles,\r\n} from '../../helpers/styles';\r\nimport { getResponsiveSetting } from '../../helpers';\r\n\r\n/**\r\n * Преобразует объект стилей, который задается в виджете Table в строку css для вставки в GlobalStyles\r\n * @param {{}} settings\r\n * @param {string} id\r\n * @return {string}\r\n */\r\n\r\nexport function getTableStyles(settings, id) {\r\n  let styles = '';\r\n\r\n  if (settings === undefined) {\r\n    return styles;\r\n  }\r\n\r\n  const parentClass = `.altrp-element${id}`;\r\n\r\n  styles += `${parentClass} .altrp-table {`;\r\n\r\n  const borderType = getResponsiveSetting(settings, 'table_style_table_border_type');\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, 'border-style', '!important');\r\n  }\r\n\r\n  const borderWidth = getResponsiveSetting(settings, 'table_style_table_border_width');\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth, '!important');\r\n  }\r\n\r\n  const borderColor = getResponsiveSetting(settings, 'table_style_table_border_color');\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color', '!important');\r\n  }\r\n\r\n  styles += `} `;\r\n  //hover\r\n  styles += `${parentClass} .altrp-table:hover {`;\r\n\r\n  const borderTypeHover = getResponsiveSetting(settings, 'table_style_table_border_type', ':hover');\r\n\r\n  if (borderTypeHover) {\r\n    styles += simplePropertyStyled(borderTypeHover, 'border-style', '!important');\r\n  }\r\n\r\n  const borderWidthHover = getResponsiveSetting(settings, 'table_style_table_border_width', ':hover');\r\n\r\n  if (borderWidthHover) {\r\n    styles += borderWidthStyled(borderWidthHover, '!important');\r\n  }\r\n\r\n  const borderColorHover = getResponsiveSetting(settings, 'table_style_table_border_color', ':hover');\r\n\r\n  if (borderColorHover) {\r\n    styles += colorPropertyStyled(borderColorHover, 'border-color', '!important');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next {`;\r\n\r\n  const flexDirection = getResponsiveSetting(settings, 'next_icon_position');\r\n\r\n  if (flexDirection && flexDirection !== 'default') {\r\n    styles += simplePropertyStyled(flexDirection, 'flex-direction');\r\n  }\r\n\r\n  const margin = getResponsiveSetting(settings, 'next_page_button_margin');\r\n\r\n  if (margin) {\r\n    styles += dimensionsControllerToStyles(margin, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover {`;\r\n\r\n  const flexDirectionHover = getResponsiveSetting(settings, 'next_icon_position', ':hover');\r\n\r\n  if (flexDirectionHover && flexDirectionHover !== 'default') {\r\n    styles += simplePropertyStyled(flexDirectionHover, 'flex-direction');\r\n  }\r\n\r\n  const marginHover = getResponsiveSetting(settings, 'next_page_button_margin', ':hover');\r\n\r\n  if (marginHover) {\r\n    styles += dimensionsControllerToStyles(marginHover, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next svg {`;\r\n\r\n  const marginPaginationSvg = getResponsiveSetting(settings, 'next_icon_margin');\r\n\r\n  if (marginPaginationSvg) {\r\n    styles += dimensionsControllerToStyles(marginPaginationSvg, 'margin');\r\n  }\r\n\r\n  const iconSize = getResponsiveSetting(settings, 'next_icon_size');\r\n\r\n  if (iconSize) {\r\n    styles += iconSizeStyled(iconSize);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover svg {`;\r\n\r\n  const marginPaginationSvgHover = getResponsiveSetting(settings, 'next_icon_margin', ':hover');\r\n\r\n  if (marginPaginationSvgHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginationSvgHover, 'margin');\r\n  }\r\n\r\n  const iconSizeHover = getResponsiveSetting(settings, 'next_icon_size', ':hover');\r\n\r\n  if (iconSizeHover) {\r\n    styles += iconSizeStyled(iconSizeHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next img {`;\r\n\r\n  const iconSizeNextImg = getResponsiveSetting(settings, 'next_icon_size');\r\n\r\n  if (iconSizeNextImg) {\r\n    styles += sizeStyled(iconSizeNextImg, 'width');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover img {`;\r\n\r\n  const iconSizeNextImgHover = getResponsiveSetting(settings, 'next_icon_size', ':hover');\r\n\r\n  if (iconSizeNextImgHover) {\r\n    styles += sizeStyled(iconSizeNextImgHover, 'width');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next path {`;\r\n\r\n  const iconFillNextPath = getResponsiveSetting(settings, 'next_icon_color');\r\n\r\n  if (iconFillNextPath) {\r\n    styles += colorPropertyStyled(iconFillNextPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover path {`;\r\n\r\n  const iconFillNextPathHover = getResponsiveSetting(settings, 'next_icon_color', ':hover');\r\n\r\n  if (iconFillNextPathHover) {\r\n    styles += colorPropertyStyled(iconFillNextPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous {`;\r\n\r\n  const flexDirectionPaginationPrev = getResponsiveSetting(settings, 'prev_icon_position');\r\n\r\n  if (flexDirectionPaginationPrev && flexDirectionPaginationPrev !== 'default') {\r\n    styles += simplePropertyStyled(flexDirectionPaginationPrev, 'flex-direction');\r\n  }\r\n\r\n  const marginPaginationPrev = getResponsiveSetting(settings, 'prev_page_button_margin');\r\n\r\n  if (marginPaginationPrev) {\r\n    styles += dimensionsControllerToStyles(marginPaginationPrev, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover {`;\r\n\r\n  const flexDirectionPaginationPrevHover = getResponsiveSetting(settings, 'prev_icon_position', ':hover');\r\n\r\n  if (flexDirectionPaginationPrevHover && flexDirectionPaginationPrevHover !== 'default') {\r\n    styles += simplePropertyStyled(flexDirectionPaginationPrevHover, 'flex-direction');\r\n  }\r\n\r\n  const marginPaginationPrevHover = getResponsiveSetting(settings, 'prev_page_button_margin', ':hover');\r\n\r\n  if (marginPaginationPrevHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginationPrevHover, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous svg {`;\r\n\r\n  const marginPrevSvg = getResponsiveSetting(settings, 'prev_icon_padding');\r\n\r\n  if (marginPrevSvg) {\r\n    styles += dimensionsControllerToStyles(marginPrevSvg, 'margin');\r\n  }\r\n\r\n  const iconSizePrevSvg = getResponsiveSetting(settings, 'prev_icon_size');\r\n\r\n  if (iconSizePrevSvg) {\r\n    styles += iconSizeStyled(iconSizePrevSvg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover svg {`;\r\n\r\n  const marginPrevSvgHover = getResponsiveSetting(settings, 'prev_icon_padding', ':hover');\r\n\r\n  if (marginPrevSvgHover) {\r\n    styles += dimensionsControllerToStyles(marginPrevSvgHover, 'margin');\r\n  }\r\n\r\n  const iconSizePrevSvgHover = getResponsiveSetting(settings, 'prev_icon_size', ':hover');\r\n\r\n  if (iconSizePrevSvgHover) {\r\n    styles += iconSizeStyled(iconSizePrevSvgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous img {`;\r\n\r\n  const iconSizePrevImg = getResponsiveSetting(settings, 'prev_icon_size');\r\n\r\n  if (iconSizePrevImg) {\r\n    styles += sizeStyled(iconSizePrevImg, 'width');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover img {`;\r\n\r\n  const iconSizePrevImgHover = getResponsiveSetting(settings, 'prev_icon_size', ':hover');\r\n\r\n  if (iconSizePrevImgHover) {\r\n    styles += sizeStyled(iconSizePrevImgHover, 'width');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous path {`;\r\n\r\n  const iconFillPrevPath = getResponsiveSetting(settings, 'prev_icon_color');\r\n\r\n  if (iconFillPrevPath) {\r\n    styles += colorPropertyStyled(iconFillPrevPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover path {`;\r\n\r\n  const iconFillPrevPathHover = getResponsiveSetting(settings, 'prev_icon_color', ':hover');\r\n\r\n  if (iconFillPrevPathHover) {\r\n    styles += colorPropertyStyled(iconFillPrevPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .replace-text {`;\r\n\r\n  const colorReplaceText = getResponsiveSetting(settings, 'replace_text_color');\r\n\r\n  if (colorReplaceText) {\r\n    styles += colorPropertyStyled(colorReplaceText, 'color');\r\n  }\r\n\r\n  const typographicReplaceText = getResponsiveSetting(settings, 'replace_text_typographic');\r\n\r\n  if (typographicReplaceText) {\r\n    styles += typographicControllerToStyles(typographicReplaceText);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .replace-text:hover {`;\r\n\r\n  const colorReplaceTextHover = getResponsiveSetting(settings, 'replace_text_color', ':hover');\r\n\r\n  if (colorReplaceTextHover) {\r\n    styles += colorPropertyStyled(colorReplaceTextHover, 'color');\r\n  }\r\n\r\n  const typographicReplaceTextHover = getResponsiveSetting(settings, 'replace_text_typographic', ':hover');\r\n\r\n  if (typographicReplaceTextHover) {\r\n    styles += typographicControllerToStyles(typographicReplaceTextHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .replace-picture {`;\r\n\r\n  const widthPictureReplacePicture = getResponsiveSetting(settings, 'replace_image_width');\r\n\r\n  if (widthPictureReplacePicture) {\r\n    styles += sizeStyled(widthPictureReplacePicture, 'width');\r\n  }\r\n\r\n  const heightReplacePicture = getResponsiveSetting(settings, 'replace_image_height');\r\n\r\n  if (heightReplacePicture) {\r\n    styles += sizeStyled(heightReplacePicture, 'height');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th .grouped-column {`;\r\n\r\n  const paddingGroupedColumn = getResponsiveSetting(settings, 'grouped_column_icon_padding');\r\n\r\n  if (paddingGroupedColumn) {\r\n    styles += dimensionsControllerToStyles(paddingGroupedColumn);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th:hover .grouped-column {`;\r\n\r\n  const paddingGroupedColumnHover = getResponsiveSetting(settings, 'grouped_column_icon_padding', ':hover');\r\n\r\n  if (paddingGroupedColumnHover) {\r\n    styles += dimensionsControllerToStyles(paddingGroupedColumnHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th path {`;\r\n\r\n  const iconFillTableThPath = getResponsiveSetting(settings, 'grouped_column_icon_color');\r\n\r\n  if (iconFillTableThPath) {\r\n    styles += colorPropertyStyled(iconFillTableThPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th:hover path {`;\r\n\r\n  const iconFillTableThPathHover = getResponsiveSetting(settings, 'grouped_column_icon_color', ':hover');\r\n\r\n  if (iconFillTableThPathHover) {\r\n    styles += colorPropertyStyled(iconFillTableThPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th .grouped-column, ${parentClass} .altrp-table-th svg, ${parentClass} .altrp-table-th img {`;\r\n\r\n  const iconSizeGroupedColumnSvgImg = getResponsiveSetting(settings, 'grouped_column_icon_size');\r\n\r\n  if (iconSizeGroupedColumnSvgImg) {\r\n    styles += iconSizeStyled(iconSizeGroupedColumnSvgImg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th:hover .grouped-column, ${parentClass} .altrp-table-th:hover svg, ${parentClass} .altrp-table-th:hover img {`;\r\n\r\n  const iconSizeGroupedColumnSvgImgHover = getResponsiveSetting(settings, 'grouped_column_icon_size', ':hover');\r\n\r\n  if (iconSizeGroupedColumnSvgImgHover) {\r\n    styles += iconSizeStyled(iconSizeGroupedColumnSvgImgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th .not-grouped-column {`;\r\n\r\n  const paddingNotGroupedColumn = getResponsiveSetting(settings, 'not_grouped_column_icon_padding');\r\n\r\n  if (paddingNotGroupedColumn) {\r\n    styles += dimensionsControllerToStyles(paddingNotGroupedColumn);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th:hover .not-grouped-column {`;\r\n\r\n  const paddingNotGroupedColumnHover = getResponsiveSetting(settings, 'not_grouped_column_icon_padding', ':hover');\r\n\r\n  if (paddingNotGroupedColumnHover) {\r\n    styles += dimensionsControllerToStyles(paddingNotGroupedColumnHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th .not-grouped-column path {`;\r\n\r\n  const iconFillNotGroupedColumnPath = getResponsiveSetting(settings, 'not_grouped_column_icon_color');\r\n\r\n  if (iconFillNotGroupedColumnPath) {\r\n    styles += colorPropertyStyled(iconFillNotGroupedColumnPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th:hover .not-grouped-column path {`;\r\n\r\n  const iconFillNotGroupedColumnPathHover = getResponsiveSetting(settings, 'not_grouped_column_icon_color', ':hover');\r\n\r\n  if (iconFillNotGroupedColumnPathHover) {\r\n    styles += colorPropertyStyled(iconFillNotGroupedColumnPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th .not-grouped-column, ${parentClass} .altrp-table-th .not-grouped-column svg, ${parentClass} .altrp-table-th .not-grouped-column img {`;\r\n\r\n  const iconSizeNotGroupedColumnSvgImg = getResponsiveSetting(settings, 'not_grouped_column_icon_size');\r\n\r\n  if (iconSizeNotGroupedColumnSvgImg) {\r\n    styles += iconSizeStyled(iconSizeNotGroupedColumnSvgImg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th:hover .not-grouped-column, ${parentClass} .altrp-table-th:hover .not-grouped-column svg, ${parentClass} .altrp-table-th:hover .not-grouped-column img {`;\r\n\r\n  const iconSizeNotGroupedColumnSvgImgHover = getResponsiveSetting(settings, 'not_grouped_column_icon_size', ':hover');\r\n\r\n  if (iconSizeNotGroupedColumnSvgImgHover) {\r\n    styles += iconSizeStyled(iconSizeNotGroupedColumnSvgImgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .expanded-row {`;\r\n\r\n  const paddingExpandedRow = getResponsiveSetting(settings, 'expanded_row_icon_padding');\r\n\r\n  if (paddingExpandedRow) {\r\n    styles += dimensionsControllerToStyles(paddingExpandedRow);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .expanded-row:hover {`;\r\n\r\n  const paddingExpandedRowHover = getResponsiveSetting(settings, 'expanded_row_icon_padding', ':hover');\r\n\r\n  if (paddingExpandedRowHover) {\r\n    styles += dimensionsControllerToStyles(paddingExpandedRowHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .expanded-row path {`;\r\n\r\n  const iconFillExpandedRowPath = getResponsiveSetting(settings, 'expanded_row_icon_color');\r\n\r\n  if (iconFillExpandedRowPath) {\r\n    styles += colorPropertyStyled(iconFillExpandedRowPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .expanded-row:hover path {`;\r\n\r\n  const iconFillExpandedRowPathHover = getResponsiveSetting(settings, 'expanded_row_icon_color', ':hover');\r\n\r\n  if (iconFillExpandedRowPathHover) {\r\n    styles += colorPropertyStyled(iconFillExpandedRowPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .expanded-row, ${parentClass} .expanded-row svg, ${parentClass}  .expanded-row img {`;\r\n\r\n  const iconSizeExpandedRowSvgImg = getResponsiveSetting(settings, 'expanded_row_icon_size');\r\n\r\n  if (iconSizeExpandedRowSvgImg) {\r\n    styles += iconSizeStyled(iconSizeExpandedRowSvgImg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .expanded-row:hover, ${parentClass} .expanded-row svg:hover, ${parentClass}  .expanded-row img:hover {`;\r\n\r\n  const iconSizeExpandedRowSvgImgHover = getResponsiveSetting(settings, 'expanded_row_icon_size', ':hover');\r\n\r\n  if (iconSizeExpandedRowSvgImgHover) {\r\n    styles += iconSizeStyled(iconSizeExpandedRowSvgImgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .not-expanded-row {`;\r\n\r\n  const paddingNotExpandedRow = getResponsiveSetting(settings, 'not_expanded_row_icon_padding');\r\n\r\n  if (paddingNotExpandedRow) {\r\n    styles += dimensionsControllerToStyles(paddingNotExpandedRow);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .not-expanded-row:hover {`;\r\n\r\n  const paddingNotExpandedRowHover = getResponsiveSetting(settings, 'not_expanded_row_icon_padding', ':hover');\r\n\r\n  if (paddingNotExpandedRowHover) {\r\n    styles += dimensionsControllerToStyles(paddingNotExpandedRowHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .not-expanded-row path {`;\r\n\r\n  const iconFillNotExpandedRowPath = getResponsiveSetting(settings, 'not_expanded_row_icon_color');\r\n\r\n  if (iconFillNotExpandedRowPath) {\r\n    styles += colorPropertyStyled(iconFillNotExpandedRowPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .not-expanded-row:hover path {`;\r\n\r\n  const iconFillNotExpandedRowPathHover = getResponsiveSetting(settings, 'not_expanded_row_icon_color', ':hover');\r\n\r\n  if (iconFillNotExpandedRowPathHover) {\r\n    styles += colorPropertyStyled(iconFillNotExpandedRowPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .not-expanded-row, ${parentClass} .not-expanded-row svg, ${parentClass} .not-expanded-row img {`;\r\n\r\n  const iconSizeNotExpandedRowSvgImg = getResponsiveSetting(settings, 'not_expanded_row_icon_size');\r\n\r\n  if (iconSizeNotExpandedRowSvgImg) {\r\n    styles += iconSizeStyled(iconSizeNotExpandedRowSvgImg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .not-expanded-row:hover, ${parentClass} .not-expanded-row svg:hover, ${parentClass} .not-expanded-row img:hover {`;\r\n\r\n  const iconSizeNotExpandedRowSvgImgHover = getResponsiveSetting(settings, 'not_expanded_row_icon_size', ':hover');\r\n\r\n  if (iconSizeNotExpandedRowSvgImgHover) {\r\n    styles += iconSizeStyled(iconSizeNotExpandedRowSvgImgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-tbody--striped tr:nth-child(2n), ${parentClass} .altrp-table-tbody--striped .altrp-table-tr:nth-child(2n) {`;\r\n\r\n  const colorThNthChild = getResponsiveSetting(settings, 'table_style_table_stripe_color');\r\n\r\n  if (colorThNthChild) {\r\n    styles += colorPropertyStyled(colorThNthChild, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-tbody--striped tr:nth-child(2n):hover, ${parentClass} .altrp-table-tbody--striped .altrp-table-tr:nth-child(2n):hover {`;\r\n\r\n  const colorThNthChildHover = getResponsiveSetting(settings, 'table_style_table_stripe_color');\r\n\r\n  if (colorThNthChildHover) {\r\n    styles += colorPropertyStyled(colorThNthChildHover, 'background-color', ':hover');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-field, ${parentClass} .altrp-table__filter-select>.altrp-field-select2__control, ${parentClass} .altrp-label_slider>.altrp-btn {`;\r\n\r\n  const colorFieldSelect2ControlBtn = getResponsiveSetting(settings, 'filter_style_table_text_color');\r\n\r\n  if (colorFieldSelect2ControlBtn) {\r\n    styles += colorPropertyStyled(colorFieldSelect2ControlBtn, 'color', '!important');\r\n  }\r\n\r\n  const backgroundColorFieldSelect2ControlBtn = getResponsiveSetting(settings, 'filter_style_table_background_color');\r\n\r\n  if (backgroundColorFieldSelect2ControlBtn) {\r\n    styles += colorPropertyStyled(backgroundColorFieldSelect2ControlBtn, 'background-color', '!important');\r\n  }\r\n\r\n  const inputPaddingFieldSelect2ControlBtn = getResponsiveSetting(settings, 'filter_padding');\r\n\r\n  if (inputPaddingFieldSelect2ControlBtn) {\r\n    styles += dimensionsControllerToStyles(inputPaddingFieldSelect2ControlBtn);\r\n  }\r\n\r\n  const typographicFieldSelect2ControlBtn = getResponsiveSetting(settings, 'filter_style_typographic');\r\n\r\n  if (typographicFieldSelect2ControlBtn) {\r\n    styles += typographicControllerToStyles(typographicFieldSelect2ControlBtn);\r\n  }\r\n\r\n  const borderTypeFieldSelect2ControlBtn = getResponsiveSetting(settings, 'filter_style_table_border_type');\r\n\r\n  if (borderTypeFieldSelect2ControlBtn) {\r\n    styles += simplePropertyStyled(borderTypeFieldSelect2ControlBtn, 'border-style', '!important');\r\n  }\r\n\r\n  const borderWidthFieldSelect2ControlBtn = getResponsiveSetting(settings, 'filter_style_table_border_width');\r\n\r\n  if (borderWidthFieldSelect2ControlBtn) {\r\n    styles += borderWidthStyled(borderWidthFieldSelect2ControlBtn, '!important');\r\n  }\r\n\r\n  const borderColorFieldSelect2ControlBtn = getResponsiveSetting(settings, 'filter_style_table_border_color');\r\n\r\n  if (borderColorFieldSelect2ControlBtn) {\r\n    styles += colorPropertyStyled(borderColorFieldSelect2ControlBtn, 'border-color', '!important');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-field:hover, ${parentClass} .altrp-table__filter-select:hover>.altrp-field-select2__control, ${parentClass} .altrp-label_slider>.altrp-btn {`;\r\n\r\n  const colorFieldSelect2ControlBtnHover = getResponsiveSetting(settings, 'filter_style_table_text_color', ':hover');\r\n\r\n  if (colorFieldSelect2ControlBtnHover) {\r\n    styles += colorPropertyStyled(colorFieldSelect2ControlBtnHover, 'color', '!important');\r\n  }\r\n\r\n  const backgroundColorFieldSelect2ControlBtnHover = getResponsiveSetting(settings, 'filter_style_table_background_color', ':hover');\r\n\r\n  if (backgroundColorFieldSelect2ControlBtnHover) {\r\n    styles += colorPropertyStyled(backgroundColorFieldSelect2ControlBtnHover, 'background-color', '!important');\r\n  }\r\n\r\n  const inputPaddingFieldSelect2ControlBtnHover = getResponsiveSetting(settings, 'filter_padding', ':hover');\r\n\r\n  if (inputPaddingFieldSelect2ControlBtnHover) {\r\n    styles += dimensionsControllerToStyles(inputPaddingFieldSelect2ControlBtnHover);\r\n  }\r\n\r\n  const typographicFieldSelect2ControlBtnHover = getResponsiveSetting(settings, 'filter_style_typographic', ':hover');\r\n\r\n  if (typographicFieldSelect2ControlBtnHover) {\r\n    styles += typographicControllerToStyles(typographicFieldSelect2ControlBtnHover);\r\n  }\r\n\r\n  const borderTypeFieldSelect2ControlBtnHover = getResponsiveSetting(settings, 'filter_style_table_border_type', ':hover');\r\n\r\n  if (borderTypeFieldSelect2ControlBtnHover) {\r\n    styles += simplePropertyStyled(borderTypeFieldSelect2ControlBtnHover, 'border-style', '!important');\r\n  }\r\n\r\n  const borderWidthFieldSelect2ControlBtnHover = getResponsiveSetting(settings, 'filter_style_table_border_width', ':hover');\r\n\r\n  if (borderWidthFieldSelect2ControlBtnHover) {\r\n    styles += borderWidthStyled(borderWidthFieldSelect2ControlBtnHover, '!important');\r\n  }\r\n\r\n  const borderColorFieldSelect2ControlBtnHover = getResponsiveSetting(settings, 'filter_style_table_border_color', ':hover');\r\n\r\n  if (borderColorFieldSelect2ControlBtnHover) {\r\n    styles += colorPropertyStyled(borderColorFieldSelect2ControlBtnHover, 'border-color', '!important');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-label {`;\r\n\r\n  const labelPaddingLabel = getResponsiveSetting(settings, 'label_padding');\r\n\r\n  if (labelPaddingLabel) {\r\n    styles += dimensionsControllerToStyles(labelPaddingLabel);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-label:hover {`;\r\n\r\n  const labelPaddingLabelHover = getResponsiveSetting(settings, 'label_padding', ':hover');\r\n\r\n  if (labelPaddingLabelHover) {\r\n    styles += dimensionsControllerToStyles(labelPaddingLabelHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th {`;\r\n\r\n  const textAlignTableTh = getResponsiveSetting(settings, 'table_table_header_alignment');\r\n\r\n  if (textAlignTableTh) {\r\n    styles += simplePropertyStyled(textAlignTableTh, 'text-align');\r\n  }\r\n\r\n  const typographicTableTh = getResponsiveSetting(settings, 'table_style_header_font');\r\n\r\n  if (typographicTableTh) {\r\n    styles += typographicControllerToStyles(typographicTableTh);\r\n  }\r\n\r\n  const colorTableTh = getResponsiveSetting(settings, 'table_style_header_text_color');\r\n\r\n  if (colorTableTh) {\r\n    styles += colorPropertyStyled(colorTableTh, 'color');\r\n  }\r\n\r\n  const paddingTableTh = getResponsiveSetting(settings, 'table_style_header_padding');\r\n\r\n  if (paddingTableTh) {\r\n    styles += dimensionsControllerToStyles(paddingTableTh);\r\n  }\r\n\r\n  const borderTypeTableTh = getResponsiveSetting(settings, 'table_style_header_border_type');\r\n\r\n  if (borderTypeTableTh) {\r\n    styles += simplePropertyStyled(borderTypeTableTh, 'border-style');\r\n  }\r\n\r\n  const borderColorTableTh = getResponsiveSetting(settings, 'table_style_header_border_color');\r\n\r\n  if (borderColorTableTh) {\r\n    styles += colorPropertyStyled(borderColorTableTh, 'border-color');\r\n  }\r\n\r\n  const borderWidthTableTh = getResponsiveSetting(settings, 'table_style_header_border_width');\r\n\r\n  if (borderWidthTableTh) {\r\n    styles += borderWidthStyled(borderWidthTableTh);\r\n  }\r\n\r\n  const backgroundColorTableTh = getResponsiveSetting(settings, 'table_style_header_background');\r\n\r\n  if (backgroundColorTableTh) {\r\n    styles += `background-color: ${backgroundColorTableTh.color}: `;\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th:hover {`;\r\n\r\n  const textAlignTableThHover = getResponsiveSetting(settings, 'table_table_header_alignment', ':hover');\r\n\r\n  if (textAlignTableThHover) {\r\n    styles += simplePropertyStyled(textAlignTableThHover, 'text-align');\r\n  }\r\n\r\n  const typographicTableThHover = getResponsiveSetting(settings, 'table_style_header_font', ':hover');\r\n\r\n  if (typographicTableThHover) {\r\n    styles += typographicControllerToStyles(typographicTableThHover);\r\n  }\r\n\r\n  const colorTableThHover = getResponsiveSetting(settings, 'table_style_header_text_color', ':hover');\r\n\r\n  if (colorTableThHover) {\r\n    styles += colorPropertyStyled(colorTableThHover, 'color');\r\n  }\r\n\r\n  const paddingTableThHover = getResponsiveSetting(settings, 'table_style_header_padding', ':hover');\r\n\r\n  if (paddingTableThHover) {\r\n    styles += dimensionsControllerToStyles(paddingTableThHover);\r\n  }\r\n\r\n  const borderTypeTableThHover = getResponsiveSetting(settings, 'table_style_header_border_type', ':hover');\r\n\r\n  if (borderTypeTableThHover) {\r\n    styles += simplePropertyStyled(borderTypeTableThHover, 'border-style');\r\n  }\r\n\r\n  const borderColorTableThHover = getResponsiveSetting(settings, 'table_style_header_border_color', ':hover');\r\n\r\n  if (borderColorTableThHover) {\r\n    styles += colorPropertyStyled(borderColorTableThHover, 'border-color');\r\n  }\r\n\r\n  const borderWidthTableThHover = getResponsiveSetting(settings, 'table_style_header_border_width', ':hover');\r\n\r\n  if (borderWidthTableThHover) {\r\n    styles += borderWidthStyled(borderWidthTableThHover);\r\n  }\r\n\r\n  const backgroundColorTableThHover = getResponsiveSetting(settings, 'table_style_header_background', ':hover');\r\n\r\n  if (backgroundColorTableThHover) {\r\n    styles += colorPropertyStyled(backgroundColorTableThHover, 'background');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-head {`;\r\n\r\n  const backgroundColorTableHead = getResponsiveSetting(settings, 'table_style_header_background');\r\n\r\n  if (backgroundColorTableHead) {\r\n    styles += `background-color: ${backgroundColorTableHead.color}; `;\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-head:hover {`;\r\n\r\n  const backgroundColorTableHeadHover = getResponsiveSetting(settings, 'table_style_header_background', ':hover');\r\n\r\n  if (backgroundColorTableHeadHover) {\r\n    styles += colorPropertyStyled(backgroundColorTableHeadHover, 'background');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-transpose_true .altrp-table-th:not(:first-child) {`;\r\n\r\n  const borderWidthTableThNotFirstChild = getResponsiveSetting(settings, 'table_style_header_border_width');\r\n\r\n  if (borderWidthTableThNotFirstChild) {\r\n    styles += marginTopLeftStyled(borderWidthTableThNotFirstChild, 'top'); //здесь вернется строка вида: \"margin-top: -10px\"\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-transpose_true .altrp-table-th:not(:first-child):hover {`;\r\n\r\n  const borderWidthTableThNotFirstChildHover = getResponsiveSetting(settings, 'table_style_header_border_width', ':hover');\r\n\r\n  if (borderWidthTableThNotFirstChildHover) {\r\n    styles += marginTopLeftStyled(borderWidthTableThNotFirstChildHover, 'top'); //здесь вернется строка вида: \"margin-top: -10px\"\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-transpose_true .altrp-table-tr:not(:first-child) .altrp-table-th {`;\r\n\r\n  const borderWidthTableTrNotFirstChild = getResponsiveSetting(settings, 'table_style_header_border_width');\r\n\r\n  if (borderWidthTableTrNotFirstChild) {\r\n    styles += marginTopLeftStyled(borderWidthTableTrNotFirstChild, 'left'); //здесь вернется строка вида: \"margin-left: -10px\"\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-transpose_true .altrp-table-tr:not(:first-child) .altrp-table-th:hover {`;\r\n\r\n  const borderWidthTableTrNotFirstChildHover = getResponsiveSetting(settings, 'table_style_header_border_width', ':hover');\r\n\r\n  if (borderWidthTableTrNotFirstChildHover) {\r\n    styles += marginTopLeftStyled(borderWidthTableTrNotFirstChildHover, 'left'); //здесь вернется строка вида: \"margin-left: -10px\"\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} div:not(.altrp-element) .altrp-table-th {`;\r\n\r\n  const verticalAlignDivNotAltrpElement = getResponsiveSetting(settings, 'header_cell_vertical_alignment');\r\n\r\n  if (verticalAlignDivNotAltrpElement) {\r\n    styles += simplePropertyStyled(verticalAlignDivNotAltrpElement, 'vertical-align');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} div:not(.altrp-element) .altrp-table-th:hover {`;\r\n\r\n  const verticalAlignDivNotAltrpElementHover = getResponsiveSetting(settings, 'header_cell_vertical_alignment', ':hover');\r\n\r\n  if (verticalAlignDivNotAltrpElementHover) {\r\n    styles += simplePropertyStyled(verticalAlignDivNotAltrpElementHover, 'vertical-align');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td {`;\r\n\r\n  const textAlignTableTd = getResponsiveSetting(settings, 'table_table_body_alignment');\r\n\r\n  if (textAlignTableTd) {\r\n    styles += simplePropertyStyled(textAlignTableTd, 'text-align');\r\n  }\r\n\r\n  const paddingTableTd = getResponsiveSetting(settings, 'table_style_body_cell_padding');\r\n\r\n  if (paddingTableTd) {\r\n    styles += dimensionsControllerToStyles(paddingTableTd);\r\n  }\r\n\r\n  const borderTypeTableTd = getResponsiveSetting(settings, 'table_style_body_border_type');\r\n\r\n  if (borderTypeTableTd) {\r\n    styles += simplePropertyStyled(borderTypeTableTd, 'border-style');\r\n  }\r\n\r\n  const borderColorTableTd = getResponsiveSetting(settings, 'table_style_body_border_color_');\r\n\r\n  if (borderColorTableTd) {\r\n    styles += colorPropertyStyled(borderColorTableTd, 'border-color');\r\n  }\r\n\r\n  const colorTableTd = getResponsiveSetting(settings, 'table_style_body_border_text_color');\r\n\r\n  if (colorTableTd) {\r\n    styles += colorPropertyStyled(colorTableTd, 'color');\r\n  }\r\n\r\n  const typographicTableTd = getResponsiveSetting(settings, 'table_style_body_font');\r\n\r\n  if (typographicTableTd) {\r\n    styles += typographicControllerToStyles(typographicTableTd);\r\n  }\r\n\r\n  const borderWidthTableTd = getResponsiveSetting(settings, 'table_style_body_border_width');\r\n\r\n  if (borderWidthTableTd) {\r\n    styles += borderWidthStyled(borderWidthTableTd);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td:hover {`;\r\n\r\n  const textAlignTableTdHover = getResponsiveSetting(settings, 'table_table_body_alignment', ':hover');\r\n\r\n  if (textAlignTableTdHover) {\r\n    styles += simplePropertyStyled(textAlignTableTdHover, 'text-align');\r\n  }\r\n\r\n  const paddingTableTdHover = getResponsiveSetting(settings, 'table_style_body_cell_padding', ':hover');\r\n\r\n  if (paddingTableTdHover) {\r\n    styles += dimensionsControllerToStyles(paddingTableTdHover);\r\n  }\r\n\r\n  const borderTypeTableTdHover = getResponsiveSetting(settings, 'table_style_body_border_type', ':hover');\r\n\r\n  if (borderTypeTableTdHover) {\r\n    styles += simplePropertyStyled(borderTypeTableTdHover, 'border-style');\r\n  }\r\n\r\n  const borderColorTableTdHover = getResponsiveSetting(settings, 'table_style_body_border_color_', ':hover');\r\n\r\n  if (borderColorTableTdHover) {\r\n    styles += colorPropertyStyled(borderColorTableTdHover, 'border-color');\r\n  }\r\n\r\n  const colorTableTdHover = getResponsiveSetting(settings, 'table_style_body_border_text_color', ':hover');\r\n\r\n  if (colorTableTdHover) {\r\n    styles += colorPropertyStyled(colorTableTdHover, 'color');\r\n  }\r\n\r\n  const typographicTableTdHover = getResponsiveSetting(settings, 'table_style_body_font', ':hover');\r\n\r\n  if (typographicTableTdHover) {\r\n    styles += typographicControllerToStyles(typographicTableTdHover);\r\n  }\r\n\r\n  const borderWidthTableTdHover = getResponsiveSetting(settings, 'table_style_body_border_width', ':hover');\r\n\r\n  if (borderWidthTableTdHover) {\r\n    styles += borderWidthStyled(borderWidthTableTdHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td a {`;\r\n\r\n  const colorTableTdA = getResponsiveSetting(settings, 'table_link_color');\r\n\r\n  if (colorTableTdA) {\r\n    styles += colorPropertyStyled(colorTableTdA, 'color');\r\n  }\r\n\r\n  const typographicTableTdA = getResponsiveSetting(settings, 'table_link_font');\r\n\r\n  if (typographicTableTdA) {\r\n    styles += typographicControllerToStyles(typographicTableTdA);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td a:hover {`;\r\n\r\n  const colorTableTdAHover = getResponsiveSetting(settings, 'table_link_color', ':hover');\r\n\r\n  if (colorTableTdAHover) {\r\n    styles += colorPropertyStyled(colorTableTdAHover, 'color');\r\n  }\r\n\r\n  const typographicTableTdAHover = getResponsiveSetting(settings, 'table_link_font', ':hover');\r\n\r\n  if (typographicTableTdAHover) {\r\n    styles += typographicControllerToStyles(typographicTableTdAHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-tbody {`;\r\n\r\n  const backgroundColorTbodyBackground = getResponsiveSetting(settings, 'table_style_body_border_background');\r\n\r\n  if (backgroundColorTbodyBackground) {\r\n    styles += colorPropertyStyled(backgroundColorTbodyBackground, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-tbody:hover {`;\r\n\r\n  const backgroundColorTbodyBackgroundHover = getResponsiveSetting(settings, 'table_style_body_border_background', ':hover');\r\n\r\n  if (backgroundColorTbodyBackgroundHover) {\r\n    styles += colorPropertyStyled(backgroundColorTbodyBackgroundHover, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-transpose_true .altrp-table-td:not(:first-child) {`;\r\n\r\n  const borderWidthTransposeTableTdNot = getResponsiveSetting(settings, 'table_style_body_border_width');\r\n\r\n  if (borderWidthTransposeTableTdNot) {\r\n    styles += marginTopLeftStyled(borderWidthTransposeTableTdNot, 'top'); //здесь вернется строка вида: \"margin-top: -10px\"\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-transpose_true .altrp-table-td:not(:first-child):hover {`;\r\n\r\n  const borderWidthTransposeTableTdNotHover = getResponsiveSetting(settings, 'table_style_body_border_width', ':hover');\r\n\r\n  if (borderWidthTransposeTableTdNotHover) {\r\n    styles += marginTopLeftStyled(borderWidthTransposeTableTdNotHover, 'top'); //здесь вернется строка вида: \"margin-top: -10px\"\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-transpose_true .altrp-table-tr:not(:first-child) .altrp-table-td {`;\r\n\r\n  const borderWidthTransposeTableTdNotTd = getResponsiveSetting(settings, 'table_style_body_border_width');\r\n\r\n  if (borderWidthTransposeTableTdNotTd) {\r\n    styles += marginTopLeftStyled(borderWidthTransposeTableTdNotTd, 'left'); //здесь вернется строка вида: \"margin-left: -10px\"\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-transpose_true .altrp-table-tr:not(:first-child) .altrp-table-td:hover {`;\r\n\r\n  const borderWidthTransposeTableTdNotTdHover = getResponsiveSetting(settings, 'table_style_body_border_width', ':hover');\r\n\r\n  if (borderWidthTransposeTableTdNotTdHover) {\r\n    styles += marginTopLeftStyled(borderWidthTransposeTableTdNotTdHover, 'left'); //здесь вернется строка вида: \"margin-left: -10px\"\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td__grouping {`;\r\n\r\n  const colorTdGrouping = getResponsiveSetting(settings, 'table_style_group_border_text_color');\r\n\r\n  if (colorTdGrouping) {\r\n    styles += colorPropertyStyled(colorTdGrouping, 'color');\r\n  }\r\n\r\n  const typographicTdGrouping = getResponsiveSetting(settings, 'table_style_group_font');\r\n\r\n  if (typographicTdGrouping) {\r\n    styles += typographicControllerToStyles(typographicTdGrouping);\r\n  }\r\n\r\n  const paddingTdGrouping = getResponsiveSetting(settings, 'table_style_group_cell_padding');\r\n\r\n  if (paddingTdGrouping) {\r\n    styles += dimensionsControllerToStyles(paddingTdGrouping);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td__grouping:hover {`;\r\n\r\n  const colorTdGroupingHover = getResponsiveSetting(settings, 'table_style_group_border_text_color', ':hover');\r\n\r\n  if (colorTdGroupingHover) {\r\n    styles += colorPropertyStyled(colorTdGroupingHover, 'color');\r\n  }\r\n\r\n  const typographicTdGroupingHover = getResponsiveSetting(settings, 'table_style_group_font', ':hover');\r\n\r\n  if (typographicTdGroupingHover) {\r\n    styles += typographicControllerToStyles(typographicTdGroupingHover);\r\n  }\r\n\r\n  const paddingTdGroupingHover = getResponsiveSetting(settings, 'table_style_group_cell_padding', ':hover');\r\n\r\n  if (paddingTdGroupingHover) {\r\n    styles += dimensionsControllerToStyles(paddingTdGroupingHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-tbody .altrp-table-td__grouping {`;\r\n\r\n  const backgroundColorTbodyTdGrouping = getResponsiveSetting(settings, 'table_style_group_border_background');\r\n\r\n  if (backgroundColorTbodyTdGrouping) {\r\n    styles += colorPropertyStyled(backgroundColorTbodyTdGrouping, 'background-color');\r\n  }\r\n\r\n  const textAlignTbodyTdGrouping = getResponsiveSetting(settings, 'table_style_group_cell_alignment');\r\n\r\n  if (textAlignTbodyTdGrouping) {\r\n    styles += simplePropertyStyled(textAlignTbodyTdGrouping, 'text-align');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-tbody .altrp-table-td__grouping:hover {`;\r\n\r\n  const backgroundColorTbodyTdGroupingHover = getResponsiveSetting(settings, 'table_style_group_border_background', ':hover');\r\n\r\n  if (backgroundColorTbodyTdGroupingHover) {\r\n    styles += colorPropertyStyled(backgroundColorTbodyTdGroupingHover, 'background-color');\r\n  }\r\n\r\n  const textAlignTbodyTdGroupingHover = getResponsiveSetting(settings, 'table_style_group_cell_alignment', ':hover');\r\n\r\n  if (textAlignTbodyTdGroupingHover) {\r\n    styles += simplePropertyStyled(textAlignTbodyTdGroupingHover, 'text-align');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} div:not(.altrp-element) .altrp-table-td {`;\r\n\r\n  const verticalAlignDivNotAltrpElTd = getResponsiveSetting(settings, 'cell_vertical_alignment');\r\n\r\n  if (verticalAlignDivNotAltrpElTd) {\r\n    styles += simplePropertyStyled(verticalAlignDivNotAltrpElTd, 'vertical-align');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} div:not(.altrp-element) .altrp-table-td:hover {`;\r\n\r\n  const verticalAlignDivNotAltrpElTdHover = getResponsiveSetting(settings, 'cell_vertical_alignment', ':hover');\r\n\r\n  if (verticalAlignDivNotAltrpElTdHover) {\r\n    styles += simplePropertyStyled(verticalAlignDivNotAltrpElTdHover, 'vertical-align');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td__grouping .altrp-table__collapse-icon svg {`;\r\n\r\n  const iconSizeTdGroupingIconSvg = getResponsiveSetting(settings, 'table_style_group_icon_size');\r\n\r\n  if (iconSizeTdGroupingIconSvg) {\r\n    styles += iconSizeStyled(iconSizeTdGroupingIconSvg);\r\n  }\r\n\r\n  const iconLeftSpaceTdGroupingIconSvg = getResponsiveSetting(settings, 'table_style_group_icon_left_space');\r\n\r\n  if (iconLeftSpaceTdGroupingIconSvg) {\r\n    styles += sizeStyled(iconLeftSpaceTdGroupingIconSvg, 'margin-left');\r\n  }\r\n\r\n  const iconRightSpaceTdGroupingIconSvg = getResponsiveSetting(settings, 'table_style_group_icon_right_space');\r\n\r\n  if (iconRightSpaceTdGroupingIconSvg) {\r\n    styles += sizeStyled(iconRightSpaceTdGroupingIconSvg, 'margin-right');\r\n  }\r\n\r\n  const iconTopTranslateTdGroupingIconSvg = getResponsiveSetting(settings, 'table_style_group_icon_top');\r\n\r\n  if (iconTopTranslateTdGroupingIconSvg) {\r\n    styles += sizeStyled(iconTopTranslateTdGroupingIconSvg, 'top');\r\n  }\r\n\r\n  const iconLeftTranslateTdGroupingIconSvg = getResponsiveSetting(settings, 'table_style_group_icon_left');\r\n\r\n  if (iconLeftTranslateTdGroupingIconSvg) {\r\n    styles += sizeStyled(iconLeftTranslateTdGroupingIconSvg, 'left');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td__grouping:hover .altrp-table__collapse-icon svg {`;\r\n\r\n  const iconSizeTdGroupingIconSvgHover = getResponsiveSetting(settings, 'table_style_group_icon_size', ':hover');\r\n\r\n  if (iconSizeTdGroupingIconSvgHover) {\r\n    styles += iconSizeStyled(iconSizeTdGroupingIconSvgHover);\r\n  }\r\n\r\n  const iconLeftSpaceTdGroupingIconSvgHover = getResponsiveSetting(settings, 'table_style_group_icon_left_space', ':hover');\r\n\r\n  if (iconLeftSpaceTdGroupingIconSvgHover) {\r\n    styles += sizeStyled(iconLeftSpaceTdGroupingIconSvgHover, 'margin-left');\r\n  }\r\n\r\n  const iconRightSpaceTdGroupingIconSvgHover = getResponsiveSetting(settings, 'table_style_group_icon_right_space', ':hover');\r\n\r\n  if (iconRightSpaceTdGroupingIconSvgHover) {\r\n    styles += sizeStyled(iconRightSpaceTdGroupingIconSvgHover, 'margin-right');\r\n  }\r\n\r\n  const iconTopTranslateTdGroupingIconSvgHover = getResponsiveSetting(settings, 'table_style_group_icon_top', ':hover');\r\n\r\n  if (iconTopTranslateTdGroupingIconSvgHover) {\r\n    styles += sizeStyled(iconTopTranslateTdGroupingIconSvgHover, 'top');\r\n  }\r\n\r\n  const iconLeftTranslateTdGroupingIconSvgHover = getResponsiveSetting(settings, 'table_style_group_icon_left', ':hover');\r\n\r\n  if (iconLeftTranslateTdGroupingIconSvgHover) {\r\n    styles += sizeStyled(iconLeftTranslateTdGroupingIconSvgHover, 'left');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td__grouping .altrp-table__collapse-icon svg, ${parentClass} .altrp-table-td__grouping .altrp-table__collapse-icon path {`;\r\n\r\n  const iconFillTdGroupingIconSvgPath = getResponsiveSetting(settings, 'table_style_group_icon_color');\r\n\r\n  if (iconFillTdGroupingIconSvgPath) {\r\n    styles += colorPropertyStyled(iconFillTdGroupingIconSvgPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td__grouping:hover .altrp-table__collapse-icon svg, ${parentClass} .altrp-table-td__grouping:hover .altrp-table__collapse-icon path {`;\r\n\r\n  const iconFillTdGroupingIconSvgPathHover = getResponsiveSetting(settings, 'table_style_group_icon_color', ':hover');\r\n\r\n  if (iconFillTdGroupingIconSvgPathHover) {\r\n    styles += colorPropertyStyled(iconFillTdGroupingIconSvgPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-foot .altrp-table-td {`;\r\n\r\n  const paddingTableFootTd = getResponsiveSetting(settings, 'table_style_footer_cell_padding');\r\n\r\n  if (paddingTableFootTd) {\r\n    styles += dimensionsControllerToStyles(paddingTableFootTd);\r\n  }\r\n\r\n  const textAlignTableFootTd = getResponsiveSetting(settings, 'table_style_footer_cell_alignment');\r\n\r\n  if (textAlignTableFootTd) {\r\n    styles += simplePropertyStyled(textAlignTableFootTd, 'text-align');\r\n  }\r\n\r\n  const backgroundColorTableFootTd = getResponsiveSetting(settings, 'table_style_footer_border_background');\r\n\r\n  if (backgroundColorTableFootTd) {\r\n    styles += colorPropertyStyled(backgroundColorTableFootTd, 'background-color');\r\n  }\r\n\r\n  const colorTableFootTd = getResponsiveSetting(settings, 'table_style_footer_border_text_color');\r\n\r\n  if (colorTableFootTd) {\r\n    styles += colorPropertyStyled(colorTableFootTd, 'color');\r\n  }\r\n\r\n  const typographicTableFootTd = getResponsiveSetting(settings, 'table_style_footer_font');\r\n\r\n  if (typographicTableFootTd) {\r\n    styles += typographicControllerToStyles(typographicTableFootTd);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-foot .altrp-table-td:hover {`;\r\n\r\n  const paddingTableFootTdHover = getResponsiveSetting(settings, 'table_style_footer_cell_padding', ':hover');\r\n\r\n  if (paddingTableFootTdHover) {\r\n    styles += dimensionsControllerToStyles(paddingTableFootTdHover);\r\n  }\r\n\r\n  const textAlignTableFootTdHover = getResponsiveSetting(settings, 'table_style_footer_cell_alignment', ':hover');\r\n\r\n  if (textAlignTableFootTdHover) {\r\n    styles += simplePropertyStyled(textAlignTableFootTdHover, 'text-align');\r\n  }\r\n\r\n  const backgroundColorTableFootTdHover = getResponsiveSetting(settings, 'table_style_footer_border_background', ':hover');\r\n\r\n  if (backgroundColorTableFootTdHover) {\r\n    styles += colorPropertyStyled(backgroundColorTableFootTdHover, 'background-color');\r\n  }\r\n\r\n  const colorTableFootTdHover = getResponsiveSetting(settings, 'table_style_footer_border_text_color', ':hover');\r\n\r\n  if (colorTableFootTdHover) {\r\n    styles += colorPropertyStyled(colorTableFootTdHover, 'color');\r\n  }\r\n\r\n  const typographicTableFootTdHover = getResponsiveSetting(settings, 'table_style_footer_font', ':hover');\r\n\r\n  if (typographicTableFootTdHover) {\r\n    styles += typographicControllerToStyles(typographicTableFootTdHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-global-filter label {`;\r\n\r\n  const paddingGlobalFilterLabel = getResponsiveSetting(settings, 'global_filter_label_padding');\r\n\r\n  if (paddingGlobalFilterLabel) {\r\n    styles += dimensionsControllerToStyles(paddingGlobalFilterLabel);\r\n  }\r\n\r\n  const colorGlobalFilterLabel = getResponsiveSetting(settings, 'global_filter_label_color');\r\n\r\n  if (colorGlobalFilterLabel) {\r\n    styles += colorPropertyStyled(colorGlobalFilterLabel, 'color');\r\n  }\r\n\r\n  const typographicGlobalFilterLabel = getResponsiveSetting(settings, 'global_filter_label_typographic');\r\n\r\n  if (typographicGlobalFilterLabel) {\r\n    styles += typographicControllerToStyles(typographicGlobalFilterLabel);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-global-filter label:hover {`;\r\n\r\n  const paddingGlobalFilterLabelHover = getResponsiveSetting(settings, 'global_filter_label_padding', ':hover');\r\n\r\n  if (paddingGlobalFilterLabelHover) {\r\n    styles += dimensionsControllerToStyles(paddingGlobalFilterLabelHover);\r\n  }\r\n\r\n  const colorGlobalFilterLabelHover = getResponsiveSetting(settings, 'global_filter_label_color', ':hover');\r\n\r\n  if (colorGlobalFilterLabelHover) {\r\n    styles += colorPropertyStyled(colorGlobalFilterLabelHover, 'color');\r\n  }\r\n\r\n  const typographicGlobalFilterLabelHover = getResponsiveSetting(settings, 'global_filter_label_typographic', ':hover');\r\n\r\n  if (typographicGlobalFilterLabelHover) {\r\n    styles += typographicControllerToStyles(typographicGlobalFilterLabelHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-global-filter input {`;\r\n\r\n  const paddingGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_padding');\r\n\r\n  if (paddingGlobalFilterInput) {\r\n    styles += dimensionsControllerToStyles(paddingGlobalFilterInput);\r\n  }\r\n\r\n  const widthGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_width');\r\n\r\n  if (widthGlobalFilterInput) {\r\n    styles += sizeStyled(widthGlobalFilterInput, 'width');\r\n  }\r\n\r\n  const marginLeftGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_margin_left');\r\n\r\n  if (marginLeftGlobalFilterInput) {\r\n    styles += sizeStyled(marginLeftGlobalFilterInput, 'margin-left');\r\n  }\r\n\r\n  const colorGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_color');\r\n\r\n  if (colorGlobalFilterInput) {\r\n    styles += colorPropertyStyled(colorGlobalFilterInput, 'color');\r\n  }\r\n\r\n  const backgroundColorGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_background_color');\r\n\r\n  if (backgroundColorGlobalFilterInput) {\r\n    styles += colorPropertyStyled(backgroundColorGlobalFilterInput, 'background');\r\n  }\r\n\r\n  const typographicGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_typographic');\r\n\r\n  if (typographicGlobalFilterInput) {\r\n    styles += typographicControllerToStyles(typographicGlobalFilterInput);\r\n  }\r\n\r\n  const borderTypeGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_border_type');\r\n\r\n  if (borderTypeGlobalFilterInput) {\r\n    styles += simplePropertyStyled(borderTypeGlobalFilterInput, 'border-style');\r\n  }\r\n\r\n  const borderWidthGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_border_width');\r\n\r\n  if (borderWidthGlobalFilterInput) {\r\n    styles += borderWidthStyled(borderWidthGlobalFilterInput);\r\n  }\r\n\r\n  const borderRadiusGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_border_radius');\r\n\r\n  if (borderRadiusGlobalFilterInput) {\r\n    styles += dimensionsControllerToStyles(borderRadiusGlobalFilterInput, 'border-radius');\r\n  }\r\n\r\n  const borderColorGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_border_color');\r\n\r\n  if (borderColorGlobalFilterInput) {\r\n    styles += colorPropertyStyled(borderColorGlobalFilterInput, 'border-color');\r\n  }\r\n\r\n  const boxShadowGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_shadow');\r\n\r\n  if (boxShadowGlobalFilterInput) {\r\n    styles += shadowControllerToStyles(boxShadowGlobalFilterInput);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-global-filter input:hover {`;\r\n\r\n  const paddingGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_padding', ':hover');\r\n\r\n  if (paddingGlobalFilterInputHover) {\r\n    styles += dimensionsControllerToStyles(paddingGlobalFilterInputHover);\r\n  }\r\n\r\n  const widthGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_width', ':hover');\r\n\r\n  if (widthGlobalFilterInputHover) {\r\n    styles += sizeStyled(widthGlobalFilterInputHover, 'width');\r\n  }\r\n\r\n  const marginLeftGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_margin_left', ':hover');\r\n\r\n  if (marginLeftGlobalFilterInputHover) {\r\n    styles += sizeStyled(marginLeftGlobalFilterInputHover, 'margin-left');\r\n  }\r\n\r\n  const colorGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_color', ':hover');\r\n\r\n  if (colorGlobalFilterInputHover) {\r\n    styles += colorPropertyStyled(colorGlobalFilterInputHover, 'color');\r\n  }\r\n\r\n  const backgroundColorGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_background_color', ':hover');\r\n\r\n  if (backgroundColorGlobalFilterInputHover) {\r\n    styles += colorPropertyStyled(backgroundColorGlobalFilterInputHover, 'background');\r\n  }\r\n\r\n  const typographicGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_typographic', ':hover');\r\n\r\n  if (typographicGlobalFilterInputHover) {\r\n    styles += typographicControllerToStyles(typographicGlobalFilterInputHover);\r\n  }\r\n\r\n  const borderTypeGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_border_type', ':hover');\r\n\r\n  if (borderTypeGlobalFilterInputHover) {\r\n    styles += simplePropertyStyled(borderTypeGlobalFilterInputHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_border_width', ':hover');\r\n\r\n  if (borderWidthGlobalFilterInputHover) {\r\n    styles += borderWidthStyled(borderWidthGlobalFilterInputHover);\r\n  }\r\n\r\n  const borderRadiusGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_border_radius', ':hover');\r\n\r\n  if (borderRadiusGlobalFilterInputHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusGlobalFilterInputHover, 'border-radius');\r\n  }\r\n\r\n  const borderColorGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_border_color', ':hover');\r\n\r\n  if (borderColorGlobalFilterInputHover) {\r\n    styles += colorPropertyStyled(borderColorGlobalFilterInputHover, 'border-color');\r\n  }\r\n\r\n  const boxShadowGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_shadow', ':hover');\r\n\r\n  if (boxShadowGlobalFilterInputHover) {\r\n    styles += shadowControllerToStyles(boxShadowGlobalFilterInputHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination {`;\r\n\r\n  const paddingPagination = getResponsiveSetting(settings, 'table_style_pagination_padding');\r\n\r\n  if (paddingPagination) {\r\n    styles += dimensionsControllerToStyles(paddingPagination);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination:hover {`;\r\n\r\n  const paddingPaginationHover = getResponsiveSetting(settings, 'table_style_pagination_padding', ':hover');\r\n\r\n  if (paddingPaginationHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginationHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__previous {`;\r\n\r\n  const typographicPaginationPrev = getResponsiveSetting(settings, 'table_style_prev_btn_pagination_typographic');\r\n\r\n  if (typographicPaginationPrev) {\r\n    styles += typographicControllerToStyles(typographicPaginationPrev);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__previous:hover {`;\r\n\r\n  const typographicPaginationPrevHover = getResponsiveSetting(settings, 'table_style_prev_btn_pagination_typographic', ':hover');\r\n\r\n  if (typographicPaginationPrevHover) {\r\n    styles += typographicControllerToStyles(typographicPaginationPrevHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} altrp-pagination .altrp-pagination__next {`;\r\n\r\n  const typographicPaginationNext = getResponsiveSetting(settings, 'table_style_next_btn_pagination_typographic');\r\n\r\n  if (typographicPaginationNext) {\r\n    styles += typographicControllerToStyles(typographicPaginationNext);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} altrp-pagination .altrp-pagination__next:hover {`;\r\n\r\n  const typographicPaginationNextHover = getResponsiveSetting(settings, 'table_style_next_btn_pagination_typographic', ':hover');\r\n\r\n  if (typographicPaginationNextHover) {\r\n    styles += typographicControllerToStyles(typographicPaginationNextHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination-pages__item {`;\r\n\r\n  const typographicPaginationPagesItem = getResponsiveSetting(settings, 'table_style_item_count_pagination_typographic');\r\n\r\n  if (typographicPaginationPagesItem) {\r\n    styles += typographicControllerToStyles(typographicPaginationPagesItem);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination-pages__item:hover {`;\r\n\r\n  const typographicPaginationPagesItemHover = getResponsiveSetting(settings, 'table_style_item_count_pagination_typographic', ':hover');\r\n\r\n  if (typographicPaginationPagesItemHover) {\r\n    styles += typographicControllerToStyles(typographicPaginationPagesItemHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous, ${parentClass} .altrp-pagination__next {`;\r\n\r\n  const colorPaginationPrevNext = getResponsiveSetting(settings, 'table_style_pagination_buttons_text_color');\r\n\r\n  if (colorPaginationPrevNext) {\r\n    styles += colorPropertyStyled(colorPaginationPrevNext, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginationPrevNext = getResponsiveSetting(settings, 'table_style_pagination_buttons_background_color');\r\n\r\n  if (backgroundColorPaginationPrevNext) {\r\n    styles += colorPropertyStyled(backgroundColorPaginationPrevNext, 'background-color');\r\n  }\r\n\r\n  const paddingPaginationPrevNext = getResponsiveSetting(settings, 'table_style_pagination_padding_buttons');\r\n\r\n  if (paddingPaginationPrevNext) {\r\n    styles += dimensionsControllerToStyles(paddingPaginationPrevNext);\r\n  }\r\n\r\n  const borderTypePaginationPrevNext = getResponsiveSetting(settings, 'table_style_pagination_border_type');\r\n\r\n  if (borderTypePaginationPrevNext) {\r\n    styles += simplePropertyStyled(borderTypePaginationPrevNext, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginationPrevNext = getResponsiveSetting(settings, 'table_style_pagination_border_width');\r\n\r\n  if (borderWidthPaginationPrevNext) {\r\n    styles += borderWidthStyled(borderWidthPaginationPrevNext);\r\n  }\r\n\r\n  const borderRadiusPaginationPrevNext = getResponsiveSetting(settings, 'table_style_pagination_border_radius');\r\n\r\n  if (borderRadiusPaginationPrevNext) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginationPrevNext, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginationPrevNext = getResponsiveSetting(settings, 'table_style_pagination_border_color');\r\n\r\n  if (borderColorPaginationPrevNext) {\r\n    styles += colorPropertyStyled(borderColorPaginationPrevNext, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginationPrevNext = getResponsiveSetting(settings, 'pagination_buttons_shadow');\r\n\r\n  if (boxShadowPaginationPrevNext) {\r\n    styles += shadowControllerToStyles(boxShadowPaginationPrevNext);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover, ${parentClass} .altrp-pagination__next:hover {`;\r\n\r\n  const colorPaginationPrevNextHover = getResponsiveSetting(settings, 'table_style_pagination_buttons_text_color', ':hover');\r\n\r\n  if (colorPaginationPrevNextHover) {\r\n    styles += colorPropertyStyled(colorPaginationPrevNextHover, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginationPrevNextHover = getResponsiveSetting(settings, 'table_style_pagination_buttons_background_color', ':hover');\r\n\r\n  if (backgroundColorPaginationPrevNextHover) {\r\n    styles += colorPropertyStyled(backgroundColorPaginationPrevNextHover, 'background-color');\r\n  }\r\n\r\n  const paddingPaginationPrevNextHover = getResponsiveSetting(settings, 'table_style_pagination_padding_buttons', ':hover');\r\n\r\n  if (paddingPaginationPrevNextHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginationPrevNextHover);\r\n  }\r\n\r\n  const borderTypePaginationPrevNextHover = getResponsiveSetting(settings, 'table_style_pagination_border_type', ':hover');\r\n\r\n  if (borderTypePaginationPrevNextHover) {\r\n    styles += simplePropertyStyled(borderTypePaginationPrevNextHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginationPrevNextHover = getResponsiveSetting(settings, 'table_style_pagination_border_width', ':hover');\r\n\r\n  if (borderWidthPaginationPrevNextHover) {\r\n    styles += borderWidthStyled(borderWidthPaginationPrevNextHover);\r\n  }\r\n\r\n  const borderRadiusPaginationPrevNextHover = getResponsiveSetting(settings, 'table_style_pagination_border_radius', ':hover');\r\n\r\n  if (borderRadiusPaginationPrevNextHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginationPrevNextHover, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginationPrevNextHover = getResponsiveSetting(settings, 'table_style_pagination_border_color', ':hover');\r\n\r\n  if (borderColorPaginationPrevNextHover) {\r\n    styles += colorPropertyStyled(borderColorPaginationPrevNextHover, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginationPrevNextHover = getResponsiveSetting(settings, 'pagination_buttons_shadow', ':hover');\r\n\r\n  if (boxShadowPaginationPrevNextHover) {\r\n    styles += shadowControllerToStyles(boxShadowPaginationPrevNextHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next, ${parentClass} .altrp-pagination-pages__item, ${parentClass} .altrp-pagination__count, ${parentClass} .altrp-pagination__previous, ${parentClass} .altrp-pagination__goto-page, ${parentClass} .altrp-pagination__select-size  {`;\r\n\r\n  const typographicNextItemCountPrevGotoSelect = getResponsiveSetting(settings, 'table_style_pagination_typographic');\r\n\r\n  if (typographicNextItemCountPrevGotoSelect) {\r\n    styles += typographicControllerToStyles(typographicNextItemCountPrevGotoSelect);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover, ${parentClass} .altrp-pagination-pages__item:hover, ${parentClass} .altrp-pagination__count:hover, ${parentClass} .altrp-pagination__previous:hover, ${parentClass} .altrp-pagination__goto-page:hover, ${parentClass} .altrp-pagination__select-size:hover  {`;\r\n\r\n  const typographicNextItemCountPrevGotoSelectHover = getResponsiveSetting(settings, 'table_style_pagination_typographic', ':hover');\r\n\r\n  if (typographicNextItemCountPrevGotoSelectHover) {\r\n    styles += typographicControllerToStyles(typographicNextItemCountPrevGotoSelectHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__count {`;\r\n\r\n  const marginPaginationCount = getResponsiveSetting(settings, 'count_buttons_margin');\r\n\r\n  if (marginPaginationCount) {\r\n    styles += dimensionsControllerToStyles(marginPaginationCount, 'margin');\r\n  }\r\n\r\n  const colorPaginationCount = getResponsiveSetting(settings, 'table_style_pagination_count_text_color');\r\n\r\n  if (colorPaginationCount) {\r\n    styles += colorPropertyStyled(colorPaginationCount, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginationCount = getResponsiveSetting(settings, 'table_style_pagination_count_background_color');\r\n\r\n  if (backgroundColorPaginationCount) {\r\n    styles += colorPropertyStyled(backgroundColorPaginationCount, 'background-color');\r\n  }\r\n\r\n  const paddingPaginationCount = getResponsiveSetting(settings, 'table_style_pagination_padding_count');\r\n\r\n  if (paddingPaginationCount) {\r\n    styles += dimensionsControllerToStyles(paddingPaginationCount);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__count:hover {`;\r\n\r\n  const marginPaginationCountHover = getResponsiveSetting(settings, 'count_buttons_margin', ':hover');\r\n\r\n  if (marginPaginationCountHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginationCountHover, 'margin');\r\n  }\r\n\r\n  const colorPaginationCountHover = getResponsiveSetting(settings, 'table_style_pagination_count_text_color', ':hover');\r\n\r\n  if (colorPaginationCountHover) {\r\n    styles += colorPropertyStyled(colorPaginationCountHover, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginationCountHover = getResponsiveSetting(settings, 'table_style_pagination_count_background_color', ':hover');\r\n\r\n  if (backgroundColorPaginationCountHover) {\r\n    styles += colorPropertyStyled(backgroundColorPaginationCountHover, 'background-color');\r\n  }\r\n\r\n  const paddingPaginationCountHover = getResponsiveSetting(settings, 'table_style_pagination_padding_count', ':hover');\r\n\r\n  if (paddingPaginationCountHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginationCountHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination-pages__item {`;\r\n\r\n  const marginPaginPagesItem = getResponsiveSetting(settings, 'count_button_item_margin');\r\n\r\n  if (marginPaginPagesItem) {\r\n    styles += dimensionsControllerToStyles(marginPaginPagesItem, 'margin');\r\n  }\r\n\r\n  const backgroundColorPaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_count_item_background_color');\r\n\r\n  if (backgroundColorPaginPagesItem) {\r\n    styles += colorPropertyStyled(backgroundColorPaginPagesItem, 'background-color');\r\n  }\r\n\r\n  const borderTypePaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_type');\r\n\r\n  if (borderTypePaginPagesItem) {\r\n    styles += simplePropertyStyled(borderTypePaginPagesItem, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_width');\r\n\r\n  if (borderWidthPaginPagesItem) {\r\n    styles += borderWidthStyled(borderWidthPaginPagesItem);\r\n  }\r\n\r\n  const borderRadiusPaginPagesItem = getResponsiveSetting(settings, 'table_style_count_item_border_radius');\r\n\r\n  if (borderRadiusPaginPagesItem) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginPagesItem, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_color');\r\n\r\n  if (borderColorPaginPagesItem) {\r\n    styles += colorPropertyStyled(borderColorPaginPagesItem, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginPagesItem = getResponsiveSetting(settings, 'pagination_count_item_shadow');\r\n\r\n  if (boxShadowPaginPagesItem) {\r\n    styles += shadowControllerToStyles(boxShadowPaginPagesItem);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination-pages__item:hover {`;\r\n\r\n  const marginPaginPagesItemHover = getResponsiveSetting(settings, 'count_button_item_margin', ':hover');\r\n\r\n  if (marginPaginPagesItemHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginPagesItemHover, 'margin');\r\n  }\r\n\r\n  const backgroundColorPaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_count_item_background_color', ':hover');\r\n\r\n  if (backgroundColorPaginPagesItemHover) {\r\n    styles += colorPropertyStyled(backgroundColorPaginPagesItemHover, 'background-color');\r\n  }\r\n\r\n  const borderTypePaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_type', ':hover');\r\n\r\n  if (borderTypePaginPagesItemHover) {\r\n    styles += simplePropertyStyled(borderTypePaginPagesItemHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_width', ':hover');\r\n\r\n  if (borderWidthPaginPagesItemHover) {\r\n    styles += borderWidthStyled(borderWidthPaginPagesItemHover);\r\n  }\r\n\r\n  const borderRadiusPaginPagesItemHover = getResponsiveSetting(settings, 'table_style_count_item_border_radius', ':hover');\r\n\r\n  if (borderRadiusPaginPagesItemHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginPagesItemHover, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_color', ':hover');\r\n\r\n  if (borderColorPaginPagesItemHover) {\r\n    styles += colorPropertyStyled(borderColorPaginPagesItemHover, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginPagesItemHover = getResponsiveSetting(settings, 'pagination_count_item_shadow', ':hover');\r\n\r\n  if (boxShadowPaginPagesItemHover) {\r\n    styles += shadowControllerToStyles(boxShadowPaginPagesItemHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .active.altrp-pagination-pages__item {`;\r\n\r\n  const colorActivePaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_active_count_text_color');\r\n\r\n  if (colorActivePaginPagesItem) {\r\n    styles += colorPropertyStyled(colorActivePaginPagesItem, 'color');\r\n  }\r\n\r\n  const backgroundColorActivePaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_active_count_item_background_color');\r\n\r\n  if (backgroundColorActivePaginPagesItem) {\r\n    styles += colorPropertyStyled(backgroundColorActivePaginPagesItem, 'background-color');\r\n  }\r\n\r\n  const borderColorActivePaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_active_count_item_border_color');\r\n\r\n  if (borderColorActivePaginPagesItem) {\r\n    styles += colorPropertyStyled(borderColorActivePaginPagesItem, 'border-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .active.altrp-pagination-pages__item:hover {`;\r\n\r\n  const colorActivePaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_active_count_text_color', ':hover');\r\n\r\n  if (colorActivePaginPagesItemHover) {\r\n    styles += colorPropertyStyled(colorActivePaginPagesItemHover, 'color');\r\n  }\r\n\r\n  const backgroundColorActivePaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_active_count_item_background_color', ':hover');\r\n\r\n  if (backgroundColorActivePaginPagesItemHover) {\r\n    styles += colorPropertyStyled(backgroundColorActivePaginPagesItemHover, 'background-color');\r\n  }\r\n\r\n  const borderColorActivePaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_active_count_item_border_color', ':hover');\r\n\r\n  if (borderColorActivePaginPagesItemHover) {\r\n    styles += colorPropertyStyled(borderColorActivePaginPagesItemHover, 'border-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__ellipsis {`;\r\n\r\n  const marginPaginationEllipsis = getResponsiveSetting(settings, 'ellipsis_margin');\r\n\r\n  if (marginPaginationEllipsis) {\r\n    styles += dimensionsControllerToStyles(marginPaginationEllipsis, 'margin');\r\n  }\r\n\r\n  const colorPaginationEllipsis = getResponsiveSetting(settings, 'ellipsis_color');\r\n\r\n  if (colorPaginationEllipsis) {\r\n    styles += colorPropertyStyled(colorPaginationEllipsis, 'color');\r\n  }\r\n\r\n  const typographicPaginationEllipsis = getResponsiveSetting(settings, 'ellipsis_typographic');\r\n\r\n  if (typographicPaginationEllipsis) {\r\n    styles += typographicControllerToStyles(typographicPaginationEllipsis);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__ellipsis:hover {`;\r\n\r\n  const marginPaginationEllipsisHover = getResponsiveSetting(settings, 'ellipsis_margin', ':hover');\r\n\r\n  if (marginPaginationEllipsisHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginationEllipsisHover, 'margin');\r\n  }\r\n\r\n  const colorPaginationEllipsisHover = getResponsiveSetting(settings, 'ellipsis_color', ':hover');\r\n\r\n  if (colorPaginationEllipsisHover) {\r\n    styles += colorPropertyStyled(colorPaginationEllipsisHover, 'color');\r\n  }\r\n\r\n  const typographicPaginationEllipsisHover = getResponsiveSetting(settings, 'ellipsis_typographic', ':hover');\r\n\r\n  if (typographicPaginationEllipsisHover) {\r\n    styles += typographicControllerToStyles(typographicPaginationEllipsisHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__goto-page {`;\r\n\r\n  const marginPaginationGotoPages = getResponsiveSetting(settings, 'goto-page_margin');\r\n\r\n  if (marginPaginationGotoPages) {\r\n    styles += dimensionsControllerToStyles(marginPaginationGotoPages, 'margin');\r\n  }\r\n\r\n  const paddingPaginationGotoPages = getResponsiveSetting(settings, 'page_input_padding');\r\n\r\n  if (paddingPaginationGotoPages) {\r\n    styles += dimensionsControllerToStyles(paddingPaginationGotoPages);\r\n  }\r\n\r\n  const colorPaginationGotoPages = getResponsiveSetting(settings, 'page_input_text_color');\r\n\r\n  if (colorPaginationGotoPages) {\r\n    styles += colorPropertyStyled(colorPaginationGotoPages, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginationGotoPages = getResponsiveSetting(settings, 'page_input_background_color');\r\n\r\n  if (backgroundColorPaginationGotoPages) {\r\n    styles += colorPropertyStyled(backgroundColorPaginationGotoPages, 'background-color');\r\n  }\r\n\r\n  const borderTypePaginationGotoPages = getResponsiveSetting(settings, 'page_input_border_type');\r\n\r\n  if (borderTypePaginationGotoPages) {\r\n    styles += simplePropertyStyled(borderTypePaginationGotoPages, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginationGotoPages = getResponsiveSetting(settings, 'page_input_border_width');\r\n\r\n  if (borderWidthPaginationGotoPages) {\r\n    styles += borderWidthStyled(borderWidthPaginationGotoPages);\r\n  }\r\n\r\n  const borderRadiusPaginationGotoPages = getResponsiveSetting(settings, 'page_input_border_radius');\r\n\r\n  if (borderRadiusPaginationGotoPages) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginationGotoPages, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginationGotoPages = getResponsiveSetting(settings, 'page_input_border_color');\r\n\r\n  if (borderColorPaginationGotoPages) {\r\n    styles += colorPropertyStyled(borderColorPaginationGotoPages, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginationGotoPages = getResponsiveSetting(settings, 'page_input_shadow');\r\n\r\n  if (boxShadowPaginationGotoPages) {\r\n    styles += shadowControllerToStyles(boxShadowPaginationGotoPages);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__goto-page:hover {`;\r\n\r\n  const marginPaginationGotoPagesHover = getResponsiveSetting(settings, 'goto-page_margin', ':hover');\r\n\r\n  if (marginPaginationGotoPagesHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginationGotoPagesHover, 'margin');\r\n  }\r\n\r\n  const paddingPaginationGotoPagesHover = getResponsiveSetting(settings, 'page_input_padding', ':hover');\r\n\r\n  if (paddingPaginationGotoPagesHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginationGotoPagesHover);\r\n  }\r\n\r\n  const colorPaginationGotoPagesHover = getResponsiveSetting(settings, 'page_input_text_color', ':hover');\r\n\r\n  if (colorPaginationGotoPagesHover) {\r\n    styles += colorPropertyStyled(colorPaginationGotoPagesHover, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginationGotoPagesHover = getResponsiveSetting(settings, 'page_input_background_color', ':hover');\r\n\r\n  if (backgroundColorPaginationGotoPagesHover) {\r\n    styles += colorPropertyStyled(backgroundColorPaginationGotoPagesHover, 'background-color');\r\n  }\r\n\r\n  const borderTypePaginationGotoPagesHover = getResponsiveSetting(settings, 'page_input_border_type', ':hover');\r\n\r\n  if (borderTypePaginationGotoPagesHover) {\r\n    styles += simplePropertyStyled(borderTypePaginationGotoPagesHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginationGotoPagesHover = getResponsiveSetting(settings, 'page_input_border_width', ':hover');\r\n\r\n  if (borderWidthPaginationGotoPagesHover) {\r\n    styles += borderWidthStyled(borderWidthPaginationGotoPagesHover);\r\n  }\r\n\r\n  const borderRadiusPaginationGotoPagesHover = getResponsiveSetting(settings, 'page_input_border_radius', ':hover');\r\n\r\n  if (borderRadiusPaginationGotoPagesHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginationGotoPagesHover, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginationGotoPagesHover = getResponsiveSetting(settings, 'page_input_border_color', ':hover');\r\n\r\n  if (borderColorPaginationGotoPagesHover) {\r\n    styles += colorPropertyStyled(borderColorPaginationGotoPagesHover, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginationGotoPagesHover = getResponsiveSetting(settings, 'page_input_shadow', ':hover');\r\n\r\n  if (boxShadowPaginationGotoPagesHover) {\r\n    styles += shadowControllerToStyles(boxShadowPaginationGotoPagesHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__goto-page {`;\r\n\r\n  const typographicPaginPaginGotoPages = getResponsiveSetting(settings, 'table_style_page_input_pagination_typographic');\r\n\r\n  if (typographicPaginPaginGotoPages) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginGotoPages);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__goto-page:hover {`;\r\n\r\n  const typographicPaginPaginGotoPagesHover = getResponsiveSetting(settings, 'table_style_page_input_pagination_typographic', ':hover');\r\n\r\n  if (typographicPaginPaginGotoPagesHover) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginGotoPagesHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size .altrp-field-select2__control {`;\r\n\r\n  const widthPaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_width');\r\n\r\n  if (widthPaginSelectSizeControl) {\r\n    styles += sizeStyled(widthPaginSelectSizeControl, 'width');\r\n  }\r\n\r\n  const paddingPaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_padding');\r\n\r\n  if (paddingPaginSelectSizeControl) {\r\n    styles += dimensionsControllerToStyles(paddingPaginSelectSizeControl);\r\n  }\r\n\r\n  const borderTypePaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_border_type');\r\n\r\n  if (borderTypePaginSelectSizeControl) {\r\n    styles += simplePropertyStyled(borderTypePaginSelectSizeControl, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_border_width');\r\n\r\n  if (borderWidthPaginSelectSizeControl) {\r\n    styles += borderWidthStyled(borderWidthPaginSelectSizeControl);\r\n  }\r\n\r\n  const borderRadiusPaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_border_radius');\r\n\r\n  if (borderRadiusPaginSelectSizeControl) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginSelectSizeControl, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_border_color');\r\n\r\n  if (borderColorPaginSelectSizeControl) {\r\n    styles += colorPropertyStyled(borderColorPaginSelectSizeControl, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_shadow');\r\n\r\n  if (boxShadowPaginSelectSizeControl) {\r\n    styles += shadowControllerToStyles(boxShadowPaginSelectSizeControl);\r\n  }\r\n\r\n  const colorPaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_text_color');\r\n\r\n  if (colorPaginSelectSizeControl) {\r\n    styles += colorPropertyStyled(colorPaginSelectSizeControl, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_background_color');\r\n\r\n  if (backgroundColorPaginSelectSizeControl) {\r\n    styles += colorPropertyStyled(backgroundColorPaginSelectSizeControl, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size .altrp-field-select2__control:hover {`;\r\n\r\n  const widthPaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_width', ':hover');\r\n\r\n  if (widthPaginSelectSizeControlHover) {\r\n    styles += sizeStyled(widthPaginSelectSizeControlHover, 'width');\r\n  }\r\n\r\n  const paddingPaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_padding', ':hover');\r\n\r\n  if (paddingPaginSelectSizeControlHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginSelectSizeControlHover);\r\n  }\r\n\r\n  const borderTypePaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_border_type', ':hover');\r\n\r\n  if (borderTypePaginSelectSizeControlHover) {\r\n    styles += simplePropertyStyled(borderTypePaginSelectSizeControlHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_border_width', ':hover');\r\n\r\n  if (borderWidthPaginSelectSizeControlHover) {\r\n    styles += borderWidthStyled(borderWidthPaginSelectSizeControlHover);\r\n  }\r\n\r\n  const borderRadiusPaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_border_radius', ':hover');\r\n\r\n  if (borderRadiusPaginSelectSizeControlHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginSelectSizeControlHover, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_border_color', ':hover');\r\n\r\n  if (borderColorPaginSelectSizeControlHover) {\r\n    styles += colorPropertyStyled(borderColorPaginSelectSizeControlHover, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_shadow', ':hover');\r\n\r\n  if (boxShadowPaginSelectSizeControlHover) {\r\n    styles += shadowControllerToStyles(boxShadowPaginSelectSizeControlHover);\r\n  }\r\n\r\n  const colorPaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_text_color', ':hover');\r\n\r\n  if (colorPaginSelectSizeControlHover) {\r\n    styles += colorPropertyStyled(colorPaginSelectSizeControlHover, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_background_color', ':hover');\r\n\r\n  if (backgroundColorPaginSelectSizeControlHover) {\r\n    styles += colorPropertyStyled(backgroundColorPaginSelectSizeControlHover, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__select-size {`;\r\n\r\n  const typographicPaginSelectSize = getResponsiveSetting(settings, 'table_style_pagination_select__pagination_typographic');\r\n\r\n  if (typographicPaginSelectSize) {\r\n    styles += typographicControllerToStyles(typographicPaginSelectSize);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__select-size:hover {`;\r\n\r\n  const typographicPaginPaginSelectSizeHover = getResponsiveSetting(settings, 'table_style_pagination_select__pagination_typographic', ':hover');\r\n\r\n  if (typographicPaginPaginSelectSizeHover) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginSelectSizeHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size {`;\r\n\r\n  const marginPaginSelectSize = getResponsiveSetting(settings, 'pagination_select_margin');\r\n\r\n  if (marginPaginSelectSize) {\r\n    styles += dimensionsControllerToStyles(marginPaginSelectSize, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size:hover {`;\r\n\r\n  const marginPaginSelectSizeHover = getResponsiveSetting(settings, 'pagination_select_margin', ':hover');\r\n\r\n  if (marginPaginSelectSizeHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginSelectSizeHover, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--checked svg {`;\r\n\r\n  const marginCheckIconSvg = getResponsiveSetting(settings, 'checked_icon_margin');\r\n\r\n  if (marginCheckIconSvg) {\r\n    styles += dimensionsControllerToStyles(marginCheckIconSvg, 'margin');\r\n  }\r\n\r\n  const sizeCheckIconSvg = getResponsiveSetting(settings, 'checked_size');\r\n\r\n  if (sizeCheckIconSvg) {\r\n    styles += iconSizeStyled(sizeCheckIconSvg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--checked svg:hover {`;\r\n\r\n  const marginCheckIconSvgHover = getResponsiveSetting(settings, 'checked_icon_margin', ':hover');\r\n\r\n  if (marginCheckIconSvgHover) {\r\n    styles += dimensionsControllerToStyles(marginCheckIconSvgHover, 'margin');\r\n  }\r\n\r\n  const sizeCheckIconSvgHover = getResponsiveSetting(settings, 'checked_size', ':hover');\r\n\r\n  if (sizeCheckIconSvgHover) {\r\n    styles += iconSizeStyled(sizeCheckIconSvgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--unchecked svg {`;\r\n\r\n  const marginUncheckIconSvg = getResponsiveSetting(settings, 'unchecked_icon_margin');\r\n\r\n  if (marginUncheckIconSvg) {\r\n    styles += dimensionsControllerToStyles(marginUncheckIconSvg, 'margin');\r\n  }\r\n\r\n  const sizeUncheckIconSvg = getResponsiveSetting(settings, 'unchecked_size');\r\n\r\n  if (sizeUncheckIconSvg) {\r\n    styles += iconSizeStyled(sizeUncheckIconSvg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--unchecked svg:hover {`;\r\n\r\n  const marginUncheckIconSvgHover = getResponsiveSetting(settings, 'unchecked_icon_margin', ':hover');\r\n\r\n  if (marginUncheckIconSvgHover) {\r\n    styles += dimensionsControllerToStyles(marginUncheckIconSvgHover, 'margin');\r\n  }\r\n\r\n  const sizeUncheckIconSvgHover = getResponsiveSetting(settings, 'unchecked_size', ':hover');\r\n\r\n  if (sizeUncheckIconSvgHover) {\r\n    styles += iconSizeStyled(sizeUncheckIconSvgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--indeterminate svg {`;\r\n\r\n  const marginCheckIconIndeterminateSvg = getResponsiveSetting(settings, 'indeterminate_icon_margin');\r\n\r\n  if (marginCheckIconIndeterminateSvg) {\r\n    styles += dimensionsControllerToStyles(marginCheckIconIndeterminateSvg, 'margin');\r\n  }\r\n\r\n  const sizeCheckIconIndeterminateSvg = getResponsiveSetting(settings, 'indeterminate_size');\r\n\r\n  if (sizeCheckIconIndeterminateSvg) {\r\n    styles += iconSizeStyled(sizeCheckIconIndeterminateSvg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--indeterminate svg:hover {`;\r\n\r\n  const marginCheckIconIndeterminateSvgHover = getResponsiveSetting(settings, 'indeterminate_icon_margin', ':hover');\r\n\r\n  if (marginCheckIconIndeterminateSvgHover) {\r\n    styles += dimensionsControllerToStyles(marginCheckIconIndeterminateSvgHover, 'margin');\r\n  }\r\n\r\n  const sizeCheckIconIndeterminateSvgHover = getResponsiveSetting(settings, 'indeterminate_size', ':hover');\r\n\r\n  if (sizeCheckIconIndeterminateSvgHover) {\r\n    styles += iconSizeStyled(sizeCheckIconIndeterminateSvgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--checked path {`;\r\n\r\n  const iconFillCheckIconCheckedPath = getResponsiveSetting(settings, 'checked_icon_color');\r\n\r\n  if (iconFillCheckIconCheckedPath) {\r\n    styles += colorPropertyStyled(iconFillCheckIconCheckedPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--checked:hover path {`;\r\n\r\n  const iconFillCheckIconCheckedPathHover = getResponsiveSetting(settings, 'checked_icon_color', ':hover');\r\n\r\n  if (iconFillCheckIconCheckedPathHover) {\r\n    styles += colorPropertyStyled(iconFillCheckIconCheckedPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--unchecked path {`;\r\n\r\n  const iconFillCheckIconUncheckedPath = getResponsiveSetting(settings, 'unchecked_icon_color');\r\n\r\n  if (iconFillCheckIconUncheckedPath) {\r\n    styles += colorPropertyStyled(iconFillCheckIconUncheckedPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--unchecked:hover path {`;\r\n\r\n  const iconFillCheckIconUncheckedPathHover = getResponsiveSetting(settings, 'unchecked_icon_color', ':hover');\r\n\r\n  if (iconFillCheckIconUncheckedPathHover) {\r\n    styles += colorPropertyStyled(iconFillCheckIconUncheckedPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--indeterminate path {`;\r\n\r\n  const iconFillCheckIconIndeterminatePath = getResponsiveSetting(settings, 'indeterminate_icon_color');\r\n\r\n  if (iconFillCheckIconIndeterminatePath) {\r\n    styles += colorPropertyStyled(iconFillCheckIconIndeterminatePath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--indeterminate:hover path {`;\r\n\r\n  const iconFillCheckIconIndeterminatePathHover = getResponsiveSetting(settings, 'indeterminate_icon_color', ':hover');\r\n\r\n  if (iconFillCheckIconIndeterminatePathHover) {\r\n    styles += colorPropertyStyled(iconFillCheckIconIndeterminatePathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table__resizer {`;\r\n\r\n  const sliderSizeTableResizer = getResponsiveSetting(settings, 'resize_slider_size');\r\n\r\n  if (sliderSizeTableResizer) {\r\n    styles += sizeStyled(sliderSizeTableResizer, 'width');\r\n  }\r\n\r\n  const backgroundColorTableResizer = getResponsiveSetting(settings, 'resize_slider_color');\r\n\r\n  if (backgroundColorTableResizer) {\r\n    styles += colorPropertyStyled(backgroundColorTableResizer, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table__resizer:hover {`;\r\n\r\n  const sliderSizeTableResizerHover = getResponsiveSetting(settings, 'resize_slider_size', ':hover');\r\n\r\n  if (sliderSizeTableResizerHover) {\r\n    styles += sizeStyled(sliderSizeTableResizerHover, 'width');\r\n  }\r\n\r\n  const backgroundColorTableResizerHover = getResponsiveSetting(settings, 'resize_slider_color', ':hover');\r\n\r\n  if (backgroundColorTableResizerHover) {\r\n    styles += colorPropertyStyled(backgroundColorTableResizerHover, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table__resizer.altrp-table__resizer_resizing {`;\r\n\r\n  const backgroundColorTableResizerResizing = getResponsiveSetting(settings, 'active_resize_slider_color');\r\n\r\n  if (backgroundColorTableResizerResizing) {\r\n    styles += colorPropertyStyled(backgroundColorTableResizerResizing, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table__resizer.altrp-table__resizer_resizing:hover {`;\r\n\r\n  const backgroundColorTableResizerResizingHover = getResponsiveSetting(settings, 'active_resize_slider_color', ':hover');\r\n\r\n  if (backgroundColorTableResizerResizingHover) {\r\n    styles += colorPropertyStyled(backgroundColorTableResizerResizingHover, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-image {`;\r\n\r\n  const filtersImage = getResponsiveSetting(settings, 'filter_style_border_shadow');\r\n\r\n  if (filtersImage) {\r\n    styles += filtersControllerToStyles(filtersImage);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-image:hover {`;\r\n\r\n  const filtersImageHover = getResponsiveSetting(settings, 'filter_style_border_shadow', ':hover');\r\n\r\n  if (filtersImageHover) {\r\n    styles += filtersControllerToStyles(filtersImageHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  return styles;\r\n}\r\n","import {getResponsiveSetting} from '../../helpers';\r\nimport {\r\n  simplePropertyStyled,\r\n  borderWidthStyled,\r\n  colorPropertyStyled,\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  sizeStyled,\r\n  shadowControllerToStyles, sliderStyled, colorStyled,\r\n} from \"../../helpers/styles\";\r\n\r\nconst getTabsStyles = (settings, id) => {\r\n  let styles = \"\";\r\n\r\n  let justifyContent, backgroundColor;\r\n  let color, boxShadow, padding, borderType, borderWidth, borderColor, borderRadius, typographic;\r\n  let fill, background, fontSize, marginBottom, marginRight, marginLeft, marginTop;\r\n\r\n  const parentClass = `.altrp-element${id}`;\r\n\r\n  styles += `${parentClass} .altrp-tabs .bp3-tab-list  {`;\r\n\r\n  //Получаем значения justify-content из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    justifyContent = getResponsiveSetting(settings, 'alignment_tabs');\r\n  }\r\n\r\n  if (justifyContent) {\r\n    styles += simplePropertyStyled(justifyContent, 'justify-content');\r\n  }\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'background_tab_style');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tabs .bp3-tab-list:hover {`;\r\n\r\n  //Получаем значения justify-content из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    justifyContent = getResponsiveSetting(settings, 'alignment_tabs', ':hover');\r\n  }\r\n\r\n  if (justifyContent) {\r\n    styles += simplePropertyStyled(justifyContent, 'justify-content');\r\n  }\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'background_tab_style', ':hover');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tabs.altrp-tabs .bp3-tab p {`;\r\n  //Получаем значения color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    color = getResponsiveSetting(settings, 'background_text_color_tab_style');\r\n  }\r\n\r\n  if (color) {\r\n    styles += colorPropertyStyled(color, 'color');\r\n  }\r\n  styles += \"}\";\r\n\r\n  styles += `${parentClass} .altrp-tabs.altrp-tabs-without-animation.altrp-tabs-horizontal .bp3-tab[aria-selected=\"true\"] {`;\r\n  //Получаем значения color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    color = getResponsiveSetting(settings, 'indicator_color');\r\n  }\r\n\r\n  if (color) {\r\n    if (color) {\r\n      if (color.color) {\r\n        styles += `box-shadow: inset 0 -3px 0 ${color.color};`;\r\n      }\r\n    }\r\n  }\r\n  styles += \"}\";\r\n\r\n  styles += `${parentClass} .altrp-tabs.altrp-tabs-without-animation.altrp-tabs-vertical .bp3-tab[aria-selected=\"true\"] {`;\r\n  //Получаем значения color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    color = getResponsiveSetting(settings, 'indicator_color');\r\n  }\r\n\r\n  if (color) {\r\n    if (color) {\r\n      if (color.color) {\r\n        styles += colorStyled(color, \"background-color\");\r\n      }\r\n    }\r\n  }\r\n  styles += \"}\";\r\n\r\n  styles += `${parentClass} .altrp-tabs.altrp-tabs .bp3-tab.active p {`;\r\n  //Получаем значения color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    color = getResponsiveSetting(settings, 'background_text_color_tab_style', \".active\");\r\n  }\r\n\r\n  if (color) {\r\n    styles += colorPropertyStyled(color, 'color');\r\n  }\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `${parentClass} .altrp-tabs  .bp3-tab.bp3-tab.bp3-tab {`;\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'background_type_tab_style');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  //Получаем значения box-shadow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    boxShadow = getResponsiveSetting(settings, 'box_shadow_tab_style');\r\n  }\r\n\r\n  if (boxShadow) {\r\n    styles += shadowControllerToStyles(boxShadow);\r\n  }\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'padding_tab_style');\r\n  }\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderType = getResponsiveSetting(settings, 'border_type_tab_style');\r\n  }\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'border_width_tab_style');\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'border_color_tab_style');\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'border_radius_tab_style');\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += sizeStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения typographic из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    typographic = getResponsiveSetting(settings, 'typographic_tab_style');\r\n  }\r\n\r\n  if (typographic) {\r\n    styles += typographicControllerToStyles(typographic);\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tabs  .bp3-tab.bp3-tab.bp3-tab.active {`;\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'background_type_tab_style', \".active\");\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  //Получаем значения box-shadow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    boxShadow = getResponsiveSetting(settings, 'box_shadow_tab_style', \".active\");\r\n  }\r\n\r\n  if (boxShadow) {\r\n    styles += shadowControllerToStyles(boxShadow);\r\n  }\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'padding_tab_style', \".active\");\r\n  }\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderType = getResponsiveSetting(settings, 'border_type_tab_style', \".active\");\r\n  }\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'border_width_tab_style', \".active\");\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'border_color_tab_style', \".active\");\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'border_radius_tab_style', \".active\");\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += sizeStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения typographic из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    typographic = getResponsiveSetting(settings, 'typographic_tab_style', \".active\");\r\n  }\r\n\r\n  if (typographic) {\r\n    styles += typographicControllerToStyles(typographic);\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tabs.altrp-tabs  .bp3-tab:hover p {`;\r\n  //Получаем значения color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    color = getResponsiveSetting(settings, 'background_text_color_tab_style', \":hover\");\r\n  }\r\n\r\n  if (color) {\r\n    styles += colorPropertyStyled(color, 'color');\r\n  }\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `${parentClass} .altrp-tabs .bp3-tab.bp3-tab.bp3-tab:hover {`;\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'background_type_tab_style', ':hover');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  //Получаем значения box-shadow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    boxShadow = getResponsiveSetting(settings, 'box_shadow_tab_style', ':hover');\r\n  }\r\n\r\n  if (boxShadow) {\r\n    styles += shadowControllerToStyles(boxShadow);\r\n  }\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'padding_tab_style', ':hover');\r\n  }\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderType = getResponsiveSetting(settings, 'border_type_tab_style', ':hover');\r\n  }\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'border_width_tab_style', ':hover');\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'border_color_tab_style', ':hover');\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'border_radius_tab_style', ':hover');\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += sizeStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения typographic из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    typographic = getResponsiveSetting(settings, 'typographic_tab_style', ':hover');\r\n  }\r\n\r\n  if (typographic) {\r\n    styles += typographicControllerToStyles(typographic);\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tab-content {`;\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'background_content_style');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'padding_content_style');\r\n  }\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderType = getResponsiveSetting(settings, 'border_type_content_style');\r\n  }\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'border_width_content_style');\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'border_color_content_style');\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'border_radius_content_style');\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += simplePropertyStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tab-content:hover {`;\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'background_content_style', ':hover');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'padding_content_style', ':hover');\r\n  }\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderType = getResponsiveSetting(settings, 'border_type_content_style', ':hover');\r\n  }\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'border_width_content_style', ':hover');\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'border_color_content_style', ':hover');\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'border_radius_content_style', ':hover');\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += simplePropertyStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tab-content div {`;\r\n\r\n  //Получаем значения color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    color = getResponsiveSetting(settings, 'text_color_content_style');\r\n  }\r\n\r\n  if (color) {\r\n    styles += colorPropertyStyled(color, 'color');\r\n  }\r\n\r\n  //Получаем значения typographic из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    typographic = getResponsiveSetting(settings, 'typographic_content_style');\r\n  }\r\n\r\n  if (typographic) {\r\n    styles += typographicControllerToStyles(typographic);\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tab-content div:hover {`;\r\n\r\n  //Получаем значения color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    color = getResponsiveSetting(settings, 'text_color_content_style', ':hover');\r\n  }\r\n\r\n  if (color) {\r\n    styles += colorPropertyStyled(color, 'color');\r\n  }\r\n\r\n  //Получаем значения typographic из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    typographic = getResponsiveSetting(settings, 'typographic_content_style', ':hover');\r\n  }\r\n\r\n  if (typographic) {\r\n    styles += typographicControllerToStyles(typographic);\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  const i_size = getResponsiveSetting(settings, 'i_size')\r\n  if(i_size){\r\n    styles += `${parentClass} .altrp-tab-btn-icon img, ${parentClass} .altrp-tab-btn-icon svg{`;\r\n\r\n    styles += `width:${sliderStyled(i_size)};height:${sliderStyled(i_size)};`\r\n\r\n    styles += \"} \";\r\n\r\n  }\r\n  styles += `${parentClass} .altrp-tab-btn-icon svg path {`;\r\n\r\n  //Получаем значения fill из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    fill = getResponsiveSetting(settings, 'color_icon_style');\r\n  }\r\n\r\n  if (fill) {\r\n    styles += colorPropertyStyled(fill, 'fill');\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tab-btn-icon:hover svg path {`;\r\n\r\n  //Получаем значения fill из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    fill = getResponsiveSetting(settings, 'color_icon_style', ':hover');\r\n  }\r\n\r\n  if (fill) {\r\n    styles += colorPropertyStyled(fill, 'fill');\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n\r\n  styles += `${parentClass} .altrp-tab-btn-column {`;\r\n\r\n  //Получаем значения margin-right в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    marginRight = getResponsiveSetting(settings, 'spacing_column_tabs');\r\n  }\r\n\r\n  if (marginRight) {\r\n    styles += sizeStyled(marginRight, 'margin-right');\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tab-btn-column:hover {`;\r\n\r\n  //Получаем значения margin-right в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    marginRight = getResponsiveSetting(settings, 'spacing_column_tabs', ':hover');\r\n  }\r\n\r\n  if (marginRight) {\r\n    styles += sizeStyled(marginRight, 'margin-right');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-tab-btn-row {`;\r\n\r\n  //Получаем значения margin-bottom в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    marginBottom = getResponsiveSetting(settings, 'spacing_column_tabs');\r\n  }\r\n\r\n  if (marginBottom) {\r\n    styles += sizeStyled(marginBottom, 'margin-bottom');\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tab-btn-row:hover {`;\r\n\r\n  //Получаем значения margin-bottom в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    marginBottom = getResponsiveSetting(settings, 'spacing_column_tabs', ':hover');\r\n  }\r\n\r\n  if (marginBottom) {\r\n    styles += sizeStyled(marginBottom, 'margin-bottom');\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tab-vertical.bp3-tab-panel {`;\r\n\r\n  //Получаем значения margin-right в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    marginRight = getResponsiveSetting(settings, 'spacing_content_tabs');\r\n  }\r\n\r\n  if (marginRight) {\r\n    styles += sizeStyled(marginRight, 'margin-left');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-tab-vertical.bp3-tab {`;\r\n\r\n  //Получаем значения margin-right в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    marginRight = getResponsiveSetting(settings, 'spacing_column_tabs');\r\n  }\r\n\r\n  if (marginRight) {\r\n    styles += sizeStyled(marginRight, 'margin-bottom');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-tab-horizontal.bp3-tab-panel {`;\r\n\r\n  //Получаем значения margin-right в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    marginRight = getResponsiveSetting(settings, 'spacing_content_tabs');\r\n  }\r\n\r\n  if (marginRight) {\r\n    styles += sizeStyled(marginRight, 'margin-top');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-tab-horizontal.bp3-tab {`;\r\n\r\n  //Получаем значения margin-right в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    marginRight = getResponsiveSetting(settings, 'spacing_column_tabs');\r\n  }\r\n\r\n  if (marginRight) {\r\n    styles += sizeStyled(marginRight, 'margin-right');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .bp3-tab-indicator-wrapper {`;\r\n\r\n  styles += `} `;\r\n\r\n\r\n  styles += `${parentClass} .bp3-tab-indicator.bp3-tab-indicator.bp3-tab-indicator.bp3-tab-indicator {`;\r\n\r\n  let indicatorColor = getResponsiveSetting(settings, 'indicator_color')\r\n\r\n  if (indicatorColor && indicatorColor.color) {\r\n    styles += colorPropertyStyled(indicatorColor, \"background-color\",);\r\n  }\r\n  styles += `} `;\r\n\r\n  if (indicatorColor && indicatorColor.color) {\r\n    styles += `${parentClass} .altrp-tabs-horizontal .bp3-tab-indicator-wrapper ~ .altrp-tab-btn.active {`;\r\n    styles += `box-shadow: inset 0 -3px ${indicatorColor.color};`\r\n    styles += `} `;\r\n  }\r\n  styles += `${parentClass} .altrp-tab {`;\r\n\r\n  let contentBackgroundColor,\r\n    contentPadding,\r\n    contentBorderType,\r\n    contentBorderWidth,\r\n    contentBorderColor,\r\n    contentBorderRadius;\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    contentBackgroundColor = getResponsiveSetting(settings, 'background_content_style');\r\n  }\r\n\r\n  if (contentBackgroundColor) {\r\n    styles += colorPropertyStyled(contentBackgroundColor, 'background-color');\r\n  }\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    contentPadding = getResponsiveSetting(settings, 'padding_content_style');\r\n  }\r\n\r\n  if (contentPadding) {\r\n    styles += dimensionsControllerToStyles(contentPadding);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    contentBorderType = getResponsiveSetting(settings, 'border_type_content_style');\r\n  }\r\n\r\n  if (contentBorderType) {\r\n    styles += simplePropertyStyled(contentBorderType, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    contentBorderWidth = getResponsiveSetting(settings, 'border_width_content_style');\r\n  }\r\n\r\n  if (contentBorderWidth) {\r\n    styles += borderWidthStyled(contentBorderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    contentBorderColor = getResponsiveSetting(settings, 'border_color_content_style');\r\n  }\r\n\r\n  if (contentBorderColor) {\r\n    styles += colorPropertyStyled(contentBorderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    contentBorderRadius = getResponsiveSetting(settings, 'border_radius_content_style');\r\n  }\r\n\r\n  if (contentBorderRadius) {\r\n    styles += `border-radius:${sliderStyled(contentBorderRadius)}`;\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  return styles;\r\n}\r\n\r\nexport default getTabsStyles;\r\n","import {\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  simplePropertyStyled,\r\n  colorPropertyStyled,\r\n  borderWidthStyled,\r\n  borderRadiusStyled,\r\n  columnGapStyled,\r\n  opacityStyled,\r\n  sliderStyled,\r\n  shadowControllerToStyles,\r\n  textShadowControllerToStyles,\r\n  dimensionsStyled,\r\n} from '../../helpers/styles';\r\nimport { getResponsiveSetting } from '../../helpers';\r\n\r\n/**\r\n * Преобразует объект стилей, который задается в виджете Text в строку css для вставки в GlobalStyles\r\n * @param {{}} settings\r\n * @param {string} id\r\n * @return {string}\r\n */\r\n\r\nexport function getTextStyles(settings, id) {\r\n  let styles = '';\r\n\r\n  if (settings === undefined) {\r\n    return styles;\r\n  }\r\n\r\n  const parentClass = `.altrp-element${id}`;\r\n\r\n  styles += `${parentClass} .altrp-text {`;\r\n\r\n  const columnCount = getResponsiveSetting(settings, 'text_style_column-count');\r\n\r\n  if (columnCount) {\r\n    styles += simplePropertyStyled(columnCount, 'column-count');\r\n  }\r\n\r\n  const columnGap = getResponsiveSetting(settings, 'text_style_column-gap');\r\n\r\n  if (columnGap) {\r\n    styles += columnGapStyled(columnGap);\r\n  }\r\n\r\n  const padding = getResponsiveSetting(settings, 'text_style_position_padding');\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  const margin = getResponsiveSetting(settings, 'text_style_position_margin');\r\n\r\n  if (margin) {\r\n    styles += dimensionsControllerToStyles(margin, 'margin');\r\n  }\r\n\r\n  const zIndex = getResponsiveSetting(settings, 'text_position_z_index');\r\n\r\n  if (zIndex) {\r\n    styles += simplePropertyStyled(zIndex, 'z-index');\r\n  }\r\n\r\n  const backgroundColor = getResponsiveSetting(settings, 'text_style_background_color');\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  const opacity = getResponsiveSetting(settings, 'text_style_background_opacity');\r\n\r\n  if (opacity) {\r\n    styles += opacityStyled(opacity, 'opacity');\r\n  }\r\n\r\n  const typographic = getResponsiveSetting(settings, 'text_style_font_typographic');\r\n\r\n  if (typographic) {\r\n    styles += typographicControllerToStyles(typographic);\r\n  }\r\n\r\n  const color = getResponsiveSetting(settings, 'text_style_font_color');\r\n\r\n  if (color) {\r\n    styles += colorPropertyStyled(color, 'color');\r\n  }\r\n\r\n  const borderStyle = getResponsiveSetting(settings, 'text_style_border_type');\r\n\r\n  if (borderStyle) {\r\n    styles += simplePropertyStyled(borderStyle, 'border-style');\r\n  }\r\n\r\n  const borderWidth = getResponsiveSetting(settings, 'text_style_border_width');\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  const borderColor = getResponsiveSetting(settings, 'text_style_border_color');\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  const borderRadius = getResponsiveSetting(settings, 'text_style_border_radius');\r\n\r\n  if (borderRadius) {\r\n    styles += borderRadiusStyled(borderRadius);\r\n  }\r\n\r\n  styles += `} `;\r\n  //hover\r\n\r\n  styles+=`${parentClass} .altrp-text p {`\r\n\r\n  const paragraphMargin = getResponsiveSetting(settings, 'text_paragraph_margin');\r\n\r\n  if (paragraphMargin) {\r\n    styles += dimensionsControllerToStyles(paragraphMargin, 'margin');\r\n  }\r\n\r\n  const textIndent = getResponsiveSetting(settings,\"text_paragraph_indent\");\r\n\r\n  if (textIndent){\r\n    styles+=`text-indent:${sliderStyled(textIndent)};`;\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles+=`${parentClass} .altrp-text blockquote {`\r\n\r\n  const blockquoteMargin = getResponsiveSetting(settings, 'text_blockquote_margin');\r\n\r\n  if (blockquoteMargin) {\r\n    styles += dimensionsControllerToStyles(blockquoteMargin, 'margin');\r\n  }\r\n\r\n  const blockquotePadding = getResponsiveSetting(settings, 'text_blockquote_padding');\r\n\r\n  if (blockquotePadding) {\r\n    styles += dimensionsControllerToStyles(blockquotePadding, 'padding');\r\n  }\r\n\r\n  const blockquoteBackgroundColor = getResponsiveSetting(settings, 'text_blockquote_background_color');\r\n\r\n  if (blockquoteBackgroundColor) {\r\n    styles += colorPropertyStyled(blockquoteBackgroundColor, 'background-color');\r\n  }\r\n\r\n  const blockquoteBorderStyle = getResponsiveSetting(settings, 'text_blockquote_border_type');\r\n\r\n  if (blockquoteBorderStyle) {\r\n    styles += simplePropertyStyled(blockquoteBorderStyle, 'border-style');\r\n  }\r\n\r\n  const blockquoteBorderWidth = getResponsiveSetting(settings, 'text_blockquote_border_width');\r\n\r\n  if (blockquoteBorderWidth) {\r\n    styles += borderWidthStyled(blockquoteBorderWidth);\r\n  }\r\n\r\n  const blockquoteBorderColor = getResponsiveSetting(settings, 'text_blockquote_border_color');\r\n\r\n  if (blockquoteBorderColor) {\r\n    styles += colorPropertyStyled(blockquoteBorderColor, 'border-color');\r\n  }\r\n\r\n  const blockquoteBorderRadius = getResponsiveSetting(settings, 'text_blockquote_border_radius');\r\n\r\n  if (blockquoteBorderRadius) {\r\n    styles += borderRadiusStyled(blockquoteBorderRadius);\r\n  }\r\n\r\n  const blockquoteBoxShadow = getResponsiveSetting(\r\n    settings,\r\n    \"text_blockquote_box_shadow\"\r\n  );\r\n\r\n  if (blockquoteBoxShadow) {\r\n    styles += shadowControllerToStyles(blockquoteBoxShadow);\r\n  }\r\n\r\n  const blockquoteTypographic = getResponsiveSetting(settings, 'text_blockquote_font_typographic');\r\n\r\n  if (blockquoteTypographic) {\r\n    styles += typographicControllerToStyles(blockquoteTypographic);\r\n  }\r\n\r\n\r\n  const blockquoteTextShadow = getResponsiveSetting(\r\n    settings,\r\n    \"text_blockquote_text_shadow\"\r\n  );\r\n\r\n  if (blockquoteTextShadow) {\r\n    styles += textShadowControllerToStyles(blockquoteTextShadow);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-text table {`\r\n\r\n  const tableMargin = getResponsiveSetting(settings, 'text_table_margin');\r\n\r\n  if (tableMargin) {\r\n    styles += dimensionsControllerToStyles(tableMargin, 'margin');\r\n  }\r\n\r\n  const tableBackgroundColor = getResponsiveSetting(settings, 'text_table_background_color');\r\n\r\n  if (tableBackgroundColor) {\r\n    styles += colorPropertyStyled(tableBackgroundColor, 'background-color');\r\n  }\r\n\r\n  const tableBorderStyle = getResponsiveSetting(settings, 'text_table_border_type');\r\n\r\n  if (tableBorderStyle) {\r\n    styles += simplePropertyStyled(tableBorderStyle, 'border-style',\"!important\");\r\n  }\r\n\r\n  const tableBorderWidth = getResponsiveSetting(settings, 'text_table_border_width');\r\n\r\n  if (tableBorderWidth) {\r\n    styles += borderWidthStyled(tableBorderWidth,\"!important\");\r\n  }\r\n\r\n  const tableBorderColor = getResponsiveSetting(settings, 'text_table_border_color');\r\n\r\n  if (tableBorderColor) {\r\n    styles += colorPropertyStyled(tableBorderColor, 'border-color',\"!important\");\r\n  }\r\n\r\n  // const tableBorderRadius = getResponsiveSetting(settings, 'text_table_border_radius');\r\n\r\n  // if (tableBorderRadius) {\r\n  //   styles += borderRadiusStyled(tableBorderRadius);\r\n  // }\r\n\r\n  const tableOddRowsColor = getResponsiveSetting(settings,\"text_table_odd_rows_color\");\r\n\r\n  if(tableOddRowsColor){\r\n    styles+=`tr:nth-child(odd) {${colorPropertyStyled(tableOddRowsColor,\"background\")}}`\r\n  }\r\n\r\n  styles+= \"th,td {\";\r\n\r\n  const tableCellsPadding = getResponsiveSetting(settings, 'text_table_padding');\r\n\r\n  if (tableCellsPadding) {\r\n    styles += dimensionsStyled(tableCellsPadding, 'padding',\"!important\");\r\n  }\r\n\r\n  const tableCellsBorderStyle = getResponsiveSetting(settings, 'text_table_cells_border_type');\r\n\r\n  if (tableCellsBorderStyle) {\r\n    styles += simplePropertyStyled(tableCellsBorderStyle, 'border-style',\"!important\");\r\n  }\r\n\r\n  const tableCellsBorderWidth = getResponsiveSetting(settings, 'text_table_cells_border_width');\r\n\r\n  if (tableCellsBorderWidth) {\r\n    styles += borderWidthStyled(tableCellsBorderWidth,\"!important\");\r\n  }\r\n\r\n  const tableCellsBorderColor = getResponsiveSetting(settings, 'text_table_cells_border_color');\r\n\r\n  if (tableCellsBorderColor) {\r\n    styles += colorPropertyStyled(tableCellsBorderColor, 'border-color',\"!important\");\r\n  }\r\n\r\n  // const tableCellsBorderRadius = getResponsiveSetting(settings, 'text_table_cells_border_radius');\r\n\r\n  // if (tableCellsBorderRadius) {\r\n  //   styles += borderRadiusStyled(tableCellsBorderRadius);\r\n  // }\r\n\r\n  const tableCellsTypographic = getResponsiveSetting(settings, 'text_table_cells_font_typographic');\r\n\r\n  if (tableCellsTypographic) {\r\n    styles += typographicControllerToStyles(tableCellsTypographic);\r\n  }\r\n\r\n\r\n  const tableCellsTextShadow = getResponsiveSetting(\r\n    settings,\r\n    \"text_table_cells_text_shadow\"\r\n  );\r\n\r\n  if (tableCellsTextShadow) {\r\n    styles += textShadowControllerToStyles(tableCellsTextShadow);\r\n  }\r\n\r\n  styles+=\"}\"\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-text a {`;\r\n\r\n  const linkTypographic = getResponsiveSetting(settings, 'text_link_font_typographic');\r\n\r\n  if (linkTypographic) {\r\n    styles += typographicControllerToStyles(linkTypographic);\r\n  }\r\n\r\n  const linkTextShadow = getResponsiveSetting(\r\n    settings,\r\n    \"text_link_text_shadow\"\r\n  );\r\n\r\n  if (linkTextShadow) {\r\n    styles += textShadowControllerToStyles(linkTextShadow);\r\n  }\r\n  //\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-text ol {`;\r\n\r\n  const numberedListMargin = getResponsiveSetting(settings, 'text_numbered_list_margin');\r\n\r\n  if (numberedListMargin) {\r\n    styles += dimensionsControllerToStyles(numberedListMargin, 'margin');\r\n  }\r\n\r\n  const numberedListItemMargin = getResponsiveSetting(settings, 'text_numbered_list_item_margin');\r\n\r\n  if (numberedListItemMargin) {\r\n    styles += `li{ ${dimensionsControllerToStyles(numberedListItemMargin, 'margin')}}`;\r\n  }\r\n\r\n  const numberedListStyle = getResponsiveSetting(settings, 'text_numbered_list_style_type');\r\n\r\n  if (numberedListStyle) {\r\n    styles += simplePropertyStyled(numberedListStyle, 'list-style-type');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-text ul {`;\r\n\r\n  const unorderedListMargin = getResponsiveSetting(settings, 'text_unordered_list_margin');\r\n\r\n  if (unorderedListMargin) {\r\n    styles += dimensionsControllerToStyles(unorderedListMargin, 'margin');\r\n  }\r\n\r\n  const unorderedListItemMargin = getResponsiveSetting(settings, 'text_unordered_list_item_margin');\r\n\r\n  if (unorderedListItemMargin) {\r\n    styles += `li{ ${dimensionsControllerToStyles(unorderedListItemMargin, 'margin')}}`;\r\n  }\r\n\r\n  const unorderedListStyle = getResponsiveSetting(settings, 'text_unordered_list_style_type');\r\n\r\n  if (unorderedListStyle) {\r\n    styles += simplePropertyStyled(unorderedListStyle, 'list-style-type');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-text img {`;\r\n\r\n  styles += `max-width: 100%; `\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .ck.ck-editor__editable_inline {`;\r\n\r\n  styles += `padding: 0; `\r\n\r\n  styles += `} `;\r\n\r\n\r\n  return styles;\r\n}\r\n","const FRONT_DEFAULT_AREAS = [\r\n  'content', 'footer', 'header', 'popups',\r\n];\r\nexport default  function getRouteStyles(areas){\r\n  if(! areas || !_.isArray(areas)){\r\n    return '';\r\n  }\r\n  let styles = `\r\n.route-content {\r\n  min-height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n}`\r\n\r\n  areas = areas.filter(area=>FRONT_DEFAULT_AREAS.indexOf(area.id) === -1)\r\n  if(! areas.length){\r\n    return styles;\r\n  }\r\n  styles += `.route-content.route-content{`;\r\n\r\n  styles += 'display:grid;grid-template-rows:auto 1fr auto;'\r\n  let columnsGrid = '';\r\n  let rightSidebar = areas.find(area=>area.settings.area_type === 'sidebar'\r\n    && area.settings.sidebar_location === 'right');\r\n  let leftSidebar = areas.find(area=>area.settings.area_type === 'sidebar'\r\n    && area.settings.sidebar_location === 'left');\r\n  columnsGrid += leftSidebar ? `${leftSidebar.settings.sidebar_width}` : '0px';\r\n  columnsGrid += ` calc(100% - ${leftSidebar ? `${leftSidebar.settings.sidebar_width}` : '0px'} - ${rightSidebar ? `${rightSidebar.settings.sidebar_width}` : '0px'}) `;\r\n  columnsGrid += rightSidebar ? `${rightSidebar.settings.sidebar_width}` : '0px';\r\n\r\n  let contentRow = '';\r\n  contentRow = leftSidebar ? `left-sidebar content` : `content content`;\r\n  contentRow += rightSidebar ? ` right-sidebar` : ` content`;\r\n\r\n  styles += `grid-template-columns:${columnsGrid};grid-template-areas:\r\n    '${_.get(leftSidebar, 'settings.sidebar_type') === 'app_sidebar' ? 'left-sidebar' : 'header'} header ${_.get(rightSidebar, 'settings.sidebar_type') === 'app_sidebar' ? 'right-sidebar' : 'header'}'\r\n    '${contentRow}'\r\n    '${_.get(leftSidebar, 'settings.sidebar_type') === 'app_sidebar' ? 'left-sidebar' : 'footer'} footer ${_.get(rightSidebar, 'settings.sidebar_type') === 'app_sidebar' ? 'right-sidebar' :'footer'}';\r\n    `\r\n\r\n  styles += '}'\r\n  styles += '& .app-area_sidebar-location-left{grid-area:left-sidebar;overflow:hidden;}'\r\n  styles += '& .app-area_sidebar-location-right{grid-area:right-sidebar;overflow:hidden;}'\r\n  styles += '& .app-area_header{grid-area:header;}'\r\n  styles += '& .app-area_footer{grid-area:footer;}'\r\n  styles += '& .app-area_content{grid-area:content;}'\r\n  styles += '& .altrp-section.altrp-section--full-width,& .altrp-section.altrp-section--boxed{max-width:100%;} & .sections-wrapper{max-width: 100%;width: 100%;}'\r\n  if(rightSidebar){\r\n    styles += rightSidebar.getCustomCSS();\r\n    if(rightSidebar.getSetting('sidebar_fixed')){\r\n      styles += `& .app-area_sidebar-location-right .sections-wrapper.sections-wrapper.sections-wrapper{overflow:hidden;position:fixed;top:0;right:0;width:${rightSidebar.getSetting('sidebar_width', '0px')};}`\r\n    }\r\n  }\r\n  if(leftSidebar){\r\n    styles += leftSidebar.getCustomCSS();\r\n    if(leftSidebar.getSetting('sidebar_fixed')){\r\n      styles += `& .app-area_sidebar-location-left .sections-wrapper.sections-wrapper.sections-wrapper{overflow:hidden;position:fixed;top:0;left:0;width:${leftSidebar.getSetting('sidebar_width', '0px')};}`\r\n    }\r\n  }\r\n  styles += `.app-area > .sections-wrapper.sections-wrapper{width:100%;}`\r\n  return  styles;\r\n}\r\n"],"sourceRoot":""}