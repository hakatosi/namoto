{"version":3,"sources":["webpack:///./resources/modules/editor/src/js/components/altrp-image/Skeleton.js","webpack:///./resources/modules/editor/src/js/components/altrp-image/ImagePlaceholder.js","webpack:///./resources/modules/editor/src/js/components/altrp-image/AltrpImage.js","webpack:///./resources/modules/front-app/src/js/components/FrontPopupWrapper.js","webpack:///./resources/modules/front-app/src/js/components/FrontPopup.js"],"names":["defaultBaseColor","SkeletonSpan","styled","duration","delay","keyframes","Math","floor","undefined","color","highlightColor","props","className","_","isNumber","width","settings","aspect_ratio_size","getResponsiveSetting","Number","height","indexOf","style","custom_aspect","isString","mediaWidth","mediaHeight","window","altrpHelpers","isEditor","isSSR","renderAsset","AltrpImage","imageRef","React","createRef","visible","element","lazy","altrpImageLazy","state","update","timeoutId","setTimeout","setState","clearTimeout","this","prevProps","prevState","current","getRoot","popupGUID","popupTrigger","popupID","scrollPosition","scroller","mainScrollbars","document","querySelector","checkElementInViewBox","media","image","noDefault","placeholderStyles","File","default","Object","keys","length","url","name","assetType","background","placeholder","main_color","ref","getSettings","altrpSkeletonColor","altrpSkeletonHighlightColor","cloneElement","id","Fragment","Component","reactRedux","connect","div","styles","layout_bg","get","width_popup_layout","size","unit","content_position_popup_layout","height_custom_popup_layout","sliderStyled","popup_bg","popup_pa","dimensionsControllerToStyles","popup_border","popup_border_width","popup_radius","popup_border_color","top","left","right","bottom","horizontal_position_popup_layout","close_pa","close_right","close_top","close_c","colorPropertyStyled","icon_fill","time_offcanvas","iconsManager","FrontPopup","ElementWrapper","isVisible","rootElement","frontElementsFabric","parseData","template","data","page","models","isShownOnScroll","close","bind","closePopup","classes","rootElementSettings","popup_close_icon","popup_close_icon_width_size","popup_close_icon_height_size","push","rootElementId","getId","close_context","overlayCondition","height_popup_layout","vertical_position_popup_layout","closeButtonCondition","popup_close_icon_alignment","closeButton","onClick","renderIcon","join","e","stopPropagation","autoHide","renderThumbHorizontal","renderTrackHorizontal","renderTrackVertical","autoHideTimeout","autoHideDuration","createElement","componentClass","children","dispatch","togglePopup"],"mappings":"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","file":"4734.178304c780b0f96a397f.bundle.js","sourcesContent":["import styled, { keyframes} from 'styled-components';\r\n\r\nexport const defaultBaseColor = \"#eee\";\r\n\r\nexport const defaultHighlightColor = \"#f5f5f5\";\r\n\r\nexport const skeletonKeyframes = (duration, delay) => keyframes`\r\n  0% {\r\n    background-position: -200px 0;\r\n  }\r\n  ${\r\n  delay > 0\r\n    ? `${Math.floor((1 / (duration + delay)) * duration * 100)}% {\r\n    background-position: calc(200px + 100%) 0;\r\n  }`\r\n    : undefined\r\n}\r\n  100% {\r\n    background-position: calc(200px + 100%) 0;\r\n  }\r\n`;\r\nconst SkeletonSpan = styled.span`\r\n  animation: ${skeletonKeyframes} 1.2s ease-in-out infinite;\r\n  background-color: ${({color})=>`${color || defaultBaseColor}`};\r\n  background-size: 200px 100%;\r\n  background-repeat: no-repeat;\r\n  background-image: linear-gradient(90deg, ${({highlightColor, color})=>{\r\n    return `${color || defaultBaseColor}, ${highlightColor || defaultHighlightColor}, ${color || defaultBaseColor}`;\r\n  }});\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  height: 100%;\r\n`;\r\nconst Skeleton = (props) => <div className={props.className}><SkeletonSpan {...props} className=\"altrp-skeleton__span\"/></div>\r\nexport default Skeleton;\r\n","import styled from 'styled-components';\r\nimport {getResponsiveSetting} from \"../../../../../front-app/src/js/helpers\";\r\n\r\nconst ImagePlaceholder = styled.div`& {\r\n  position: relative;\r\n  max-width: 100%;\r\n  overflow: hidden;\r\n  width:${props => {\r\n  if (_.isNumber(props.width)) {\r\n    return props.width + 'px';\r\n  }\r\n  return props.width ? props.width : '100%'\r\n}};\r\n${(props) => {\r\n  const {settings} = props;\r\n  const aspect_ratio_size = getResponsiveSetting(settings, 'aspect_ratio_size');\r\n  if(Number(aspect_ratio_size) !== 0 && aspect_ratio_size === 'custom'|| Number(aspect_ratio_size)){\r\n    return 'height:auto;'\r\n  }\r\n  if(! props.height || props.height.indexOf('%') !== -1) {\r\n    return 'height:auto;'\r\n  }\r\n  return `height:${props.height ? props.height : 'auto'};`;\r\n}}\r\n\r\n  background-color: ${props => props.color ? props.color : '#fff'};\r\n}\r\n&::before{\r\n  display: block;\r\n  content: '';\r\n  width: 100%;\r\n${(props) => {\r\n  const {settings, height} = props;\r\n  let style = '';\r\n  const aspect_ratio_size = getResponsiveSetting(settings, 'aspect_ratio_size');\r\n  if(Number(aspect_ratio_size) !== 0) {\r\n    if(aspect_ratio_size === 'custom') {\r\n      let custom_aspect = getResponsiveSetting(settings, 'custom_aspect');\r\n      custom_aspect = Number(custom_aspect) || 100;\r\n      style += `padding-top:${custom_aspect}%;`;\r\n    } else if(Number(aspect_ratio_size)){\r\n      style += `padding-top:${aspect_ratio_size}%;`;\r\n    }\r\n    return style;\r\n  }\r\n  if (height && _.isString(height) && height.indexOf('%') === -1) {\r\n    return style;\r\n  }\r\n  if (Number(props.mediaWidth) && Number(props.mediaHeight)) {\r\n    style += `padding-top:${(props.mediaHeight / props.mediaWidth) * 100}%;`\r\n  }\r\n  return style;\r\n}};\r\n}\r\n&& .altrp-skeleton,\r\n&& .altrp-image{\r\n  position:absolute;\r\n  top:0;\r\n  left:0;\r\n  right:0;\r\n  bottom:0;\r\n  height:100%;\r\n  width:100%;\r\n}\r\n`;\r\n\r\nexport default ImagePlaceholder;\r\n","import Skeleton from './Skeleton';\nimport ImagePlaceholder from \"./ImagePlaceholder\";\nimport {checkElementInViewBox} from \"../../../../../front-app/src/js/helpers/elements\";\nconst {isEditor, isSSR, renderAsset} = window.altrpHelpers;\n\nclass AltrpImage extends Component {\n  constructor(props) {\n    super(props);\n    this.imageRef = React.createRef();\n    let visible = true;\n    if(isSSR() && ! props.element?.getResponsiveSetting('lazyload_disable')){\n      visible = false;\n    } else if (isEditor() || props.lazy === false) {\n\n    } else if (window.altrpImageLazy\n        && window.altrpImageLazy !== 'none'\n        && props.element\n        && ! props.element?.getResponsiveSetting('lazyload_disable')) {\n      visible = false;\n    }\n    this.state = {\n      visible,\n      update: 0,\n    };\n    this.timeoutId = setTimeout(() => this.setState(state => ({...state, update: state.update++})), 500);\n  }\n\n  /**\n   * очищаем обновление\n   */\n  componentWillUnmount() {\n    clearTimeout(this.timeoutId);\n  }\n\n  /**\n   * Проверим нужно ли обновить видимость\n   * @param {{}} prevProps\n   * @param {{}} prevState\n   */\n\n  componentDidUpdate(prevProps, prevState) {\n    if(this.state.visible){\n      clearTimeout(this.timeoutId);\n    }\n    if (this.state.visible || ! this.imageRef.current) {\n      return;\n    }\n    if(this.props?.element?.getRoot()?.popupGUID && this.props.element.getRoot().popupGUID === this.props.popupTrigger.popupID){\n      this.setState(state => ({...state, visible: true}));\n    }\n    if (prevProps.scrollPosition === this.props.scrollPosition && prevState.update === this.state.update) {\n      return;\n    }\n    let scroller = window.mainScrollbars;\n    if(! scroller){\n      scroller = document.querySelector('.front-app-content');\n    }\n    if(! scroller){\n      scroller = document.querySelector('.front-app');\n    }\n    if (this.imageRef.current && checkElementInViewBox(this.imageRef.current, scroller)) {\n      clearTimeout(this.timeoutId);\n      this.setState(state => ({...state, visible: true}));\n    }\n  }\n\n  render() {\n    let media = {...this.props.image};\n    const {visible} = this.state;\n    const noDefault = this.props.noDefault || false;\n    const placeholderStyles = {};\n\n    let width = this.props.width;\n\n    let height = this.props.height;\n    if (! isSSR() && this.props.image instanceof File) {\n      media = this.props.image\n    } else {\n      if (this.props.default) {\n        if ((Object.keys(media).length === 0)) {\n          media = this.props.default;\n        }\n      } else if (noDefault) {\n        return \"\"\n      } else {\n        media.url = media.url || '/img/nullImage.png';\n        media.name = media.name || 'null';\n        media.assetType = media.assetType || undefined;\n      }\n    }\n    let image = renderAsset(media);\n    if(visible || window.altrpImageLazy === 'skeleton'){\n      placeholderStyles.background = 'transparent';\n    }\n\n    let placeholder = <ImagePlaceholder color={media.main_color}\n                                        className={'altrp-image-placeholder '}\n                                        ref={this.imageRef}\n                                        settings={this.props.element?.getSettings() || {}}\n                                        height={height}\n                                        width={width}\n                                        style={placeholderStyles}\n                                        mediaWidth={media.width || 100}\n                                        mediaHeight={media.height || 75}>\n      {window.altrpImageLazy === 'skeleton'\n        && ! visible\n        &&\n          <Skeleton className=\"altrp-skeleton\"\n                    color={window.altrpSkeletonColor}\n                    highlightColor={window.altrpSkeletonHighlightColor}/>\n\n      }\n      {visible && React.cloneElement(image, {\n        className: this.props.className,\n        id: this.props.id || null,\n        style: this.props.style,\n      })}\n      </ImagePlaceholder>;\n\n    return <React.Fragment>\n      {placeholder}\n    </React.Fragment>\n  }\n}\n\nlet _export;\nif (isEditor()) {\n  _export = AltrpImage;\n} else {\n\n  function mapStateToProps(state) {\n    return {\n      scrollPosition: state.scrollPosition,\n      popupTrigger: state.popupTrigger,\n    };\n  }\n\n  _export = window.reactRedux.connect(mapStateToProps)(AltrpImage)\n}\nexport default _export;\n","const {getResponsiveSetting} = window.altrpHelpers;\nimport {\n  shadowControllerToStyles,\n  dimensionsControllerToStyles,\n  sliderStyled,\n  colorPropertyStyled\n} from '../helpers/styles';\n\n\nconst FrontPopupWrapper = window.styled.div`\n&{\n  overflow: hidden;\n${({settings}) => {\n  let styles = \"\";\n  const layout_bg = getResponsiveSetting(settings, 'layout_bg')\n  styles += `background-color:${_.get(layout_bg, 'color', 'rgba(0,0,0,0.7)')};`\n  return styles\n}\n}\n& .popup-content {\n  ${({settings}) => {\n  let styles = \"\";\n  const height_custom_popup_layout = getResponsiveSetting(settings, 'height_custom_popup_layout')\n  if (height_custom_popup_layout) {\n\n  }\n  if (settings.width_popup_layout && settings.width_popup_layout.size)\n    styles += `width: ${settings.width_popup_layout.size} ${settings.width_popup_layout.unit};`;\n\n  return styles;\n}}\n}\n& .popup-window > .popup-scrollbar > div{\n  ${({settings}) => {\n  let styles = \"\";\n  const content_position_popup_layout = getResponsiveSetting(settings, 'content_position_popup_layout')\n  if (content_position_popup_layout && content_position_popup_layout !== 'flex-start') {\n    styles += `align-items:${content_position_popup_layout};`\n    styles += `display:flex;`\n  }\n  return styles;\n}}\n}\n&& .popup-window{\n  ${({settings}) => {\n  let styles = \"\";\n  const height_custom_popup_layout = getResponsiveSetting(settings, 'height_custom_popup_layout')\n  if (height_custom_popup_layout) {\n    styles += `height:${sliderStyled(height_custom_popup_layout)};`\n  }\n  const content_position_popup_layout = getResponsiveSetting(settings, 'content_position_popup_layout')\n  if (content_position_popup_layout) {\n    styles += `justify-content:${content_position_popup_layout};`\n  }\n  const width_popup_layout = getResponsiveSetting(settings, 'width_popup_layout')\n  if (width_popup_layout) {\n    styles += `width:${sliderStyled(width_popup_layout)};`\n  }\n\n  const popup_bg = getResponsiveSetting(settings, 'popup_bg')\n  if (popup_bg) {\n    styles += `background-color:${popup_bg.color};`\n  }\n  const popup_pa = getResponsiveSetting(settings, 'popup_pa')\n  if (popup_pa) {\n    styles += dimensionsControllerToStyles(popup_pa, 'padding')\n  }\n  const popup_border = getResponsiveSetting(settings, 'popup_border')\n  if (popup_border) {\n    styles += `border-style:${popup_border};`\n  }\n  const popup_border_width = getResponsiveSetting(settings, 'popup_border_width')\n  if (popup_border_width) {\n    styles += dimensionsControllerToStyles(popup_border_width, 'border-width')\n  }\n  const popup_radius = getResponsiveSetting(settings, 'popup_radius')\n  if (popup_radius) {\n    styles += dimensionsControllerToStyles(popup_radius, 'border-radius')\n  }\n  const popup_border_color = getResponsiveSetting(settings, 'popup_border_color')\n  if (popup_border_color) {\n    styles += `border-color:${popup_border_color.color};`\n  }\n  return styles;\n}}\n  max-height: 100%;\n  max-width: 100%;\n}\n& .popup-close-button .altrp-image-placeholder svg{\n  width: 100%;\n  height: 100%;\n  display: block;\n}\n&.app-popup_offcanvas .popup-window{\n${({settings}) => {\n  let styles = ''\n  const type_popup = getResponsiveSetting(settings, 'type_popup')\n  if(type_popup !== 'offcanvas'){\n    return  styles\n  }\n  let top = 0, left = 0, right = 'auto', bottom = 'auto';\n  const horizontal_position_popup_layout = getResponsiveSetting(settings, 'horizontal_position_popup_layout')\n  const vertical_position_popup_layout = getResponsiveSetting(settings, 'vertical_position_popup_layout')\n\n  switch(vertical_position_popup_layout){\n    case 'bottom':{\n      bottom = 0\n      top = 'auto'\n    }break;\n    case 'center':{\n      styles += 'height:100%;';\n    }break;\n  }\n  switch(horizontal_position_popup_layout){\n    case 'right':{\n      right = 0\n      left = 'auto'\n    }break;\n    case 'center':{\n      styles += 'width:100%;';\n    }break;\n  }\n  styles += `top:${top};left:${left};right:${right};bottom:${bottom};`\n  return styles\n}}\n}\n&&& .popup-close-button{\n  padding: 0;\n  ${({settings}) => {\n  let styles = ''\n  const close_pa = getResponsiveSetting(settings, 'close_pa')\n  if (close_pa) {\n    styles += dimensionsControllerToStyles(close_pa, 'padding')\n  }\n  const close_right = getResponsiveSetting(settings, 'close_right')\n  if (close_right) {\n    styles += `right:${sliderStyled(close_right)};`\n  }\n  const close_top = getResponsiveSetting(settings, 'close_top')\n  if (close_top) {\n    styles += `top:${sliderStyled(close_top)};`\n  }\n  let close_c = getResponsiveSetting(settings, 'close_c');\n  if (close_c) {\n    styles += colorPropertyStyled(close_c, 'background-color')\n  }\n  close_c = getResponsiveSetting(settings, 'close_c', '.active');\n  if (close_c) {\n    styles += `&:active{${colorPropertyStyled(close_c, 'background-color')}}`\n  }\n  close_c = getResponsiveSetting(settings, 'close_c', ':hover');\n  if (close_c) {\n    styles += `&:hover{${colorPropertyStyled(close_c, 'background-color')}}`\n  }\n  let icon_fill = getResponsiveSetting(settings, 'icon_fill');\n  if (icon_fill) {\n    styles += `& svg *{${colorPropertyStyled(icon_fill, 'fill')}}`\n  }\n  icon_fill = getResponsiveSetting(settings, 'icon_fill', ':hover');\n  if (icon_fill) {\n    styles += `&:hover svg *{${colorPropertyStyled(icon_fill, 'fill')}}`\n  }\n  icon_fill = getResponsiveSetting(settings, 'icon_fill', '.active');\n  if (icon_fill) {\n    styles += `&:active svg *{${colorPropertyStyled(icon_fill, 'fill')}}`\n  }\n  return styles;\n}\n}\n& .altrp-offcanvas {\n  ${({settings}) => {\n  let styles = '';\n  if (settings.time_offcanvas && settings.time_offcanvas.size) {\n    styles += `animation-duration: ${settings.time_offcanvas.size}${settings.time_offcanvas.unit} !important;`\n  }\n  return styles;\n}}\n}\n`\n\nexport default FrontPopupWrapper;\n","const {iconsManager} = window.altrpHelpers\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport { togglePopup } from \"../store/popup-trigger/actions\";\nimport AltrpImage from \"../../../../editor/src/js/components/altrp-image/AltrpImage\";\nimport FrontPopupWrapper from \"./FrontPopupWrapper\";\nimport '../../sass/altrp-popup.scss'\n\nclass FrontPopup extends Component {\n  constructor(props) {\n    super(props);\n    this.ElementWrapper = props.ElementWrapper || window.ElementWrapper;\n    this.state = {\n      isVisible: false,\n      rootElement: window.frontElementsFabric.parseData(\n        this.props.template.data,\n        null,\n        this.props.page,\n        this.props.models\n      ),\n      isShownOnScroll: false\n    };\n    this.close = this.close.bind(this);\n  }\n\n\n\n  componentDidUpdate(prevProps) {\n    let { popupTrigger } = this.props;\n\n    switch (this.state.rootElement.getSettings(\"type_popup\", \"popup\")) {\n      case \"popup\":\n        // if (on_scroll && !isShownOnScroll && on_scroll.size <= this.props.scrollPosition.top * 100) {\n        //   this.setState({ isVisible: true, isShownOnScroll: true });\n        //\n        // }\n        // if (this.resetTimer && this.props.scrollPosition.top !== prevProps.scrollPosition.top) {\n        //\n        //  this.resetTimer();\n        //\n        // }\n        // if (to_element && this.props.scrollPosition.top !== prevProps.scrollPosition.top) {\n        //\n        //  // console.log(this.elements)\n        //\n        //  console.log(this.props.scrollPosition.scrollTop)\n        //  const { scrollTop, clientHeight } = this.props.scrollPosition;\n        //\n        //  for (let index = 0; index < this.elements.length; index++) {\n        //\n        //    const element = this.elements[index];\n        //\n        //     if (isElementTopInViewport(element, scrollTop, clientHeight)) {\n        //\n        //      this.setState({ isVisible: true });\n        //       // this.elements.splice(index, 1);\n        //     }\n        //   }\n\n        // }\n        if (popupTrigger !== prevProps.popupTrigger) {\n          this.setState({\n            isVisible:\n              popupTrigger.popupID === _.get(this.props, \"template.guid\")\n          });\n        }\n        break;\n      case \"offcanvas\":\n        // if (on_scroll && !isShownOnScroll && on_scroll.size <= this.props.scrollPosition.top * 100) {\n        //   this.setState({ isVisible: true, isShownOnScroll: true });\n        // }\n        //\n        // if (this.resetTimer && this.props.scrollPosition.top !== prevProps.scrollPosition.top) {\n        //   this.resetTimer();\n        // }\n\n        // if (to_element && this.props.scrollPosition.top !== prevProps.scrollPosition.top) {\n        //   // console.log(this.elements)\n        //   console.log(this.props.scrollPosition.scrollTop)\n        //   const { scrollTop, clientHeight } = this.props.scrollPosition;\n\n        //   for (let index = 0; index < this.elements.length; index++) {\n        //     const element = this.elements[index];\n\n        //     if (isElementTopInViewport(element, scrollTop, clientHeight)) {\n        //       this.setState({ isVisible: true });\n        //       // this.elements.splice(index, 1);\n        //     }\n        //   }\n\n        // }\n        if (popupTrigger !== prevProps.popupTrigger) {\n          this.setState({\n            isVisible:\n              popupTrigger.popupID === _.get(this.props, \"template.guid\")\n          });\n        }\n        break;\n    }\n  }\n\n  close() {\n    this.setState({ isVisible: false, isShownOnScroll: false });\n    this.props.closePopup();\n  }\n\n  render() {\n    const { isVisible } = this.state;\n    let classes = [`app-popup`];\n    // const { positioning_custom_top } = this.props.template.data.rootElementSettings;\n    const rootElement = this.state.rootElement;\n    rootElement.popupGUID = _.get(this.props, \"template.guid\");\n    const rootElementSettings = rootElement.getSettings(\"\");\n    let  popup_close_icon =  rootElement.getResponsiveSetting('popup_close_icon')\n    let  popup_close_icon_width_size =  rootElement.getResponsiveSetting('popup_close_icon_width_size')\n    let  popup_close_icon_height_size =  rootElement.getResponsiveSetting('popup_close_icon_height_size')\n    if(! popup_close_icon_height_size){\n      popup_close_icon_height_size = '50px'\n    } else {\n      popup_close_icon_height_size = `${popup_close_icon_height_size.size || '0'}${popup_close_icon_height_size.unit}`\n    }\n\n    if(! popup_close_icon_width_size){\n      popup_close_icon_width_size = '50px'\n    } else {\n      popup_close_icon_width_size = `${popup_close_icon_width_size.size || '0'}${popup_close_icon_width_size.unit}`\n    }\n    const type_popup = rootElement.getResponsiveSetting('type_popup')\n    if(type_popup === 'offcanvas'){\n      classes.push(\"app-popup_offcanvas\")\n    }\n    const rootElementId = rootElement.getId();\n    const close_context = rootElement.getResponsiveSetting( 'close_context')\n\n    classes.push(`${rootElementId}-app-popup`);\n    const overlayCondition =\n      rootElement.getResponsiveSetting('overlay_close_popup_layout');\n\n    if (overlayCondition) {\n      classes.push(\"app-popup-overlay\");\n    }\n\n    //height popup\n    switch (rootElementSettings.height_popup_layout) {\n      case \"fitToScreen\":\n        classes.push(\"app-popup-height-fit-to-screen\");\n        break;\n      case \"custom\":\n        classes.push(\"app-popup-height-custom\");\n        break;\n    }\n\n    //horizontal position horizontal_position_popup_layout\n    switch (rootElementSettings.horizontal_position_popup_layout) {\n      case \"left\":\n        classes.push(\"app-popup-horizontal-left\");\n        break;\n      case \"center\":\n        classes.push(\"app-popup-horizontal-center\");\n        break;\n      case \"right\":\n        classes.push(\"app-popup-horizontal-right\");\n        break;\n      default:\n        classes.push(\"app-popup-horizontal-center\");\n    }\n\n    //vertical position vertical_position_popup_layout\n    switch (rootElementSettings.vertical_position_popup_layout) {\n      case \"top\":\n        classes.push(\"app-popup-vertical-top\");\n        break;\n      case \"center\":\n        classes.push(\"app-popup-vertical-center\");\n        break;\n      case \"bottom\":\n        classes.push(\"app-popup-vertical-bottom\");\n        break;\n      default:\n        classes.push(\"app-popup-vertical-center\");\n    }\n\n    let content = \"\";\n    const closeButtonCondition =\n      rootElement.getResponsiveSetting('switcher_close_button_popup_layout');\n    let { popup_close_icon_alignment } = rootElementSettings;\n    popup_close_icon_alignment = popup_close_icon_alignment || \"right\";\n    const closeButton = closeButtonCondition ? (\n      <button\n        className={\n          \"popup-close-button\" +\n          (popup_close_icon_alignment === \"right\"\n            ? \" popup-close-button-right\"\n            : \" popup-close-button-left\")\n        }\n        onClick={() => {\n          this.setState({ isVisible: false });\n          this.props.closePopup();\n        }}\n      >\n        <AltrpImage\n          image={popup_close_icon}\n          lazy={false}\n          width={popup_close_icon_width_size}\n          height={popup_close_icon_height_size}\n          default={{\n            assetType: \"icon\",\n            name: \"deleteOne\",\n            url: \"/img/nullImage.png\"\n          }}\n          className=\"popup-close-button-icon\"\n        />\n      </button>\n    ) : (\n      <button\n        className={\n          \"popup-close-button\" +\n          (popup_close_icon_alignment === \"right\"\n            ? \" popup-close-button-right\"\n            : \" popup-close-button-left\")\n        }\n        onClick={() => {\n          this.setState({ isVisible: false });\n          this.props.closePopup();\n        }}\n      >\n        {iconsManager().renderIcon('times' ,{\n          width:popup_close_icon_width_size,\n          height:popup_close_icon_height_size,\n          className: \"popup-close-button-icon\"\n        })}\n      </button>\n    );\n\n\n    return isVisible ? (\n      <FrontPopupWrapper\n        settings={rootElementSettings}\n        className={classes.join(\" \")}\n        onClick={() => {\n          if (\n            overlayCondition\n          ) {\n            this.setState({ isVisible: false });\n            this.props.closePopup();\n          }\n        }}\n      >\n        {close_context === 'window' && closeButton}\n        <div\n          className=\"popup-window\"\n          // style={{ top: positioning_custom_top.size + positioning_custom_top.unit}}\n          onClick={e => e.stopPropagation()}\n        >\n          {close_context !== 'window' && closeButton}\n          <Scrollbars\n            autoHide\n            renderThumbHorizontal={props => (\n              <div {...props} className=\"popup-scrollbar-vertical\" />\n            )}\n            renderTrackHorizontal={() => (\n              <div className=\"popup-scrollbar-track-horizontal\" />\n            )}\n            renderTrackVertical={props => (\n              <div {...props} className=\"popup-scrollbar-track-vertical\" />\n            )}\n            className=\"popup-scrollbar\"\n            autoHideTimeout={1000}\n            autoHideDuration={200}\n          >\n            <div className=\"popup-content\">\n              {React.createElement(rootElement.componentClass, {\n                element: rootElement,\n                ElementWrapper :this.ElementWrapper,\n                children: rootElement.children\n              })}\n            </div>\n          </Scrollbars>\n        </div>\n      </FrontPopupWrapper>\n    ) : null;\n\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    scrollPosition: state.scrollPosition,\n    popupTrigger: state.popupTrigger\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    closePopup: () => dispatch(togglePopup(null))\n  };\n};\n\nexport default window.reactRedux.connect(mapStateToProps, mapDispatchToProps)(FrontPopup);\n"],"sourceRoot":""}