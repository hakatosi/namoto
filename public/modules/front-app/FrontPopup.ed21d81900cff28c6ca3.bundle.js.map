{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack:///./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/ElementWrapperComponent.js","webpack:///./resources/modules/front-app/src/js/constants/DEFAULT_REACT_ELEMENTS.js","webpack:///./resources/modules/front-app/src/js/components/ElementWrapper.js","webpack:///./resources/modules/front-app/src/js/store/elements-storage/actions.js","webpack:///./resources/modules/front-app/src/js/store/popup-trigger/actions.js"],"names":["_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_taggedTemplateLiteral","strings","raw","slice","freeze","defineProperties","value","ElementWrapperDivComponent","styled","div","settings","styles","layout_column_width","getResponsiveSetting","Number","_export","window","altrpHelpers","altrpCompare","altrpRandomId","conditionsChecker","isEditor","replaceContentWithData","setTitle","ElementWrapper","props","updateStore","state","currentModel","appStore","getState","setState","currentUser","currentDataStorage","elementDisplay","element","getSettings","reactElement","elementId","getId","wrapper","elementWrapperRef","React","createRef","elementRef","dispatch","addElement","error","errorInfo","this","frontApp","onWidgetMount","_","isFunction","update","updateFonts","checkElementDisplay","get","stylesModule","stylesContainer","current","getElementsByClassName","prevProps","prevState","getProperty","getName","title","currentTitle","altrpPage","changeCurrentPageProperty","updateToken","conditions","map","c","modelField","conditional_model_field","operator","conditional_other_operator","conditional_other_condition_value","getCurrentModel","formsStore","formId","logic","formConditions","display","forEach","field_id","hide_on_wide_screen","hide_on_desktop","hide_on_laptop","hide_on_tablet","hide_on_big_phone","hide_on_small_phone","isFixed","hide_on_trigger","classes","getType","getPrefixClasses","getData","className","style","whiteSpace","toString","componentStack","width","CSSId","ContentComponent","frontElementsManager","getComponentClass","content","createElement","ref","rootElement","children","getChildren","match","altrpresponses","altrpPageState","altrpMeta","currentScreen","baseRender","history","getTemplateType","WrapperComponent","NavComponent","wrapperProps","id","DEFAULT_REACT_ELEMENTS","isEmpty","tooltip_position","tooltip_text","tooltip_minimal","tooltip_show_type","tooltip_horizontal_offset","tooltip_vertical_offset","AltrpTooltip","position","minimal","horizontal","vertical","text","Component","withRouter","reactRedux","connect","forwardRef","ADD_ELEMENT","CLEAR_ELEMENTS","elementComponent","type","clearElements","TRIGGER_POPUP","togglePopup","payload"],"mappings":"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","file":"FrontPopup.ed21d81900cff28c6ca3.bundle.js","sourcesContent":["import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","\r\nimport { getResponsiveSetting } from \"../../../../../../front-app/src/js/helpers\";\r\n\r\nconst settingsToStyles = ({ settings }) => {\r\n   let styles = '';\r\n\r\n   styles += '&.altrp-column{';\r\n   const layout_column_width = getResponsiveSetting(settings, 'layout_column_width');\r\n   if (layout_column_width) {\r\n      if (Number(layout_column_width)) {\r\n         styles += `width:${layout_column_width}%;`;\r\n      } else {\r\n         styles += `width:${layout_column_width};`;\r\n      }\r\n   }\r\n\r\n   styles += '}';\r\n   return styles;\r\n};\r\n\r\nexport const ElementWrapperDivComponent = styled.div`${settingsToStyles}`;\r\n","const DEFAULT_REACT_ELEMENTS = [\n  'input',\n  'input-select',\n  'input-multi-select',\n  'input-select2',\n  'input-radio',\n  'input-checkbox',\n  'input-wysiwyg',\n  'input-textarea',\n  'input-slider',\n  'input-range-slider',\n  'input-image-select',\n  'input-accept',\n  'input-text',\n  'input-text-common',\n  'input-password',\n  'input-number',\n  'input-tel',\n  'input-email',\n  'input-date',\n  'input-hidden',\n  'input-file',\n  'input-gallery',\n  'breadcrumbs',\n  'map',\n  'map_builder',\n  'menu',\n  'diagram',\n  'input',\n  'nav',\n  'dashboards',\n  'tour',\n  'icon',\n  'export',\n  'template',\n  'gallery',\n  'dropbar',\n  'posts',\n  'table',\n  'tabs',\n  'heading-type-animating',\n]\nexport default DEFAULT_REACT_ELEMENTS\n","import { withRouter } from \"react-router-dom\";\nimport { addElement } from \"../store/elements-storage/actions\";\nimport AltrpTooltip from \"../../../../editor/src/js/components/altrp-tooltip/AltrpTooltip\";\nimport { changeCurrentPageProperty } from \"../store/current-page/actions\";\nimport { ElementWrapperDivComponent } from \"../../../../editor/src/js/components/widgets/styled-components/ElementWrapperComponent\";\nimport NavComponent from \"../../../../editor/src/js/components/widgets/styled-components/NavComponent\";\nimport DEFAULT_REACT_ELEMENTS from \"../constants/DEFAULT_REACT_ELEMENTS\";\nconst {\n  altrpCompare,\n  altrpRandomId,\n  conditionsChecker,\n  isEditor,\n  replaceContentWithData,\n  setTitle\n} = window.altrpHelpers;\n\nclass ElementWrapper extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      elementDisplay: !this.props.element.getSettings(\"default_hidden\")\n    };\n    this.reactElement = this.props.element.getSettings(\"react_element\");\n    this.elementId = this.props.element.getId();\n    this.settings = this.props.element.getSettings();\n    props.element.wrapper = this;\n    this.elementWrapperRef = React.createRef();\n    this.elementRef = React.createRef();\n    if(! isEditor()){\n      appStore.dispatch(addElement(this));\n    }\n  }\n\n  /**\n   * Отлавливаем ошибки\n   * @param error\n   * @param errorInfo\n   */\n  componentDidCatch(error, errorInfo) {\n    this.setState(state => ({\n      ...state,\n      error: error,\n      errorInfo: errorInfo\n    }));\n  }\n\n  /**\n   * Иногда надо обновить элемент (FrontElement)\n   */\n  componentDidMount() {\n    !isEditor() && window?.frontApp?.onWidgetMount();\n    if (_.isFunction(this.props.element.update)) {\n      this.props.element.update();\n      this.props.element.updateFonts();\n    }\n    this.checkElementDisplay();\n  }\n  /**\n   * Подписываемся на обновление store редакса\n   */\n  updateStore = () => {\n    if (this.state.currentModel !== appStore.getState().currentModel) {\n      this.setState(state => ({\n        ...state,\n        currentModel: appStore.getState().currentModel\n      }));\n    }\n    /**\n     * Обновляем пользователя\n     */\n    if (this.state.currentUser !== appStore.getState().currentUser) {\n      this.setState(state => ({\n        ...state,\n        currentModel: appStore.getState().currentUser\n      }));\n    }\n\n    /**\n     * Обновляем currentDataStorage\n     */\n    if (\n      this.state.currentDataStorage !== appStore.getState().currentDataStorage\n    ) {\n      this.setState(state => ({\n        ...state,\n        currentDataStorage: appStore.getState().currentDataStorage\n      }));\n    }\n  };\n\n  /**\n   * Вернет HTMLElement, в котором записаны css стили текущего компонента\n   * @return {null | HTMLElement}\n   */\n  getStylesHTMLElement() {\n    if (!_.get(window, \"stylesModule.stylesContainer.current\")) {\n      return null;\n    }\n\n    return (\n      window.stylesModule.stylesContainer.current.getElementsByClassName(\n        `altrp-styles${this.props.element.getId()}`\n      )[0] || null\n    );\n  }\n\n  /**\n   * Нужно ли обновить отображение обертки элементов\n   * @param {{}} prevProps\n   * @param {{}} prevState\n   */\n  componentDidUpdate(prevProps, prevState) {\n    this.checkElementDisplay();\n    if (\n      appStore.getState().currentModel.getProperty(\"altrpModelUpdated\") &&\n      appStore\n        .getState()\n        .currentDataStorage.getProperty(\"currentDataStorageLoaded\") &&\n      !isEditor() &&\n      this.props.element.getName() === \"section\"\n    ) {\n      let title = appStore.getState().currentTitle;\n      title = replaceContentWithData(title);\n      if (appStore.getState().altrpPage.getProperty(\"title\") !== title) {\n        appStore.dispatch(changeCurrentPageProperty(\"title\", title));\n      }\n      setTitle(title);\n    }\n  }\n\n  /**\n   * Обновить элемент изменив this.state.updateToken\n   */\n  updateElement() {\n    this.setState(state => ({ ...state, updateToken: altrpRandomId() }));\n  }\n\n  /**\n   * Проверка видимости элемента\n   * @param {{}} prevProps\n   * @param {{}} prevState\n   */\n  checkElementDisplay(prevProps, prevState) {\n    /**\n     * @member {FrontElement} element\n     */\n    const { element } = this.props;\n    if (!element.getSettings(\"conditional_other\")) {\n      return;\n    }\n    let conditions = element.getSettings(\"conditions\", []);\n    conditions = conditions.map(c => {\n      const {\n        conditional_model_field: modelField,\n        conditional_other_operator: operator,\n        conditional_other_condition_value: value\n      } = c;\n      return {\n        modelField,\n        operator,\n        value\n      };\n    });\n    let elementDisplay = conditionsChecker(\n      conditions,\n      element.getSettings(\"conditional_other_display\") === \"AND\",\n      this.props.element.getCurrentModel(),\n      true\n    );\n\n    if (this.state.elementDisplay === elementDisplay) {\n      return;\n    }\n\n    this.setState(state => ({\n      ...state,\n      elementDisplay\n    }));\n  }\n\n  /**\n   * Переключает видимость элемента\n   */\n  toggleElementDisplay() {\n    this.setState(state => ({\n      ...state,\n      elementDisplay: !state.elementDisplay\n    }));\n  }\n  /**\n   * Метод для проверки видимости поля формы\n   * @return {boolean}\n   */\n  inputIsDisplay() {\n    const { formsStore } = this.state;\n    const formId = this.props.element.getSettings(\"form_id\", \"\");\n    const logic = this.props.element.getSettings(\n      \"form_condition_display_on\",\n      \"AND\"\n    );\n    const formConditions = this.props.element.getSettings(\n      \"form_conditions\",\n      []\n    );\n    let display = true;\n    formConditions.forEach(c => {\n      if (logic === \"AND\") {\n        display *= altrpCompare(\n          _.get(formsStore, `${formId}.${c.field_id}`),\n          c.value,\n          c.operator\n        );\n      } else {\n        display += altrpCompare(\n          _.get(formsStore, `${formId}.${c.field_id}`),\n          c.value,\n          c.operator\n        );\n      }\n    });\n    return display;\n  }\n\n  render() {\n    const {element} = this.props;\n    const {\n      hide_on_wide_screen,\n      hide_on_desktop,\n      hide_on_laptop,\n      hide_on_tablet,\n      hide_on_big_phone,\n      hide_on_small_phone,\n      hide_on_trigger,\n      isFixed,\n    } = element.settings;\n    let classes = `altrp-element altrp-element${element.getId()} altrp-element_${element.getType()}`;\n    classes += element.getPrefixClasses() + \" \";\n    if (element.getType() === \"widget\") {\n      classes += ` altrp-widget_${element.getName()}`;\n    }\n    if(this.props.element.getResponsiveSetting('css_class')){\n      classes += ` ${replaceContentWithData(\n        this.props.element.getResponsiveSetting('css_class'),\n        this.props.element.getCurrentModel().getData()\n      )} `;\n    }\n    if (hide_on_wide_screen) {\n      classes += \" hide_on_wide_screen\";\n    }\n    if (hide_on_desktop) {\n      classes += \" hide_on_desktop\";\n    }\n    if (hide_on_laptop) {\n      classes += \" hide_on_laptop\";\n    }\n    if (hide_on_tablet) {\n      classes += \" hide_on_tablet\";\n    }\n    if (hide_on_big_phone) {\n      classes += \" hide_on_big_phone\";\n    }\n    if (hide_on_small_phone) {\n      classes += \" hide_on_small_phone\";\n    }\n    if (isFixed) {\n      classes += \" fixed-section\";\n    }\n    if (this.state.errorInfo) {\n      return (\n        <div className=\"altrp-error\" data-eltype={element.getType()}>\n          <h2>Something went wrong.</h2>\n          <details style={{ whiteSpace: \"pre-wrap\" }}>\n            {this.state.error && this.state.error.toString()}\n            <br />\n            {this.state.errorInfo.componentStack}\n          </details>\n        </div>\n      );\n    }\n    const styles = {};\n\n    if (element.getResponsiveSetting(\"layout_column_width\")) {\n      if (\n        Number(element.getResponsiveSetting(\"layout_column_width\"))\n      ) {\n        styles.width =\n          element.getResponsiveSetting(\"layout_column_width\") + \"%\";\n      } else {\n        styles.width = element.getResponsiveSetting(\n          \"layout_column_width\"\n        );\n      }\n    }\n    if (!this.state.elementDisplay) {\n      styles.display = \"none\";\n    }\n    let CSSId = element.getSettings(\"advanced_element_id\", \"\");\n    CSSId = replaceContentWithData(\n      CSSId,\n      element.getCurrentModel().getData()\n    );\n    if (this.CSSId !== CSSId) {\n      this.CSSId = CSSId;\n    }\n    let ContentComponent = frontElementsManager.getComponentClass(\n      element.getName()\n    );\n    const content = React.createElement(ContentComponent, {\n      ref: this.elementRef,\n      rootElement: this.props.rootElement,\n      ElementWrapper: this.props.ElementWrapper,\n      element: element,\n      children: element.getChildren(),\n      match: this.props.match,\n      currentModel: this.props.currentModel,\n      currentUser: this.props.currentUser,\n      currentDataStorage: this.props.currentDataStorage,\n      altrpresponses: this.props.altrpresponses,\n      formsStore: this.props.formsStore,\n      elementDisplay: this.state.elementDisplay,\n      altrpPageState: this.props.altrpPageState,\n      altrpMeta: this.props.altrpMeta,\n      updateToken: this.state.updateToken,\n      currentScreen: this.props.currentScreen,\n      baseRender: this.props.baseRender,\n      history: this.props.history,\n      appStore\n    });\n    if (element.getTemplateType() === \"email\") {\n      if (!this.state.elementDisplay) {\n        return null;\n      }\n      return <>{content}</>;\n    }\n\n    let WrapperComponent = ElementWrapperDivComponent;\n    switch (element.getName()) {\n      case \"nav\":\n        WrapperComponent = NavComponent;\n        break;\n    }\n\n\n    const wrapperProps = {\n      className: classes,\n      ref: this.elementWrapperRef,\n      elementId: this.elementId,\n      settings: this.settings,\n      style: styles,\n      id: this.CSSId,\n    };\n    if (\n      this.reactElement ||\n      DEFAULT_REACT_ELEMENTS.indexOf(element.getName()) !== -1\n    ) {\n      wrapperProps[\"data-react-element\"] = element.getId();\n    }\n    if(! _.isEmpty(element.getResponsiveSetting('wrapper_click_actions'))){\n      wrapperProps[\"data-altrp-wrapper-click-actions\"] = element.getId();\n    }\n    if(! _.isEmpty(element.getResponsiveSetting('sticky'))){\n      wrapperProps[\"data-altrp-sticky\"] = element.getResponsiveSetting('sticky');\n      wrapperProps[\"data-altrp-sticky-spacing\"] = element.getResponsiveSetting('st_spacing');\n      wrapperProps[\"data-margin-top\"] = element.getResponsiveSetting('st_spacing') || 0;\n    }\n    wrapperProps[\"data-altrp-id\"] = element.getId();\n\n    const tooltip_position = this.props.element.getResponsiveSetting('tooltip_position')\n    let tooltip_text = this.props.element.getResponsiveSetting('tooltip_text')\n\n    tooltip_text = replaceContentWithData(\n      tooltip_text,\n      element.getCurrentModel().getData()\n    );\n    const tooltip_minimal = this.props.element.getResponsiveSetting('tooltip_minimal')\n    const tooltip_show_type = this.props.element.getResponsiveSetting('tooltip_show_type')\n    const tooltip_horizontal_offset = this.props.element.getResponsiveSetting('tooltip_horizontal_offset')\n    const tooltip_vertical_offset = this.props.element.getResponsiveSetting('tooltip_vertical_offset')\n    return  (\n      <WrapperComponent {...wrapperProps} element={element.getId()}>\n\n        {tooltip_show_type && tooltip_show_type !== \"never\" ? (\n          <AltrpTooltip\n            position={tooltip_position}\n            id={this.props.element.getId()}\n            state={tooltip_show_type}\n            minimal={tooltip_minimal}\n            horizontal={tooltip_horizontal_offset}\n            vertical={tooltip_vertical_offset}\n            text={tooltip_text}>\n            {content}\n          </AltrpTooltip>\n        ) : content}\n      </WrapperComponent>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    altrpresponses: state.altrpresponses,\n    formsStore: state.formsStore,\n    currentDataStorage: state.currentDataStorage,\n    currentModel: state.currentModel,\n    currentUser: state.currentUser,\n    altrpMeta: state.altrpMeta,\n    altrpPageState: state.altrpPageState,\n    currentScreen: state.currentScreen\n  };\n}\nlet _export;\nif(window['h-altrp']){\n  _export = ElementWrapper;\n} else {\n  _export = withRouter(ElementWrapper)\n}\nexport default window.reactRedux.connect(mapStateToProps, null, null, {\n  forwardRef: true\n})(_export);\n","export const ADD_ELEMENT = 'ADD_ELEMENT';\r\nexport const CLEAR_ELEMENTS = 'CLEAR_ELEMENTS';\r\n\r\n/**\r\n *\r\n * @param {React.Component}elementComponent\r\n * @return {{}} - {\r\n *     type: {string},\r\n *     sectionComponent: {React.Component},\r\n *   }\r\n */\r\nexport function addElement(elementComponent) {\r\n  return {\r\n    type: ADD_ELEMENT,\r\n    elementComponent\r\n  };\r\n}\r\n\r\n/**\r\n * Перед загрузкой новых данных, старые удаляем\r\n * @return {{type: string}}\r\n */\r\nexport function clearElements() {\r\n  return {\r\n    type: CLEAR_ELEMENTS,\r\n  };\r\n}\r\n\r\n","export const TRIGGER_POPUP = \"TRIGGER_POPUP\";\r\n\r\nexport const togglePopup = payload => ({\r\n  type: TRIGGER_POPUP,\r\n  payload\r\n});"],"sourceRoot":""}