{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/get.js","webpack:///./node_modules/@babel/runtime/helpers/esm/superPropBase.js","webpack:///./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///./resources/modules/front-app/src/js/helpers.js","webpack:///./resources/modules/front-app/src/js/store/altrp-page-state-storage/actions.js","webpack:///./resources/modules/front-app/src/js/store/current-user/actions.js","webpack:///./resources/modules/front-app/src/js/store/responses-storage/actions.js","webpack:///./node_modules/dot-prop-immutable/lib/index.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_arrayWithHoles","isArray","_assertThisInitialized","self","ReferenceError","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_get","target","property","receiver","Reflect","get","base","object","prototype","hasOwnProperty","call","getPrototypeOf","desc","getOwnPropertyDescriptor","_getPrototypeOf","o","setPrototypeOf","__proto__","_inherits","subClass","superClass","TypeError","create","constructor","_iterableToArray","iter","Symbol","iterator","from","_nonIterableRest","_possibleConstructorReturn","_setPrototypeOf","p","_slicedToArray","arrayWithHoles","_i","_s","_e","_arr","_n","_d","next","done","push","err","unsupportedIterableToArray","nonIterableRest","_toArray","_toConsumableArray","arrayLikeToArray","iterableToArray","_typeof","_unsupportedIterableToArray","minLen","n","toString","slice","name","test","defaultTitle","getRoutes","isSSR","window","SSR","e","iconsManager","setTitle","title","titleElement","document","innerHTML","isEditor","path","location","pathname","includes","parseOptionsFromSettings","string","options","split","_optionsFromData","getDataByPath","extractPathFromString","_","map","option","valuePath","trim","label","isString","labelPath","getMediaQueryByName","screenSettingName","mediaQuery","CONSTANTS","screen","getMediaSettingsByName","_screen","getCurrentBreakpoint","currentWidth","getWindowWidth","item","size","Number","width","breakpoint","parseURLTemplate","URLTemplate","url","protocol","assign","cloneDeep","currentRouterMatch","getProperty","indexOf","replaceContentWithData","replace","idTemplates","match","forEach","idTemplate","RegExp","getElementById","offsetWidth","renderAssetIcon","asset","props","type","assetType","renderIcon","React","createElement","src","renderAsset","isEmpty","dataUrl","rawSVG","File","refImg","createRef","fr","FileReader","readAsDataURL","onload","current","result","alt","ref","style","backgroundImage","undefined","parseParamsFromString","context","allowObject","replaceRight","AltrpModel","params","urlParams","lines","line","left","right","isObject","conditionsChecker","conditions","AND","model","dataByPath","each","c","conditionChecker","operator","modelField","altrpCompare","setDataByPath","dispatch","oldValue","appStore","getState","altrpPageState","isEqual","isFunction","changePageState","altrpMeta","changeAltrpMeta","currentUser","changeCurrentUserProperty","formId","fieldName","formsStore","changeFormFieldValue","pathElements","elementId","updateType","propName","component","getComponentByElementId","join","element","updateSetting","settings","mutate","addSettings","getId","getName","areaName","area","page_areas","find","id","Area","setSetting","currentStorage","getDataFromLocalStorage","set","saveDataToLocalStorage","trueValue","falseValue","_default","altrpCheck","_path","_right","currentModel","currentDataStorage","altrpresponses","altrpPage","queryData","queryString","href","query","getData","getTimeValue","getSettings","getSetting","getObjectByPrefix","prefix","mbParseJSON","JSON","parse","leftValue","rightValue","CONDITIONS_OPTIONS","isElementTopInViewport","top","scrollTop","clientHeight","getTopPosition","offsetTop","offsetParent","defaultValue","now","startOfMonth","Date","startOfYear","getPrevWeekStart","getNextWeekStart","getWeekStart","moment","altrpHelpers","format","date","monthShift","getFullYear","getMonth","yearShift","startOfWeek","weekShift","getDate","firstDayOfWeek","getCurrentStoreState","scrollToElement","scrollbars","container","HTMLElement","scroll","getOffsetTopInElement","parent","getHTMLElementById","elements","el","elementWrapperRef","getWrapperHTMLElementByElement","today","daystoMonday","isoWeekday","add","subtract","daystoLastMonday","clearEmptyProps","content","modelContext","paths","escapeRegExp","printElements","myWindow","open","write","headContent","bodyContent","HTMLHeadElement","outerHTML","close","head","body","focus","delay","then","print","elementsToPdf","filename","html2pdf","default","success","Promise","resolve","reject","save","dataFromTable","data","headers","querySelectorAll","table","querySelector","ths","th","innerText","rows","row","cells","part","header","idx","dataToCSV","toPairs","csvContent","h","stringify","blob","Blob","charset","link","setAttribute","URL","createObjectURL","appendChild","click","removeChild","dataToXLS","templateName","formData","FormData","append","fetch","method","response","dataToXML","altrpLogin","Resource","route","post","res","status","__status","addResponseData","_token","getAll","changeCurrentUser","routes","routesData","pages","_data","Route","changeAppRoutes","console","error","altrpLogout","cutString","maxLength","sortOptions","sortDirection","sort","a","b","toLowerCase","reverse","recurseCount","count","array","getAppContext","currentModelData","setProperty","storeWidgetState","widgetId","state","getWidgetState","localStorage","setItem","getItem","scrollbarWidth","scrollDiv","clientWidth","setAltrpIndex","altrpIndex","renderFontLink","font","altrpFontsSet","GOOGLE_FONT","fontUrl","encodeURI","rel","isAltrpTestMode","altrpRandomId","Math","random","substr","generateButtonsArray","pageIndex","pageCount","first_last_buttons_count","middle_buttons_count","buttonsSum","lastButtons","middleButtons","floor","keys","isValueMatchMask","mask","every","char","index","getConverter","data_type","ArrayConverter","DataConverter","convertData","converter","isHidden","icon","defaultIcon","className","redirect","linkSettings","frontAppRouter","history","goBack","back","preventDefault","stopPropagation","openInNew","tag","validateEmail","email","String","getResponsiveSetting","settingName","elementState","currentScreen","_settingName","setting","suffix","valueReplacement","ms","setTimeout","prepareURLForEmail","origin","parseIDFromYoutubeURL","youtubeURL","startIndex","endIndex","substring","prepareContext","altrpdata","altrpmodel","altrpuser","altrppagestate","altrpmeta","isJSON","JSONString","parseStringValue","getBreadcrumbsItems","breadcrumbsItems","items","currentId","page_id","currentPageId","appRoutes","breadcrumbsClone","idCurrent","parent_page_id","getParent","parentId","altrphelpers","sumFields","sum","this","CHANGE_PAGE_STATE","CLEAR_PAGE_STATE","stateName","stateValue","CHANGE_CURRENT_USER","SET_NOTICE_FOR_USER","SET_USERS_ONLINE","CHANGE_CURRENT_USER_PROPERTY","user","ADD_RESPONSE_DATA","CLEAR_ALL_RESPONSE_DATA","prop","propToArray","setPropImmutableRec","clone","getArrayIndex","max","Error","parseInt","reduce","ret","list","last","prev","pop","module","exports","delete","deletePropImmutableRec","concat","toggle","curVal","Boolean","merge","val"],"mappings":"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","file":"9551.fcc488819ce913ee6880.bundle.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import CONSTANTS from \"../../../editor/src/js/consts\";\r\nimport AltrpModel from \"../../../editor/src/js/classes/AltrpModel\";\r\nimport Resource from \"../../../editor/src/js/classes/Resource\";\r\nimport { changeCurrentUser } from \"./store/current-user/actions\";\r\nimport { changeCurrentUserProperty } from \"./store/current-user/actions\";\r\nimport { changeAppRoutes } from \"./store/routes/actions\";\r\nimport Route from \"./classes/Route\";\r\nimport { changePageState } from \"./store/altrp-page-state-storage/actions\";\r\nimport { changeAltrpMeta } from \"./store/altrp-meta-storage/actions\";\r\nimport queryString from \"query-string\";\r\nimport AltrpSVG from \"../../../editor/src/js/components/altrp-svg/AltrpSVG\";\r\nimport ArrayConverter from \"./classes/converters/ArrayConverter\";\r\nimport DataConverter from \"./classes/converters/DataConverter\";\r\nimport { changeFormFieldValue } from \"./store/forms-data-storage/actions\";\r\nimport { addResponseData } from \"./store/responses-storage/actions\";\r\nimport {getOffsetTopInElement} from \"./helpers/elements\";\r\nimport Area from \"./classes/Area\";\r\nimport {altrpFontsSet, GOOGLE_FONT} from \"./constants/fonts\";\r\nimport {addSettings} from \"./store/elements-settings/actions\";\r\nimport mutate from \"dot-prop-immutable\";\r\nexport function getRoutes() {\r\n\r\n  return import(/* webpackChunkName: 'Routes' */\"./classes/Routes.js\");\r\n}\r\n\r\nexport function isSSR(){\r\n  try {\r\n    return window.SSR;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n}\r\n/**\r\n * @return {IconsManager}\r\n * */\r\nexport function iconsManager() {\r\n  return window.iconsManager;\r\n}\r\n\r\n/**\r\n * Устанавливает заголовок страницы на фронтенде\r\n * @param {string} title\r\n */\r\nexport function setTitle(title) {\r\n  let titleElement = document.title;\r\n  if (!defaultTitle) {\r\n    defaultTitle = titleElement.innerHTML;\r\n  }\r\n  if (!title) {\r\n    title = defaultTitle;\r\n  }\r\n  if (document.title !== title) {\r\n    document.title = title;\r\n  }\r\n}\r\n\r\n/**\r\n * @return {boolean}\r\n * */\r\nexport function isEditor() {\r\n  const path = window.location?.pathname;\r\n  return path?.includes(\"/admin/editor\") || false;\r\n}\r\n\r\n/**\r\n * Переменная, в которой храниться изначальный заголовок\r\n * @let {string}\r\n */\r\nlet defaultTitle;\r\n\r\n/**\r\n * Парсит стрку вводимую пользователем для опций селекта\r\n * @param string\r\n */\r\nexport function parseOptionsFromSettings(string) {\r\n  if (!string) {\r\n    return [];\r\n  }\r\n  let options = string.split(\"\\n\");\r\n  let path = extractPathFromString(string);\r\n  let _optionsFromData = getDataByPath(path);\r\n  if (_.isArray(_optionsFromData)) {\r\n    return _optionsFromData;\r\n  }\r\n  options = options.map(option => {\r\n    let value = option.split(\"|\")[0];\r\n    value = value.trim();\r\n    let valuePath = extractPathFromString(value);\r\n    if (valuePath) {\r\n      value = getDataByPath(valuePath);\r\n    }\r\n    let label = option.split(\"|\")[1] || value || \"\";\r\n    !_.isString(label) && (label = \"\");\r\n    label = label.trim();\r\n    let labelPath = extractPathFromString(label);\r\n    if (labelPath) {\r\n      label = getDataByPath(labelPath);\r\n    }\r\n    return {\r\n      value,\r\n      label\r\n    };\r\n  });\r\n  return options;\r\n}\r\n\r\n/**\r\n * Получает медиа запрос для css по имени настройки\r\n * @param {string} screenSettingName\r\n * @return {string}\r\n */\r\nexport function getMediaQueryByName(screenSettingName) {\r\n  let mediaQuery = \"\";\r\n  CONSTANTS.SCREENS.forEach(screen => {\r\n    if (screen.name === screenSettingName) {\r\n      mediaQuery = screen.mediaQuery;\r\n    }\r\n  });\r\n  return mediaQuery;\r\n}\r\n/**\r\n * Получает медиа запрос для css по имени настройки\r\n * @param {string} screenSettingName\r\n * @return {string}\r\n */\r\nexport function getMediaSettingsByName(screenSettingName) {\r\n  let screen = CONSTANTS.SCREENS[0];\r\n  CONSTANTS.SCREENS.forEach(_screen => {\r\n    if (_screen.name === screenSettingName) {\r\n      screen = _screen;\r\n    }\r\n  });\r\n  return screen;\r\n}\r\n\r\n/**\r\n * Возвращает брейкпоинт относительно текущего размера экрана\r\n */\r\nexport function getCurrentBreakpoint() {\r\n  const currentWidth = getWindowWidth();\r\n  const breakPoints = CONSTANTS.SCREENS;\r\n  const breakPointsSizes = breakPoints.map(item => ({\r\n    name: item.name,\r\n    size: Number(item.width.split(\"px\")[0])\r\n  }));\r\n  for (let breakpoint of breakPointsSizes) {\r\n    if (breakpoint.size < currentWidth) {\r\n      return breakpoint.name;\r\n    }\r\n  }\r\n}\r\n/**\r\n *@param {string} URLTemplate\r\n *@param {{} | null} object\r\n */\r\nexport function parseURLTemplate(URLTemplate = \"\", object = null) {\r\n  let url = URLTemplate;\r\n  let protocol = \"\";\r\n  if (!isEditor()) {\r\n    object = _.assign(\r\n      _.cloneDeep(currentRouterMatch.getProperty(\"params\")),\r\n      object\r\n    );\r\n  }\r\n  url = url.trim();\r\n  if (url.indexOf(\"{{\") !== -1) {\r\n    url = replaceContentWithData(url, object);\r\n  }\r\n  if (url.indexOf(\"https://\") === 0) {\r\n    protocol = \"https://\";\r\n    url = url.replace(\"https://\", \"\");\r\n  }\r\n  if (url.indexOf(\"http://\") === 0) {\r\n    protocol = \"http://\";\r\n    url = url.replace(\"http://\", \"\");\r\n  }\r\n  if (url.indexOf(\"mailto:\") === 0) {\r\n    protocol = \"mailto:\";\r\n    url = url.replace(\"mailto:\", \"\");\r\n  }\r\n  if (url.indexOf(\"tel:\") === 0) {\r\n    protocol = \"tel:\";\r\n    url = url.replace(\"tel:\", \"\");\r\n  }\r\n  // columnEditUrl = columnEditUrl.replace(':id', row.original.id);\r\n  let idTemplates = url.match(/:([\\s\\S]+?)(\\/|$)/g);\r\n  if (!idTemplates) {\r\n    return protocol + url;\r\n  }\r\n  idTemplates.forEach(idTemplate => {\r\n    let replace = object[idTemplate.replace(/:|\\//g, \"\")] || \"\";\r\n    idTemplate = idTemplate.replace(\"/\", \"\");\r\n    url = url.replace(new RegExp(idTemplate, \"g\"), replace);\r\n  });\r\n  return protocol + url;\r\n}\r\n\r\nexport function getWindowWidth() {\r\n  let window;\r\n  if (isEditor()) {\r\n    window = document.getElementById(\"editorWindow\").offsetWidth;\r\n  } else {\r\n    window = document.getElementById(\"front-app\").offsetWidth;\r\n  }\r\n  return window;\r\n}\r\n\r\nexport function renderAssetIcon(asset, props = null) {\r\n  if (asset) {\r\n    if (asset.url && asset.type === \"svg\") {\r\n      return <AltrpSVG {...props} url={asset.url} />;\r\n    }\r\n    switch (asset.assetType) {\r\n      case \"icon\": {\r\n        return iconsManager().renderIcon(asset.name);\r\n      }\r\n      case \"image\": {\r\n        return React.createElement(\"img\", { ...props, src: asset.url });\r\n      }\r\n      case \"media\": {\r\n        return React.createElement(\"img\", { ...props, src: asset.url });\r\n      }\r\n    }\r\n  }\r\n  return \"\";\r\n}\r\n\r\n/**\r\n * @param {object} asset\r\n * @param {object} props\r\n * @return {React.DetailedReactHTMLElement<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> | React.DetailedReactHTMLElement<React.HTMLAttributes<T>, HTMLElement> | React.ReactSVGElement | React.DOMElement<React.DOMAttributes<T>, Element> | React.FunctionComponentElement<{}> | React.CElement<{}, React.ClassicComponent<{}, React.ComponentState>> | React.CElement<{}, React.Component<P, React.ComponentState>> | React.ReactElement<{}> | string}\r\n * @throws Исключение если иконка не найдена\r\n * */\r\nexport function renderAsset(asset, props = null) {\r\n  if(_.isEmpty(asset)){\r\n    return  ''\r\n  }\r\n  if(asset.type === 'image' && asset.dataUrl){\r\n    return React.createElement(\"img\", {\r\n      ...props,\r\n      src: asset.dataUrl,\r\n    });\r\n  }\r\n  if (asset.url && asset.type === \"svg\") {\r\n    return <AltrpSVG {...props} url={asset.url} rawSVG={asset.rawSVG} />;\r\n  }\r\n  if (! isSSR() && asset instanceof File) {\r\n    let refImg = React.createRef();\r\n    let fr = new FileReader();\r\n    fr.readAsDataURL(asset);\r\n    fr.onload = () => {\r\n      if (refImg.current) {\r\n        refImg.current.src = fr.result;\r\n        refImg.current.alt = asset.name;\r\n      }\r\n    };\r\n    return React.createElement(\"img\", {\r\n      ...props,\r\n      src: asset.url,\r\n      ref: refImg\r\n    });\r\n  }\r\n  switch (asset.assetType) {\r\n    case \"icon\": {\r\n      return iconsManager().renderIcon(asset.name, props);\r\n    }\r\n    case \"image\": {\r\n      return React.createElement(\"img\", { ...props, src: asset.url });\r\n    }\r\n    case \"media\": {\r\n      return React.createElement(\"img\", { ...props, src: asset.url });\r\n    }\r\n    case \"mediaBackground\": {\r\n      return React.createElement(\"div\", {\r\n        ...props,\r\n        style: { backgroundImage: `url(${asset.url})` }\r\n      });\r\n    }\r\n    case undefined: {\r\n      return React.createElement(\"img\", {\r\n        ...props,\r\n        src: \"/img/nullImage.png\"\r\n      });\r\n    }\r\n  }\r\n  return \"\";\r\n}\r\n\r\n/**\r\n * Парсим данный из строки в объект, если значение - путь, то берем значение из context\r\n * (если в context нет свойства, то не записываем)\r\n * @param {string} string\r\n * @param {AltrpModel} context\r\n * @param {boolean} allowObject\r\n * @param {boolean} replaceRight - нужно ли подставлять в значение параметра данные или оставить сырой шаблон\r\n * @param {boolean} replace - нужно ли подставлять в значение параметра данные или оставить сырой шаблон\r\n * @return {{}}\r\n */\r\nexport function parseParamsFromString(\r\n  string,\r\n  context = {},\r\n  allowObject = false,\r\n  replaceRight = true,\r\n  replace = true,\r\n) {\r\n  if (!(context instanceof AltrpModel)) {\r\n    context = new AltrpModel(context);\r\n  }\r\n  const params = {};\r\n  const urlParams =\r\n    window.currentRouterMatch instanceof AltrpModel\r\n      ? window.currentRouterMatch.getProperty(\"params\")\r\n      : {};\r\n\r\n  if (!string) {\r\n    return params;\r\n  }\r\n  const lines = string.split(\"\\n\");\r\n  lines.forEach(line => {\r\n    let [left, right] = line.split(\"|\");\r\n    if (!left || !right) {\r\n      return;\r\n    }\r\n    left = left.trim();\r\n    right = right.trim();\r\n    if (replace && left.indexOf(\"{{\") !== -1) {\r\n      left = replaceContentWithData(left);\r\n    }\r\n    if (replace && right.match(/{{([\\s\\S]+?)(?=}})/g)) {\r\n      if (\r\n        context.getProperty(\r\n          right.match(/{{([\\s\\S]+?)(?=}})/g)[0].replace(\"{{\", \"\")\r\n        ) ||\r\n        getDataByPath(right.match(/{{([\\s\\S]+?)(?=}})/g)[0].replace(\"{{\", \"\"))\r\n      ) {\r\n        //todo ошибка в IOS\r\n        params[left] =\r\n          context.getProperty(\r\n            right.match(/{{([\\s\\S]+?)(?=}})/g)[0].replace(\"{{\", \"\")\r\n          ) ||\r\n          getDataByPath(\r\n            right.match(/{{([\\s\\S]+?)(?=}})/g)[0].replace(\"{{\", \"\")\r\n          ) ||\r\n          \"\";\r\n      } else {\r\n        replaceRight\r\n          ? (params[left] = urlParams[\r\n              right.match(/{{([\\s\\S]+?)(?=}})/g)[0].replace(\"{{\", \"\")\r\n            ]\r\n              ? urlParams[\r\n                  right.match(/{{([\\s\\S]+?)(?=}})/g)[0].replace(\"{{\", \"\")\r\n                ]\r\n              : \"\")\r\n          : (params[left] = right);\r\n      }\r\n    } else {\r\n      params[left] = right;\r\n    }\r\n    if (!allowObject && _.isObject(params[left])) {\r\n      delete params[left];\r\n    }\r\n  });\r\n  return params;\r\n}\r\n\r\n/**\r\n * Функция для проверки условий\r\n * @param {array} conditions\r\n * @param {boolean} AND - логичекое И или ИЛИ\r\n * @param {AltrpModel} model\r\n * @param {boolean} dataByPath - брать ли данные из getDataByPath\r\n * @return {boolean}\r\n */\r\nexport function conditionsChecker(\r\n  conditions = [],\r\n  AND = true,\r\n  model,\r\n  dataByPath = true\r\n) {\r\n  if (!conditions.length) {\r\n    return true;\r\n  }\r\n  let result = AND;\r\n  _.each(conditions, c => {\r\n    if (AND) {\r\n      result *= conditionChecker(c, model, dataByPath);\r\n    } else {\r\n      result += conditionChecker(c, model, dataByPath);\r\n    }\r\n  });\r\n  return !!result;\r\n}\r\n\r\n/**\r\n * Функция для проверки одного условия\r\n * @param c\r\n * @param {AltrpModel} model\r\n * @param {boolean} dataByPath - брать ли данный из getDataByPath\r\n * @return {boolean}\r\n */\r\nfunction conditionChecker(c, model, dataByPath = true) {\r\n  let result = 0;\r\n  const { operator } = c;\r\n  let { modelField: left, value } = c;\r\n  if (dataByPath) {\r\n    value = getDataByPath(value, \"\", model, true);\r\n    left = getDataByPath(left, \"\", model);\r\n    return altrpCompare(left, value, operator);\r\n  }\r\n  return altrpCompare(model.getProperty(left), value, operator);\r\n  switch (operator) {\r\n    case \"empty\": {\r\n      return !model.getProperty(modelField, \"\");\r\n    }\r\n    case \"not_empty\": {\r\n      return !!model.getProperty(modelField, \"\");\r\n    }\r\n    case \"==\": {\r\n      return _.isEqual(model.getProperty(modelField, \"\"), value);\r\n    }\r\n    case \"<>\": {\r\n      return !_.isEqual(model.getProperty(modelField, \"\"), value);\r\n    }\r\n    case \">\": {\r\n      return Number(model.getProperty(modelField, \"\")) > Number(value);\r\n    }\r\n    case \">=\": {\r\n      return Number(model.getProperty(modelField, \"\")) >= Number(value);\r\n    }\r\n    case \"<\": {\r\n      return Number(model.getProperty(modelField, \"\")) < Number(value);\r\n    }\r\n    case \"<=\": {\r\n      return Number(model.getProperty(modelField, \"\")) <= Number(value);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Установить данные\r\n * @param {string} path\r\n * @param {*} value\r\n * @param {function | null} dispatch\r\n * @return {boolean}\r\n */\r\nexport function setDataByPath(path = \"\", value, dispatch = null) {\r\n  if (!path) {\r\n    return false;\r\n  }\r\n  if (path.indexOf(\",\") !== -1) {\r\n    let result = path\r\n      .split(\",\")\r\n      .map(path => setDataByPath(path, value, dispatch));\r\n    return true;\r\n  }\r\n  path = path.replace(\"{{\", \"\").replace(\"}}\", \"\");\r\n  path = path.trim();\r\n  switch (value) {\r\n    case \"true\":\r\n      value = true;\r\n      break;\r\n    case \"false\":\r\n      value = false;\r\n      break;\r\n    case \"null\":\r\n      value = null;\r\n      break;\r\n    case \"undefined\":\r\n      value = undefined;\r\n      break;\r\n  }\r\n\r\n  if (path.indexOf(\"altrppagestate.\") === 0) {\r\n    path = path.replace(\"altrppagestate.\", \"\");\r\n    if (!path) {\r\n      return false;\r\n    }\r\n    const oldValue = appStore.getState().altrpPageState.getProperty(path);\r\n    if (_.isEqual(oldValue, value)) {\r\n      return true;\r\n    }\r\n    if (_.isFunction(dispatch)) {\r\n      dispatch(changePageState(path, value));\r\n    } else {\r\n      appStore.dispatch(changePageState(path, value));\r\n    }\r\n    return true;\r\n  }\r\n  if (path.indexOf(\"altrpmeta.\") === 0) {\r\n    path = path.replace(\"altrpmeta.\", \"\");\r\n    if (!path) {\r\n      return false;\r\n    }\r\n    const oldValue = appStore.getState().altrpMeta.getProperty(path);\r\n    if (_.isEqual(oldValue, value)) {\r\n      return true;\r\n    }\r\n    if (_.isFunction(dispatch)) {\r\n      dispatch(changeAltrpMeta(path, value));\r\n    } else {\r\n      appStore.dispatch(changeAltrpMeta(path, value));\r\n    }\r\n    return true;\r\n  }\r\n  if (path.indexOf(\"altrpuser.local_storage.\") === 0) {\r\n    path = path.replace(\"altrpuser.\", \"\");\r\n    if (!path) {\r\n      return false;\r\n    }\r\n    const oldValue = appStore.getState().currentUser.getProperty(path);\r\n    if (_.isEqual(oldValue, value)) {\r\n      return true;\r\n    }\r\n    if (_.isFunction(dispatch)) {\r\n      dispatch(changeCurrentUserProperty(path, value));\r\n    } else {\r\n      appStore.dispatch(changeCurrentUserProperty(path, value));\r\n    }\r\n    return true;\r\n  }\r\n  if (path.indexOf(\"altrpforms.\") === 0) {\r\n    path = path.replace(\"altrpforms.\", \"\");\r\n    if (!path) {\r\n      return false;\r\n    }\r\n    const [formId, fieldName] = path.split(\".\");\r\n    const { formsStore } = appStore.getState();\r\n\r\n    const oldValue = _.get(formsStore, path);\r\n    if (_.isEqual(oldValue, value)) {\r\n      return true;\r\n    }\r\n    if (_.isFunction(dispatch)) {\r\n      dispatch(changeFormFieldValue(path, value));\r\n    } else {\r\n      appStore.dispatch(changeFormFieldValue(fieldName, value, formId, true));\r\n    }\r\n  } else\r\n  if (path.indexOf(\"altrpelements.\") === 0) {\r\n    const pathElements = path.split(\".\");\r\n    let [prefix, elementId, updateType, ...propName] = pathElements;\r\n    const component = getComponentByElementId(elementId);\r\n    if (!component) {\r\n      return true;\r\n    }\r\n    propName =  propName.join('.');\r\n    switch (updateType) {\r\n      case \"settings\": {\r\n        component.props.element.updateSetting(value, propName);\r\n        if(window['h-altrp']){\r\n          let settings = component.props.element.settings;\r\n          settings = mutate.set(settings, propName, value)\r\n          appStore.dispatch(addSettings(component.props.element.getId(), component.props.element.getName(), settings));\r\n        }\r\n        return true;\r\n      }\r\n      default: {\r\n        return true;\r\n      }\r\n    }\r\n  } else\r\n  if (path.indexOf(\"altrpareas.\") === 0) {\r\n    const pathElements = path.split(\".\");\r\n    const [prefix,  areaName,  updateType, propName] = pathElements;\r\n    let area = window.page_areas.find(area => area.id === areaName);\r\n    if(area && updateType === 'settings'){\r\n      if(! (area instanceof Area)){\r\n        area = Area.areaFactory(area);\r\n      }\r\n      area.setSetting(propName, value);\r\n    }\r\n  } else\r\n  if (path.indexOf(\"altrpstorage.\") === 0) {\r\n    path = path.replace(\"altrpstorage.\", \"\");\r\n    const currentStorage = getDataFromLocalStorage(\"altrpstorage\", {});\r\n    _.set(currentStorage, path, value);\r\n    saveDataToLocalStorage(\"altrpstorage\", currentStorage);\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Получить данные из окружения\r\n * @param {string} path\r\n * @param {*} _default\r\n * @param {{} | AltrpModel | null} context\r\n * @param {boolean} altrpCheck - проверять ли altrp\r\n * @return {*}\r\n */\r\nexport function getDataByPath(\r\n  path = \"\",\r\n  _default = null,\r\n  context = null,\r\n  altrpCheck = false\r\n) {\r\n  if (!path) {\r\n    return _default;\r\n  }\r\n  if (path.indexOf(\"{{\") !== -1) {\r\n    path = replaceContentWithData(path, context);\r\n  }\r\n  /**\r\n   * проверим путь\r\n   */\r\n  if (altrpCheck && path.trim().indexOf(\"altrp\") !== 0) {\r\n    return path;\r\n  }\r\n  path = path.trim();\r\n  let trueValue, falseValue;\r\n  if (path.indexOf(\"?\") !== -1 && path.indexOf(\":\") !== -1) {\r\n    let [_path, _right] = path.split(\"?\");\r\n    [trueValue, falseValue] = _right.split(\":\");\r\n    trueValue = trueValue.trim();\r\n    if (trueValue.indexOf(\".\") !== -1) {\r\n      trueValue = getDataByPath(trueValue, _default, context);\r\n    }\r\n\r\n    falseValue = falseValue.trim();\r\n    if (falseValue.indexOf(\".\") !== -1) {\r\n      falseValue = getDataByPath(falseValue, _default, context);\r\n    }\r\n    path = _path.trim();\r\n  }\r\n  /**\r\n   * @type {AltrpModel} currentModel\r\n   */\r\n  let {\r\n    currentModel,\r\n    currentDataStorage,\r\n    altrpresponses,\r\n    formsStore,\r\n    altrpPageState,\r\n    altrpPage,\r\n    currentUser,\r\n    altrpMeta\r\n  } = appStore.getState();\r\n  if (context) {\r\n    currentModel =\r\n      context instanceof AltrpModel ? context : new AltrpModel(context);\r\n  }\r\n  let urlParams =\r\n    window.currentRouterMatch instanceof AltrpModel\r\n      ? window.currentRouterMatch.getProperty(\"params\")\r\n      : {};\r\n\r\n  let queryData = queryString.parseUrl(window.location.href).query;\r\n\r\n  urlParams = _.assign(queryData, urlParams);\r\n\r\n  let value = _default;\r\n  if (!_.isString(path)) {\r\n    return value;\r\n  }\r\n  if (path.indexOf(\"altrpdata.\") === 0) {\r\n    path = path.replace(\"altrpdata.\", \"\");\r\n    value = currentDataStorage\r\n      ? currentDataStorage.getProperty(path, _default)\r\n      : \"\";\r\n  } else if (path.indexOf(\"altrpresponses.\") === 0) {\r\n    path = path.replace(\"altrpresponses.\", \"\");\r\n    value = altrpresponses ? altrpresponses.getProperty(path, _default) : \"\";\r\n  } else if (path.indexOf(\"altrpmeta.\") === 0) {\r\n    path = path.replace(\"altrpmeta.\", \"\");\r\n    value = altrpMeta ? altrpMeta.getProperty(path, _default) : \"\";\r\n  } else if (path.indexOf(\"altrppagestate.\") === 0) {\r\n    path = path.replace(\"altrppagestate.\", \"\");\r\n    value = altrpPageState ? altrpPageState.getProperty(path, _default) : \"\";\r\n  } else if (path.indexOf(\"altrpuser.\") === 0) {\r\n    path = path.replace(\"altrpuser.\", \"\");\r\n    value = currentUser ? currentUser.getProperty(path, _default) : \"\";\r\n  } else if (path === \"altrpuser\") {\r\n    value = currentUser.getData();\r\n  } else if (path === \"altrpmodel\") {\r\n    value = currentModel.getData();\r\n  } else if (path.indexOf(\"altrptime.\") === 0) {\r\n    value = getTimeValue(path.replace(\"altrptime.\", \"\"));\r\n  } else if (path.indexOf(\"altrpforms.\") === 0) {\r\n    value = _.get(formsStore, path.replace(\"altrpforms.\", \"\"), _default);\r\n  } else if (path.indexOf(\"altrppage.\") === 0) {\r\n    value = altrpPage\r\n      ? altrpPage.getProperty(path.replace(\"altrppage.\", \"\"), _default)\r\n      : \"\";\r\n  } else if (path.indexOf(\"altrpelements.\") === 0) {\r\n    const pathElements = path.split(\".\");\r\n    const [prefix, elementId, updateType, propName] = pathElements;\r\n    const component = getComponentByElementId(elementId);\r\n    if (!component) {\r\n      value = \"\";\r\n    } else {\r\n      switch (updateType) {\r\n        case \"settings\":\r\n          {\r\n            value = component.props.element.getSettings(propName);\r\n          }\r\n          break;\r\n        default: {\r\n          value = \"\";\r\n        }\r\n      }\r\n    }\r\n  } else if (path.indexOf(\"altrpstorage.\") === 0) {\r\n    path = path.replace(\"altrpstorage.\", \"\");\r\n    value = getDataFromLocalStorage(\"altrpstorage\", {});\r\n    value = _.get(value, path, _default);\r\n  } else if (path.indexOf(\"altrpareas.\") === 0) {\r\n    const pathElements = path.split(\".\");\r\n    const [prefix,  areaName,  updateType, propName] = pathElements;\r\n    let area = window.page_areas.find(area => area.id === areaName);\r\n    if(area && updateType === 'settings'){\r\n      if(! (area instanceof Area)){\r\n        area = Area.areaFactory(area);\r\n      }\r\n      value = area.getSetting(propName, _default);\r\n    }\r\n  } else {\r\n    value = currentModel.getProperty(path)\r\n      ? currentModel.getProperty(path)\r\n      : urlParams[path];\r\n    if (!value) {\r\n      value = _default;\r\n    }\r\n  }\r\n  if (trueValue || falseValue) {\r\n    value = value ? trueValue : falseValue;\r\n  }\r\n  return value;\r\n}\r\n\r\n/**\r\n * Извелкает путь из строки\r\n * @param {string} string\r\n * @return {string}\r\n */\r\nexport function extractPathFromString(string = \"\") {\r\n  let path = \"\";\r\n  if (_.isString(string)) {\r\n    // path = string.match(/(?<={{)([\\s\\S]+?)(?=}})/g)[0]\r\n    path = _.get(string.match(/{{([\\s\\S]+?)(?=}})/g), \"0\", \"\").replace(\r\n      \"{{\",\r\n      \"\"\r\n    );\r\n  }\r\n  return path;\r\n}\r\n/**\r\n * Возвращает новый объект из свояств объекта, в именах которых присутствует префикс prefix\r\n * @param {string} prefix - строка для поиска (например 'test')\r\n * @param {{}} object - если в объекте есть свойство test__test то вернет {test: test__test_value}\r\n * @return {{}}\r\n */\r\nexport function getObjectByPrefix(prefix = \"\", object = {}) {\r\n  let result = {};\r\n  if (!prefix) {\r\n    return result;\r\n  }\r\n  _.forEach(object, (value, key) => {\r\n    if (key.indexOf(`${prefix}__`, \"\") === 0) {\r\n      result[key.replace(`${prefix}__`, \"\")] = value;\r\n    }\r\n  });\r\n  return result;\r\n}\r\n\r\n/**\r\n * Возвращает объект из json-строки если возможно\r\n * @param {string} string\r\n * @param {*} _default\r\n * @return {*}\r\n */\r\nexport function mbParseJSON(string, _default = null) {\r\n  try {\r\n    return JSON.parse(string);\r\n  } catch (e) {\r\n    return _default === null ? string : _default;\r\n  }\r\n}\r\n\r\n/**\r\n * Функция для сравнения значений\r\n * @param leftValue\r\n * @param rightValue\r\n * @param operator\r\n * @return {boolean}\r\n */\r\nexport function altrpCompare(\r\n  leftValue = \"\",\r\n  rightValue = \"\",\r\n  operator = \"empty\"\r\n) {\r\n  switch (operator) {\r\n    case \"empty\": {\r\n      return _.isEmpty(leftValue);\r\n    }\r\n    case \"not_empty\": {\r\n      return !_.isEmpty(leftValue);\r\n    }\r\n    case \"null\": {\r\n      return !leftValue;\r\n    }\r\n    case \"not_null\": {\r\n      return !!leftValue;\r\n    }\r\n    case \"==\": {\r\n      if (!leftValue && !rightValue) {\r\n        return true;\r\n      }\r\n      if (!(_.isObject(leftValue) || _.isObject(rightValue))) {\r\n        return leftValue == rightValue;\r\n      } else {\r\n        return _.isEqual(leftValue, rightValue);\r\n      }\r\n    }\r\n    case \"===\": {\r\n      return _.isEqual(leftValue, rightValue);\r\n    }\r\n    case \"<>\": {\r\n      return !_.isEqual(leftValue, rightValue);\r\n    }\r\n    case \">\": {\r\n      return Number(leftValue) > Number(rightValue);\r\n    }\r\n    case \">=\": {\r\n      return Number(leftValue) >= Number(rightValue);\r\n    }\r\n    case \"<\": {\r\n      return Number(leftValue) < Number(rightValue);\r\n    }\r\n    case \"<=\": {\r\n      return Number(leftValue) <= Number(rightValue);\r\n    }\r\n    case \"in\": {\r\n      if (_.isString(rightValue)) {\r\n        return rightValue.indexOf(leftValue) !== -1;\r\n      }\r\n      if (!_.isArray(rightValue)) {\r\n        return false;\r\n      }\r\n      let result = false;\r\n      rightValue.forEach(item => {\r\n        if (!result) {\r\n          result = altrpCompare(leftValue, item, \"==\");\r\n        }\r\n      });\r\n      return result;\r\n    }\r\n    case \"not_in\": {\r\n      return !altrpCompare(leftValue, rightValue, \"in\");\r\n    }\r\n    case \"contain\": {\r\n      if (_.isString(leftValue)) {\r\n        return leftValue.indexOf(rightValue) !== -1;\r\n      }\r\n      if (!_.isArray(leftValue)) {\r\n        return false;\r\n      }\r\n      let result = false;\r\n      leftValue.forEach(item => {\r\n        if (!result) {\r\n          result = altrpCompare(rightValue, item, \"contain\");\r\n        }\r\n      });\r\n      return result;\r\n    }\r\n    case \"not_contain\": {\r\n      return !altrpCompare(leftValue, rightValue, \"contain\");\r\n    }\r\n  }\r\n}\r\n\r\nexport const CONDITIONS_OPTIONS = [\r\n  {\r\n    value: \"empty\",\r\n    label: \"Empty\"\r\n  },\r\n  {\r\n    value: \"not_empty\",\r\n    label: \"Not Empty\"\r\n  },\r\n  {\r\n    value: \"null\",\r\n    label: \"Null\"\r\n  },\r\n  {\r\n    value: \"not_null\",\r\n    label: \"Not Null\"\r\n  },\r\n  {\r\n    value: \"==\",\r\n    label: \"Equals\"\r\n  },\r\n  {\r\n    value: \"<>\",\r\n    label: \"Not Equals\"\r\n  },\r\n  {\r\n    value: \"between\",\r\n    label: \"Between\"\r\n  },\r\n  {\r\n    value: \">\",\r\n    label: \">\"\r\n  },\r\n  {\r\n    value: \">=\",\r\n    label: \">=\"\r\n  },\r\n  {\r\n    value: \"<\",\r\n    label: \"<\"\r\n  },\r\n  {\r\n    value: \"<=\",\r\n    label: \"<=\"\r\n  },\r\n  {\r\n    value: \"in\",\r\n    label: \"In\"\r\n  },\r\n  {\r\n    value: \"not_in\",\r\n    label: \"Not In\"\r\n  },\r\n  {\r\n    value: \"contain\",\r\n    label: \"Contain\"\r\n  },\r\n  {\r\n    value: \"not_contain\",\r\n    label: \"Not Contain\"\r\n  }\r\n];\r\n\r\nexport function isElementTopInViewport(top, scrollTop, clientHeight) {\r\n  return top > scrollTop && top < scrollTop + clientHeight;\r\n}\r\n\r\nexport function getTopPosition(element) {\r\n  let top = element.offsetTop;\r\n\r\n  while (element.offsetParent) {\r\n    element = element.offsetParent;\r\n    top += element.offsetTop;\r\n  }\r\n\r\n  return top;\r\n}\r\n\r\n/**\r\n * Получить какое-то время по шаблону `YYYY-MM-DD`\r\n * @param {string} path\r\n * @param {string | null} defaultValue\r\n */\r\nexport function getTimeValue(path, defaultValue = null) {\r\n  let value = defaultValue;\r\n\r\n  switch (path) {\r\n    case \"now\":\r\n      {\r\n        value = _.now();\r\n      }\r\n      break;\r\n    case \"month_start\":\r\n      {\r\n        value = startOfMonth(new Date());\r\n      }\r\n      break;\r\n    case \"prev_month_start\":\r\n      {\r\n        value = startOfMonth(new Date(), -1);\r\n      }\r\n      break;\r\n    case \"year_start\":\r\n      {\r\n        value = startOfYear(new Date());\r\n      }\r\n      break;\r\n    case \"prev_year_start\":\r\n      {\r\n        value = startOfYear(new Date(), -1);\r\n      }\r\n      break;\r\n    case \"prev_week_start\":\r\n      {\r\n        value = getPrevWeekStart();\r\n      }\r\n      break;\r\n    case \"next_week_start\":\r\n      {\r\n        value = getNextWeekStart();\r\n      }\r\n      break;\r\n    case \"week_start\":\r\n      {\r\n        value = getWeekStart();\r\n      }\r\n      break;\r\n  }\r\n  const {moment} = window.altrpHelpers;\r\n  value = moment(value).format(\"YYYY-MM-DD\");\r\n  return value;\r\n}\r\n\r\n/**\r\n * Получить начало месяца\r\n * @param {Date} date\r\n * @param {int} monthShift\r\n * @return {Date}\r\n */\r\nexport function startOfMonth(date, monthShift = 0) {\r\n  return new Date(date.getFullYear(), date.getMonth() + monthShift, 1);\r\n}\r\n/**\r\n * Получить начало месяца\r\n * @param {Date} date\r\n * @param {int} yearShift\r\n * @return {Date}\r\n */\r\nexport function startOfYear(date, yearShift = 0) {\r\n  return new Date(date.getFullYear() + yearShift, 0, 1);\r\n}\r\n/**\r\n * Получить начало месяца\r\n * @param {Date} date\r\n * @param {int} weekShift\r\n * @return {Date}\r\n */\r\nexport function startOfWeek(date, weekShift = 0) {\r\n  const {moment} = window.altrpHelpers;\r\n  return moment(\r\n    new Date(\r\n      date.getFullYear(),\r\n      date.getMonth(),\r\n      date.getDate() + weekShift * 7\r\n    )\r\n  ).firstDayOfWeek();\r\n}\r\n\r\n/**\r\n * Получить ссылку на состояние хранилища\r\n * @return {*}\r\n */\r\nexport function getCurrentStoreState() {\r\n  return appStore.getState();\r\n}\r\n\r\n/**\r\n * Скроллит к элементу\r\n * @param {{} | HTMLElement}scrollbars\r\n * @param {{}}element\r\n */\r\nexport function scrollToElement(scrollbars, element) {\r\n  let { container } = scrollbars;\r\n  if(scrollbars instanceof HTMLElement){\r\n    container = scrollbars;\r\n    let scroll = getOffsetTopInElement(element, scrollbars);\r\n    if(scroll){\r\n      scrollbars.scrollTop =scroll;\r\n    }\r\n\r\n  }\r\n  /**\r\n   * @member {HTMLElement} container\r\n   */\r\n  if (!container) {\r\n    return;\r\n  }\r\n  if (!_.isFunction(scrollbars.scrollTop)) {\r\n    return;\r\n  }\r\n\r\n  let parent = element.offsetParent;\r\n  let top = element.offsetTop;\r\n\r\n  while (parent !== container) {\r\n    if (! parent) {\r\n      /**\r\n       * ушли в самый корень ДОМ и контейнер не встретился\r\n       */\r\n      return;\r\n    }\r\n    top += parent.offsetTop;\r\n    parent = parent.offsetParent;\r\n  }\r\n  /**\r\n   * не получили каеое-либо значение\r\n   */\r\n  if (! top) {\r\n    return;\r\n  }\r\n  scrollbars.scrollTop(top);\r\n}\r\n\r\n/**\r\n * Вернет HTML элемент React компонента, у которого id = elementId\r\n * @param {string} elementId\r\n * @return {null | HTMLElement}\r\n */\r\nexport function getHTMLElementById(elementId = \"\") {\r\n  let HTMLElement = null;\r\n  if (!elementId || !elementId.trim()) {\r\n    return HTMLElement;\r\n  }\r\n  elementId = elementId.trim();\r\n  appStore.getState().elements.forEach(el => {\r\n    if (!el.elementWrapperRef.current) {\r\n      return;\r\n    }\r\n    if (!el.elementWrapperRef.current.id) {\r\n      return;\r\n    }\r\n    if (\r\n      el.elementWrapperRef.current.id\r\n        .toString()\r\n        .split(\" \")\r\n        .indexOf(elementId) !== -1\r\n    ) {\r\n      HTMLElement = el.elementWrapperRef.current;\r\n    }\r\n  });\r\n  return HTMLElement;\r\n}\r\n\r\n/**\r\n * Вернет HTML  React компонента, у которого props.element = element\r\n * @param {FrontElement} element\r\n * @return {null | HTMLElement}\r\n */\r\nexport function getWrapperHTMLElementByElement(element) {\r\n  if (!element) {\r\n    return null;\r\n  }\r\n  let HTMLElement = null;\r\n  appStore.getState().elements.forEach(el => {\r\n    if (element === el.props.element) {\r\n      HTMLElement = el.elementWrapperRef.current;\r\n    }\r\n  });\r\n  return HTMLElement;\r\n}\r\n/**\r\n * Вернет HTML  React компонент, у которого elementWrapperRef.current.id = elementId\r\n * @param {string} elementId\r\n * @return {null | HTMLElement}\r\n */\r\nexport function getComponentByElementId(elementId = \"\") {\r\n  let component = null;\r\n  if (!elementId || !elementId.trim()) {\r\n    return component;\r\n  }\r\n  elementId = elementId.trim();\r\n  appStore.getState().elements.forEach(el => {\r\n    if (!el.elementWrapperRef.current) {\r\n      return;\r\n    }\r\n    if (!el.elementWrapperRef.current.id) {\r\n      return;\r\n    }\r\n    if (\r\n      el.elementWrapperRef.current.id\r\n        .toString()\r\n        .split(\" \")\r\n        .indexOf(elementId) !== -1\r\n    ) {\r\n      component = el;\r\n    }\r\n  });\r\n  return component;\r\n}\r\n\r\n/**\r\n * Начало следующей недели\r\n * @return {moment.Moment}\r\n */\r\nfunction getNextWeekStart() {\r\n  const {moment} = window.altrpHelpers;\r\n  let today = moment();\r\n  let daystoMonday = 7 - (today.isoWeekday() - 1);\r\n  return today.add(daystoMonday, \"days\");\r\n}\r\n\r\n/**\r\n * Начало текущей недели\r\n * @return {moment.Moment}\r\n */\r\nfunction getWeekStart() {\r\n  const {moment} = window.altrpHelpers;\r\n  let today = moment();\r\n  let daystoMonday = today.isoWeekday() - 1;\r\n  return today.subtract(daystoMonday, \"days\");\r\n}\r\n\r\n/**\r\n * Конец Следующей недели\r\n * @return {moment.Moment}\r\n */\r\nfunction getNextWeekEnd() {\r\n  let nextMonday = getNextWeekStart();\r\n  return nextMonday.add(\"days\", 6);\r\n}\r\n\r\n/**\r\n * Начало предыдущей недели\r\n * @return {moment.Moment}\r\n */\r\nfunction getPrevWeekStart() {\r\n  const {moment} = window.altrpHelpers;\r\n  let today = moment();\r\n  let daystoLastMonday = today.isoWeekday() - 1 + 7;\r\n  return today.subtract(daystoLastMonday, \"days\");\r\n}\r\n\r\n/**\r\n * Конец предыдущей недели\r\n * @return {moment.Moment}\r\n */\r\nfunction getPrevWeekEnd() {\r\n  let lastMonday = getPrevWeekStart();\r\n  return lastMonday.add(\"days\", 6);\r\n}\r\n\r\n/**\r\n * Удаляет пустые свойства в объектах\r\n */\r\nexport function clearEmptyProps() {}\r\n\r\n/**\r\n * Заменяет в тексте конструкции типа {{altrpdata...}} на данные\r\n * @param content\r\n * @param {{} | null} modelContext\r\n */\r\n\r\nexport function replaceContentWithData(content = \"\", modelContext = null) {\r\n  if(window.SSR){\r\n    return  content;\r\n  }\r\n  let paths = _.isString(content) ? content.match(/{{([\\s\\S]+?)(?=}})/g) : null;\r\n  if (_.isArray(paths)) {\r\n    paths.forEach(path => {\r\n      path = path.replace(\"{{\", \"\");\r\n      let value = getDataByPath(path, \"\", modelContext);\r\n      if (value === 0) {\r\n        value = \"0\";\r\n      }\r\n      path = escapeRegExp(path);\r\n      content = content.replace(new RegExp(`{{${path}}}`, \"g\"), value || \"\");\r\n    });\r\n  }\r\n  return content;\r\n}\r\n\r\n/**\r\n * Вспомогательные функции для работы с данными виджетов\r\n */\r\nwindow.altrphelpers = {\r\n  /**\r\n   * Возвращает сумму полей в массиве объектов\r\n   * @param {string}fieldName\r\n   * @return {number}\r\n   */\r\n  sumFields: function sumFields(fieldName) {\r\n    let sum = 0;\r\n    if (!_.isObject(this.context)) {\r\n      return sum;\r\n    }\r\n    if (!_.isArray(this.context)) {\r\n      this.context = [this.context];\r\n    }\r\n    this.context.forEach(c => {\r\n      sum += Number(_.get(c, fieldName)) || 0;\r\n    });\r\n    return sum;\r\n  }\r\n};\r\n\r\n/**\r\n * Функция выводит определенный элемент на печать\r\n * @params {HTMLElement[]} elements\r\n * @params {null || HTMLElement} stylesTag\r\n */\r\nexport function printElements(elements, title = \"\") {\r\n  let myWindow = window.open(\"\", \"my div\", \"height=400,width=1200\");\r\n  myWindow.document.write(`<html><head><title>${title}</title></head>`);\r\n  myWindow.document.write(\"<body >\");\r\n  elements = _.isArray(elements) ? elements : [elements];\r\n  let headContent = '';\r\n  myWindow.document.write(\"</body></html>\");\r\n  let bodyContent = '';\r\n  elements.forEach(element => {\r\n    if(element instanceof HTMLHeadElement){\r\n      headContent = element.innerHTML;\r\n      return\r\n    }\r\n    bodyContent += element.outerHTML;\r\n  });\r\n  myWindow.document.close(); // necessary for IE >= 10\r\n  myWindow.document.head.innerHTML = headContent;\r\n  bodyContent = bodyContent\r\n    .replace(/<tr/g, '<div className=\"altrp-table-tr\"')\r\n    .replace(/<th/g, '<div')\r\n    .replace(/<\\/tr>/g, '</div>')\r\n    .replace(/<\\/th>/g, '</div>')\r\n  myWindow.document.body.innerHTML = bodyContent;\r\n  myWindow.focus(); // necessary for IE >= 10\r\n  delay(250).then(()=>{\r\n    myWindow.print();\r\n    myWindow.close();\r\n  })\r\n  return true;\r\n}\r\n\r\n/**\r\n * Функция конвертирует HTML в PDF\r\n * @params {HTMLElement[]} element\r\n * @params {string} filename\r\n */\r\nexport async function elementsToPdf(elements, filename = \"\") {\r\n  let html2pdf = (await import(/* webpackChunkName: 'html2pdf' */\"html2pdf.js\")).default;\r\n  elements = elements.body ? elements.body : elements;\r\n  if (!elements) {\r\n    return {\r\n      success: true\r\n    };\r\n  }\r\n  let myWindow = window.open(\"\", \"my div\", \"height=400,width=1440\");\r\n  myWindow.document.write(`<html><head><title></title></head>`);\r\n  myWindow.document.write(\"</head><body >\");\r\n  elements = _.isArray(elements) ? elements : [elements];\r\n  elements.forEach(element => {\r\n    myWindow.document.write(element.outerHTML);\r\n  });\r\n  myWindow.document.write(\"</body></html>\");\r\n  return new Promise((resolve, reject) => {\r\n    html2pdf()\r\n      .from(myWindow.document.body)\r\n      .save(filename);\r\n    myWindow.close();\r\n    resolve({ success: true });\r\n  });\r\n}\r\n\r\n/**\r\n * Забирает данные из HTML таблицы\r\n * @param {{}}HTMLElement\r\n */\r\nexport function dataFromTable(HTMLElement) {\r\n  const data = [];\r\n  const headers = [];\r\n  if (!(HTMLElement && HTMLElement.querySelectorAll)) {\r\n    return data;\r\n  }\r\n  let table = HTMLElement.querySelector(\".altrp-table\");\r\n  if (!table && HTMLElement.querySelector(\".altrp-table-tr\")) {\r\n    table = HTMLElement;\r\n  }\r\n  if (!table) {\r\n    return data;\r\n  }\r\n  const ths = table.querySelectorAll(\".altrp-table-th\");\r\n  _.each(ths, th => {\r\n    // if (th.innerText) {\r\n    headers.push(th.innerText || \"\");\r\n    // }\r\n  });\r\n  const rows = table.querySelectorAll(\".altrp-table-tbody .altrp-table-tr\");\r\n  _.each(rows, row => {\r\n    const cells = row.querySelectorAll(\".altrp-table-td\");\r\n    const part = {};\r\n    headers.forEach((header, idx) => {\r\n      if (!header) {\r\n        return;\r\n      }\r\n      part[header] = cells[idx].innerText || \"\";\r\n    });\r\n    data.push(part);\r\n  });\r\n  return data;\r\n}\r\n\r\n/**\r\n * Создать csv-файл из данных и скачать\r\n * @param {{}} data\r\n * @param {string} filename\r\n */\r\nexport async function dataToCSV(data = {}, filename) {\r\n  filename = filename || \"File\";\r\n  if (!data) {\r\n    return { success: false };\r\n  }\r\n  if (_.isObject() && !_.isArray(data)) {\r\n    data = [data];\r\n  }\r\n  if (!_.isArray(data)) {\r\n    return { success: false };\r\n  }\r\n\r\n  let headers = _.toPairs(data[0]).map(([name, value]) => name);\r\n  let csvContent =\r\n    // 'data:text/csv;charset=utf-8,'\r\n    \"\" +\r\n    headers.join(\";\") +\r\n    \"\\n\" +\r\n    data\r\n      .map(item => {\r\n        let line = \"\";\r\n        headers.forEach((h, idx) => {\r\n          let value = _.get(item, h) || \"\";\r\n          if (_.isObject(value)) {\r\n            value = JSON.stringify(value);\r\n          }\r\n\r\n          line +=\r\n            (_.isString(value) ? value.replace(/\\s/g, \" \") : value) +\r\n            (headers.length === idx + 1 ? \"\" : \";\");\r\n        });\r\n        return line;\r\n      })\r\n      .join(\"\\n\");\r\n  let blob = new Blob([csvContent], {\r\n    type: \"text/csv\",\r\n    charset: \"windows-1251\"\r\n    // charset: 'utf-8',\r\n  });\r\n  let link = document.createElement(\"a\");\r\n  link.setAttribute(\"href\", window.URL.createObjectURL(blob));\r\n  link.setAttribute(\"download\", filename + \".csv\");\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n  return { success: true };\r\n}\r\n\r\n/**\r\n * Генерация и загрузка XLS-файла\r\n * @param {Object data} Объект данных\r\n * @param {String} filename Имя файла\r\n */\r\nexport async function dataToXLS(data, filename = \"table\", templateName = \"\") {\r\n  const formData = new FormData();\r\n  formData.append(\"filename\", filename);\r\n  formData.append(\"data\", JSON.stringify(data));\r\n  formData.append(\"template\", templateName);\r\n\r\n  const response = await fetch(\"/api/export-excel\", {\r\n    method: \"POST\",\r\n    body: formData\r\n  });\r\n\r\n  return await response.blob();\r\n}\r\n\r\n/**\r\n * Генерация и загрузка XML-файла\r\n * @param {Object data} Объект данных\r\n * @param {String} filename Имя файла\r\n */\r\nexport async function dataToXML(data, filename = \"table\") {\r\n  const formData = new FormData();\r\n  formData.append(\"filename\", filename);\r\n  formData.append(\"data\", JSON.stringify(data));\r\n\r\n  const response = await fetch(\"/api/export-xml\", {\r\n    method: \"POST\",\r\n    body: formData\r\n  });\r\n\r\n  return await response.blob();\r\n}\r\n\r\n/**\r\n * Логиним пользователя\r\n * @param {{}} data\r\n * @param {string} formId\r\n * @return {Promise<{}>}\r\n */\r\nexport async function altrpLogin(data = {}, formId = \"login\") {\r\n  data.altrpLogin = true;\r\n  let res;\r\n  try {\r\n    res = await new Resource({ route: \"/login\" }).post(data);\r\n  } catch (error) {\r\n    let status = error.status;\r\n    if (error.res instanceof Promise) {\r\n      res = await error.res;\r\n    }\r\n    if (error instanceof Promise) {\r\n      res = await error;\r\n    }\r\n    res = mbParseJSON(res, {});\r\n    status && (res.__status = status);\r\n  }\r\n  appStore.dispatch(addResponseData(formId, res));\r\n  if (!(res.success || res._token)) {\r\n    return {\r\n      success: false\r\n    };\r\n  }\r\n  _token = res._token;\r\n\r\n  let currentUser = await new Resource({\r\n    route: \"/ajax/current-user\"\r\n  }).getAll();\r\n  currentUser = currentUser.data;\r\n  appStore.dispatch(changeCurrentUser(currentUser));\r\n  let routes = [];\r\n  try {\r\n    let routesData = await new Resource({\r\n      route: \"/ajax/routes\"\r\n    }).getAll();\r\n\r\n    for (let _data of routesData.pages) {\r\n      routes.push(Route.routeFabric(_data));\r\n    }\r\n    appStore.dispatch(changeAppRoutes(routes));\r\n  } catch (err) {\r\n    console.error(err);\r\n    return { success: false };\r\n  }\r\n  return { success: true };\r\n}\r\n\r\n/**\r\n * Выход\r\n * @return {Promise<{}>}\r\n */\r\nexport async function altrpLogout() {\r\n  let res = await new Resource({ route: \"/logout\" }).post();\r\n  if (!(res.success || res._token)) {\r\n    return {\r\n      success: false\r\n    };\r\n  }\r\n  _token = res._token;\r\n\r\n  let currentUser = await new Resource({\r\n    route: \"/ajax/current-user\"\r\n  }).getAll();\r\n  currentUser = currentUser.data;\r\n  appStore.dispatch(changeCurrentUser(currentUser));\r\n  let routes = [];\r\n  try {\r\n    let routesData = await new Resource({\r\n      route: \"/ajax/routes\"\r\n    }).getAll();\r\n\r\n    for (let _data of routesData.pages) {\r\n      routes.push(Route.routeFabric(_data));\r\n    }\r\n    appStore.dispatch(changeAppRoutes(routes));\r\n  } catch (err) {\r\n    console.error(err);\r\n    return { success: false };\r\n  }\r\n  return { success: true };\r\n}\r\n\r\nexport function cutString(string, maxLength = 80) {\r\n  if (string.length <= maxLength) return string;\r\n  return string.slice(0, maxLength) + \"...\";\r\n}\r\n\r\nexport function sortOptions(options, sortDirection) {\r\n  options.sort((a, b) =>\r\n    a.label.toLowerCase() > b.label.toLowerCase()\r\n      ? 1\r\n      : b.label.toLowerCase() > a.label.toLowerCase()\r\n      ? -1\r\n      : 0\r\n  );\r\n  return sortDirection === \"asc\" ? options : options.reverse();\r\n}\r\n/**\r\n * рекурсивно считает общую длину по пути\r\n * @param {{}} object\r\n * @param {string} path\r\n * @return {number}\r\n */\r\nexport function recurseCount(object = {}, path = \"\") {\r\n  let count = 0;\r\n  if (!path) {\r\n    return count;\r\n  }\r\n  let array = _.get(object, path, []);\r\n  if (!array.length) {\r\n    count++;\r\n    return count;\r\n  }\r\n  array.forEach(item => {\r\n    count += recurseCount(item, path);\r\n  });\r\n  return count;\r\n}\r\n\r\n/**\r\n * Вовращает AltrpModel, в котором храняться все источники данных на странице\r\n * @param {{}} model\r\n * @return {AltrpModel}\r\n */\r\nexport function getAppContext(model = null) {\r\n  const { currentModel } = appStore.getState();\r\n  if(model instanceof AltrpModel){\r\n    model = model.getData();\r\n  }\r\n  const currentModelData = model ? model : currentModel.getData();\r\n  const urlParams = _.cloneDeep(\r\n    window.currentRouterMatch instanceof AltrpModel\r\n      ? window.currentRouterMatch.getProperty(\"params\")\r\n      : {}\r\n  );\r\n  const context = new AltrpModel(_.assign(urlParams, currentModelData));\r\n  const {\r\n    altrpPageState,\r\n    altrpPage,\r\n    altrpMeta,\r\n    currentDataStorage,\r\n    currentUser,\r\n    altrpresponses,\r\n    formsStore\r\n  } = appStore.getState();\r\n\r\n  context.setProperty(\"altrpdata\", currentDataStorage);\r\n  context.setProperty(\"altrppagestate\", altrpPageState);\r\n  context.setProperty(\"altrpmeta\", altrpMeta);\r\n  context.setProperty(\"altrpuser\", currentUser);\r\n  context.setProperty(\"altrpresponses\", altrpresponses);\r\n  context.setProperty(\"altrpforms\", formsStore);\r\n  context.setProperty(\"altrppage\", altrpPage);\r\n  return context;\r\n}\r\n\r\n/**\r\n * Сохраняет состояние виджет в localStorage\r\n * Для виджетов ,которые могут сохранять состояния при смене страниц\r\n * @param {string} widgetId\r\n * @param {*} state\r\n * @return {boolean}\r\n */\r\nexport function storeWidgetState(widgetId, state = null) {\r\n  if (!widgetId) {\r\n    return false;\r\n  }\r\n  const path = `widget_state${widgetId}`;\r\n  return saveDataToLocalStorage(path, state);\r\n}\r\n/**\r\n * Забирает состояние из localStorage\r\n * Для виджетов ,которые могут сохранять состояния при смене страниц\r\n * @param {string} widgetId\r\n * @param {*} _default\r\n * @return {boolean}\r\n */\r\nexport function getWidgetState(widgetId, _default = null) {\r\n  if (!widgetId) {\r\n    return _default;\r\n  }\r\n  const path = `widget_state${widgetId}`;\r\n  return getDataFromLocalStorage(path, _default);\r\n}\r\n\r\n/**\r\n * Сохранить данные в localStorage\r\n * @param {string} name\r\n * @param {*} data\r\n * @return {boolean}\r\n */\r\nexport function saveDataToLocalStorage(name, data) {\r\n  if (!name) {\r\n    return false;\r\n  }\r\n  if (_.isObject(data)) {\r\n    data = JSON.stringify(data);\r\n  }\r\n  localStorage.setItem(name, data);\r\n  return true;\r\n}\r\n/**\r\n * Сохранить данные в localStorage\r\n * @param {string} name\r\n * @param {*} _default\r\n * @return {*}\r\n */\r\nexport function getDataFromLocalStorage(name, _default = undefined) {\r\n  if (!name) {\r\n    return _default;\r\n  }\r\n  let value = localStorage.getItem(name);\r\n  if (!value) {\r\n    return _default;\r\n  }\r\n  try {\r\n    value = JSON.parse(value);\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n  if (_.isString(value) && Number(value)) {\r\n    value = Number(value);\r\n  }\r\n  return value || _default;\r\n}\r\nexport function scrollbarWidth() {\r\n  // thanks too https://davidwalsh.name/detect-scrollbar-width\r\n  const scrollDiv = document.createElement(\"div\");\r\n  scrollDiv.setAttribute(\r\n    \"style\",\r\n    \"width: 100px; height: 100px; overflow: scroll; position:absolute; top:-9999px;\"\r\n  );\r\n  document.body.appendChild(scrollDiv);\r\n  const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\r\n  document.body.removeChild(scrollDiv);\r\n  return scrollbarWidth;\r\n}\r\n\r\n/**\r\n * Добавляем свойство altrpIndex для всех эементов-объектов массива\r\n * для их идентификации внутри повторяющихся карточек\r\n * @param {[]} array\r\n */\r\nexport function setAltrpIndex(array = []) {\r\n  if (!_.isArray(array)) {\r\n    return;\r\n  }\r\n  array.forEach((item, idx) => {\r\n    if (!_.isObject(item)) {\r\n      return;\r\n    }\r\n    if (item instanceof AltrpModel) {\r\n      item.setProperty(\"altrpIndex\", idx);\r\n      return;\r\n    }\r\n    item.altrpIndex = idx;\r\n  });\r\n}\r\n\r\n/**\r\n *\r\n * @param {string} font\r\n * @return {*}\r\n */\r\nexport function renderFontLink(font) {\r\n  if (altrpFontsSet[font] !== GOOGLE_FONT) {\r\n    return null;\r\n  }\r\n  font = font.replace(/ /g, \"+\");\r\n  font +=\r\n    \":100,100italic,200,200italic,300,300italic,400,400italic,500,500italic,600,600italic,700,700italic,800,800italic,900,900italic\";\r\n  let fontUrl =\r\n    \"https://fonts.googleapis.com/css?family=\" + font + \"&subset=cyrillic\";\r\n  fontUrl = encodeURI(fontUrl);\r\n  return <link rel=\"stylesheet\" key={fontUrl} href={fontUrl} />;\r\n}\r\n\r\n/**\r\n * Включен ли режим тестирования\r\n */\r\nexport function isAltrpTestMode() {\r\n  return window.location.href.indexOf(\"altrp-test=true\") > 0;\r\n}\r\n\r\n/**\r\n * случайная строка\r\n * @return {string}\r\n */\r\nexport function altrpRandomId() {\r\n  return Math.random()\r\n    .toString(36)\r\n    .substr(2, 9);\r\n}\r\n\r\n/**\r\n * Кнопки для пагинации\r\n * @param pageIndex\r\n * @param pageCount\r\n * @param first_last_buttons_count\r\n * @param middle_buttons_count\r\n * @return {*[]}\r\n */\r\nexport function generateButtonsArray(\r\n  pageIndex,\r\n  pageCount,\r\n  first_last_buttons_count,\r\n  middle_buttons_count\r\n) {\r\n  const buttonsSum = first_last_buttons_count + middle_buttons_count;\r\n  const lastButtons = Array.from(\r\n    { length: first_last_buttons_count },\r\n    (_, i) => pageCount - i - 1\r\n  ).reverse();\r\n  const middleButtons = Array.from(\r\n    { length: middle_buttons_count },\r\n    (_, i) => pageIndex - Math.floor(middle_buttons_count / 2) + i\r\n  );\r\n\r\n  if (pageIndex + 1 < buttonsSum) {\r\n    return [...Array(buttonsSum).keys(), \"ellipsis\", ...lastButtons];\r\n  }\r\n  if (\r\n    pageIndex >=\r\n    pageCount -\r\n      first_last_buttons_count -\r\n      1 -\r\n      Math.floor(middle_buttons_count / 2)\r\n  ) {\r\n    return [\r\n      ...Array(first_last_buttons_count).keys(),\r\n      \"ellipsis\",\r\n      ...Array.from(\r\n        { length: first_last_buttons_count + middle_buttons_count },\r\n        (_, i) => pageCount - i - 1\r\n      ).reverse()\r\n    ];\r\n  }\r\n\r\n  return [\r\n    ...Array(first_last_buttons_count).keys(),\r\n    \"ellipsis\",\r\n    ...middleButtons,\r\n    \"ellipsis\",\r\n    ...lastButtons\r\n  ];\r\n}\r\n\r\n/**\r\n * Проверяем текст на соответствие маске\r\n * @param {string} value\r\n * @param {[]} mask\r\n * @return {boolean}\r\n */\r\nexport function isValueMatchMask(value, mask) {\r\n  if (!value || value.length !== mask.length) {\r\n    return false;\r\n  }\r\n  return (\r\n    value.length &&\r\n    value\r\n      .split(\"\")\r\n      .every((char, index) => char === mask[index] || char.match(mask[index]))\r\n  );\r\n}\r\n\r\n/**\r\n * Вернуть экземпляр конвертера необходимого типа (array - ArrayConverter и т. д.)\r\n * @return {DataConverter}\r\n */\r\nexport function getConverter(data) {\r\n  switch (data.data_type) {\r\n    case \"array\":\r\n      return new ArrayConverter(data);\r\n  }\r\n  return new DataConverter();\r\n}\r\n\r\n/**\r\n * Конвертируются данные\r\n * @param {{} | []} settings\r\n * @param {*} data\r\n */\r\nexport function convertData(settings, data) {\r\n  if (_.isArray(settings)) {\r\n    settings.forEach(item => {\r\n      const converter = getConverter(item);\r\n      data = converter.convertData(data);\r\n    });\r\n  }\r\n  if (settings.data_type) {\r\n    const converter = getConverter(settings);\r\n    data = converter.convertData(data);\r\n  }\r\n  return data;\r\n}\r\nexport function renderIcon(isHidden, icon, defaultIcon, className) {\r\n  if (isHidden) return null;\r\n\r\n  return (\r\n    <span className={className}>\r\n      {icon && icon.assetType ? renderAssetIcon(icon) : defaultIcon}\r\n    </span>\r\n  );\r\n  // if()\r\n}\r\n\r\n/**\r\n * Перенаправление на другую страницу по настройкам LinkController\r\n * @param {{}} linkSettings\r\n * @param {{}} e\r\n * @param {{}} context\r\n */\r\nexport function redirect(linkSettings, e, context = {}) {\r\n  if (_.get(linkSettings, \"toPrevPage\")) {\r\n    if(window.frontAppRouter){\r\n      frontAppRouter.history.goBack();\r\n    } else {\r\n      history.back();\r\n    }\r\n    return;\r\n  }\r\n  if (!_.get(linkSettings, \"url\")) {\r\n    return;\r\n  }\r\n  e.preventDefault();\r\n  e.stopPropagation();\r\n  let { url } = linkSettings;\r\n  url = replaceContentWithData(url, context);\r\n  if (linkSettings.openInNew) {\r\n    window.open(url, \"_blank\");\r\n    return;\r\n  }\r\n  if (linkSettings.tag === \"a\" || ! window.frontAppRouter) {\r\n    window.location.assign(url);\r\n  } else {\r\n    frontAppRouter.history.push(url);\r\n  }\r\n\r\n}\r\n\r\nexport function validateEmail(email) {\r\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@']+(\\.[^<>()[\\]\\\\.,;:\\s@']+)*)|('.+'))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(String(email).toLowerCase());\r\n}\r\n\r\n/**\r\n * значение настройки в зависимости от разрешения можно использовать вне виджетов с объектом настроек\r\n * @param {{}} settings - объект настроек\r\n * @param {string} settingName\r\n * @param {string} elementState\r\n * @param {*} _default\r\n * @return {*}\r\n */\r\nexport function getResponsiveSetting(\r\n  settings,\r\n  settingName,\r\n  elementState = \"\",\r\n  _default = null\r\n) {\r\n  let { currentScreen } = window.parent.appStore.getState();\r\n  let _settingName = `${settingName}_${elementState}_`;\r\n  if (currentScreen.name === CONSTANTS.DEFAULT_BREAKPOINT) {\r\n    let setting = settings[_settingName];\r\n    if (setting === undefined) {\r\n      setting = _.get(settings, settingName, _default);\r\n    }\r\n    return setting;\r\n  }\r\n  let suffix = currentScreen.name;\r\n  _settingName = `${settingName}_${elementState}_${suffix}`;\r\n  let setting = settings[_settingName];\r\n  if (setting === undefined) {\r\n    for (let screen of [...CONSTANTS.SCREENS].reverse()) {\r\n      if (\r\n        currentScreen.id < screen.id ||\r\n        screen.name === CONSTANTS.DEFAULT_BREAKPOINT\r\n      ) {\r\n        continue;\r\n      }\r\n\r\n      _settingName = `${settingName}_${elementState}_${screen.name}`;\r\n\r\n      if (settings[_settingName] !== undefined) {\r\n        setting = settings[_settingName];\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (setting === undefined) {\r\n    setting = _.get(settings, settingName, _default);\r\n  }\r\n  return setting;\r\n}\r\n\r\n/**\r\n * Заменяет false, null, true в строке на соответствующие значения\r\n * @param {string} value\r\n * @return {*}\r\n */\r\nexport function valueReplacement(value) {\r\n  switch (value) {\r\n    case \"true\":\r\n      return true;\r\n    case \"false\":\r\n      return false;\r\n    case \"null\":\r\n      return null;\r\n  }\r\n  return value;\r\n}\r\n\r\n/**\r\n * Задержка и с интерфейсом промиса\r\n * @param ms\r\n * @return {Promise}\r\n */\r\nexport function delay(ms) {\r\n  if (_.isString(ms)) {\r\n    ms = Number(ms);\r\n  }\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(resolve, ms);\r\n  });\r\n}\r\n\r\n/**\r\n * Подготавливает URL для шаблона письма\r\n * @param {string} url\r\n * @param {{} | null} context\r\n * @return {string}\r\n */\r\nexport function prepareURLForEmail(url, context = null) {\r\n  if (!_.isString(url) || !url) {\r\n    return url;\r\n  }\r\n  url = url.trim();\r\n  if (url.indexOf(\"http\") !== 0) {\r\n    url = location.origin + url;\r\n  }\r\n  return parseURLTemplate(url, context);\r\n}\r\n\r\nexport function parseIDFromYoutubeURL(youtubeURL) {\r\n  const startIndex = youtubeURL.indexOf(\"v=\") + 2;\r\n  const endIndex = youtubeURL.indexOf(\"&\", startIndex);\r\n\r\n  return youtubeURL.substring(startIndex, endIndex);\r\n}\r\n\r\n/**\r\n *\r\n * @param {{}} context\r\n * @return {{}}\r\n */\r\nexport function prepareContext(context) {\r\n  context.altrpdata = appStore.getState().currentDataStorage.getData();\r\n  context.altrpmodel = appStore.getState().currentModel.getData();\r\n  context.altrpuser = appStore.getState().currentUser.getData();\r\n  context.altrppagestate = appStore.getState().altrpPageState.getData();\r\n  context.altrpresponses = appStore.getState().altrpresponses.getData();\r\n  context.altrpmeta = appStore.getState().altrpMeta.getData();\r\n  return context;\r\n}\r\n\r\n/**\r\n *\r\n * Определеят явлется ли строка валидным JSON\r\n * @param {string} JSONString\r\n * @return {boolean}\r\n */\r\nexport function isJSON(JSONString = \"\") {\r\n  try {\r\n    JSON.parse(JSONString);\r\n    return true;\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Парсит xml строку в объект\r\n * @param xml\r\n * @param arrayTags\r\n */\r\nfunction parseXml(xml, arrayTags) {\r\n  let dom = null;\r\n  if (window.DOMParser) dom = new DOMParser().parseFromString(xml, \"text/xml\");\r\n  else if (window.ActiveXObject) {\r\n    dom = new ActiveXObject(\"Microsoft.XMLDOM\");\r\n    dom.async = false;\r\n    if (!dom.loadXML(xml))\r\n      throw dom.parseError.reason + \" \" + dom.parseError.srcText;\r\n  } else throw new Error(\"cannot parse xml string!\");\r\n\r\n  function parseNode(xmlNode, result) {\r\n    if (xmlNode.nodeName === \"#text\") {\r\n      let v = xmlNode.nodeValue;\r\n      if (v.trim()) result[\"#text\"] = v;\r\n      return;\r\n    }\r\n\r\n    let jsonNode = {},\r\n      existing = result[xmlNode.nodeName];\r\n    if (existing) {\r\n      if (!Array.isArray(existing))\r\n        result[xmlNode.nodeName] = [existing, jsonNode];\r\n      else result[xmlNode.nodeName].push(jsonNode);\r\n    } else {\r\n      if (arrayTags && arrayTags.indexOf(xmlNode.nodeName) !== -1)\r\n        result[xmlNode.nodeName] = [jsonNode];\r\n      else result[xmlNode.nodeName] = jsonNode;\r\n    }\r\n\r\n    if (xmlNode.attributes)\r\n      for (let attribute of xmlNode.attributes)\r\n        jsonNode[attribute.nodeName] = attribute.nodeValue;\r\n\r\n    for (let node of xmlNode.childNodes) parseNode(node, jsonNode);\r\n  }\r\n\r\n  let result = {};\r\n  for (let node of dom.childNodes) parseNode(node, result);\r\n\r\n  return result;\r\n}\r\nfunction escapeRegExp(string) {\r\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\"); // $& means the whole matched string\r\n}\r\n\r\n/**\r\n * Вернуть значение из строки\r\n * @param string\r\n */\r\nexport function parseStringValue(string) {\r\n  let value = string;\r\n\r\n  if (Number(value)) {\r\n    return Number(value);\r\n  }\r\n  switch (value) {\r\n    case \"true\": {\r\n      return true;\r\n    }\r\n    case \"false\": {\r\n      return false;\r\n    }\r\n    case \"null\": {\r\n      return null;\r\n    }\r\n    case \"undefined\": {\r\n      return undefined;\r\n    }\r\n    case \"0\": {\r\n      return 0;\r\n    }\r\n  }\r\n  return value;\r\n}\r\n\r\n/**\r\n *\r\n * @return {*[]}\r\n */\r\nexport function getBreadcrumbsItems(){\r\n  if(window['h-altrp'] && window.breadcrumbsItems){\r\n    return window.breadcrumbsItems;\r\n  }\r\n  let items = [];\r\n  if(isEditor(0)){\r\n    return items;\r\n  }\r\n  const currentId = window['h-altrp'] ? window.page_id : window.currentPageId\r\n  const {routes} = appStore.getState().appRoutes\r\n  let breadcrumbsClone = [];\r\n  let idCurrent = 0;\r\n  routes.forEach((route, idx) => {\r\n    if(currentId === route.id) {\r\n      idCurrent = idx\r\n    }\r\n  })\r\n\r\n  breadcrumbsClone.push(routes[idCurrent])\r\n\r\n  function getParent(parentId) {\r\n    routes.forEach(route => {\r\n      if(route.id === parentId) {\r\n        breadcrumbsClone.push(route)\r\n        if(route.parent_page_id) {\r\n          getParent(route.parent_page_id)\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  if(routes[idCurrent].parent_page_id) {\r\n    getParent(routes[idCurrent].parent_page_id)\r\n  }\r\n\r\n  items = breadcrumbsClone.reverse()\r\n  if(window['h-altrp']){\r\n    window.breadcrumbsItems = items;\r\n  }\r\n  return items;\r\n}\r\n","export const CHANGE_PAGE_STATE = 'CHANGE_PAGE_STATE';\r\nexport const CLEAR_PAGE_STATE = 'CLEAR_PAGE_STATE';\r\n\r\n/**\r\n *\r\n * @param {string}stateName\r\n * @param {*} stateValue\r\n * @return {{}} -\r\n *   {\r\n *     type: {string},\r\n *     stateValue: {},\r\n *     stateName: {string},\r\n *   }\r\n */\r\nexport function changePageState(stateName, stateValue = {}) {\r\n  return {\r\n    type: CHANGE_PAGE_STATE,\r\n    stateName,\r\n    stateValue\r\n  };\r\n}\r\n/**\r\n * Очищает состояние страницы\r\n */\r\nexport function clearPageState() {\r\n  return {\r\n    type: CLEAR_PAGE_STATE,\r\n  };\r\n}\r\n","export const CHANGE_CURRENT_USER = 'CHANGE_CURRENT_USER';\r\nexport const SET_NOTICE_FOR_USER = 'SET_NOTICE_FOR_USER';\r\nexport const SET_USERS_ONLINE = 'SET_USERS_ONLINE';\r\nexport const CHANGE_CURRENT_USER_PROPERTY = \"CHANGE_CURRENT_USER_PROPERTY\";\r\n\r\nexport function changeCurrentUser(user) {\r\n  return {\r\n    type: CHANGE_CURRENT_USER,\r\n    user: user || {}\r\n  };\r\n}\r\n\r\nexport function setUserNotice(notice){\r\n  return { type: SET_NOTICE_FOR_USER, notice }\r\n}\r\n\r\nexport function setUsersOnline(members){\r\n  return { type: SET_USERS_ONLINE, members }\r\n}\r\n\r\nexport function changeCurrentUserProperty(path, value) {\r\n  return {\r\n    type: CHANGE_CURRENT_USER_PROPERTY,\r\n    path: path || \"\",\r\n    value: value || \"\"\r\n  };\r\n}\r\n","export const ADD_RESPONSE_DATA = 'ADD_RESPONSE_DATA';\r\nexport const CLEAR_ALL_RESPONSE_DATA = 'CLEAR_ALL_RESPONSE_DATA';\r\n\r\n/**\r\n * Сохраняет ответ сервера при отправке формы в хранилище\r\n * @param {string}formId\r\n * @param {{}} data\r\n * @return {{}} -\r\n *   {\r\n *     type: {string},\r\n *     dataStorage: {object},\r\n *     dataStorageName: {string},\r\n *   }\r\n */\r\nexport function addResponseData(formId, data = {}) {\r\n  if(data.data) {\r\n    data = data.data;\r\n  }\r\n  return {\r\n    type: ADD_RESPONSE_DATA,\r\n    data,\r\n    formId\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Очищает хранилище\r\n * @return {{type: string}}\r\n */\r\nexport function clearAllResponseData(){\r\n  return {\r\n    type: CLEAR_ALL_RESPONSE_DATA,\r\n  };\r\n}\r\n\r\n","/**\n * Set a value by a dot path.\n * @param obj The object to evaluate.\n * @param prop The path to be set.\n * @param value The value to set.\n */\nfunction set(obj, prop, value) {\n\tprop = typeof prop === 'number' ? propToArray(prop.toString()) : typeof prop === 'string' ? propToArray(prop) : prop;\n\n\tconst setPropImmutableRec = (obj, prop, value, i) => {\n\t\tlet clone, head = prop[i];\n\n\t\tif (prop.length > i) {\n\t\t\tif (Array.isArray(obj)) {\n\t\t\t\thead = getArrayIndex(head, obj);\n\t\t\t\tclone = obj.slice();\n\t\t\t} else {\n\t\t\t\tclone = Object.assign({}, obj);\n\t\t\t}\n\t\t\tclone[head] = setPropImmutableRec(obj[head] !== undefined ? obj[head] : {}, prop, value, i + 1);\n\t\t\treturn clone;\n\t\t}\n\n\t\treturn typeof value === 'function' ? value(obj) : value;\n\t};\n\n\treturn setPropImmutableRec(obj, prop, value, 0);\n}\n\n/**\n * Get a value by a dot path.\n * @param obj The object to evaluate.\n * @param prop The path to value that should be returned.\n * @param [value] The default value that should be returned when the target doesn't exist.\n */\nfunction get(obj, prop, value) {\n\tprop = typeof prop === 'number' ? propToArray(prop.toString()) : typeof prop === 'string' ? propToArray(prop) : prop;\n\n\tfor (var i = 0; i < prop.length; i++) {\n\t\tif (obj === null || typeof obj !== 'object') {\n\t\t\treturn value;\n\t\t}\n\t\tlet head = prop[i];\n\t\tif (Array.isArray(obj) && head === '$end') {\n\t\t\thead = obj.length - 1;\n\t\t}\n\t\tobj = obj[head];\n\t}\n\n\tif (typeof obj === 'undefined') {\n\t\treturn value;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Delete a property by a dot path.\n * If target container is an object, the property is deleted.\n * If target container is an array, the index is deleted.\n * If target container is undefined, nothing is deleted.\n * @param obj The object to evaluate.\n * @param prop The path to the property or index that should be deleted.\n */\nfunction _delete(obj, prop) {\n\tprop = typeof prop === 'number' ? propToArray(prop.toString()) : typeof prop === 'string' ? propToArray(prop) : prop;\n\n\tconst deletePropImmutableRec = (obj, prop, i) => {\n\t\tlet clone, head = prop[i];\n\n\t\tif (obj === null || typeof obj !== 'object' ||\n\t\t\t!Array.isArray(obj) && obj[head] === undefined) {\n\n\t\t\treturn obj;\n\t\t}\n\n\t\tif (prop.length - 1 > i) {\n\t\t\tif (Array.isArray(obj)) {\n\t\t\t\thead = getArrayIndex(head, obj);\n\t\t\t\tclone = obj.slice();\n\t\t\t} else {\n\t\t\t\tclone = Object.assign({}, obj);\n\t\t\t}\n\n\t\t\tclone[head] = deletePropImmutableRec(obj[head], prop, i + 1);\n\t\t\treturn clone;\n\t\t}\n\n\t\tif (Array.isArray(obj)) {\n\t\t\thead = getArrayIndex(head, obj);\n\t\t\tclone = [].concat(obj.slice(0, head), obj.slice(head + 1));\n\t\t} else {\n\t\t\tclone = Object.assign({}, obj);\n\t\t\tdelete clone[head];\n\t\t}\n\n\t\treturn clone;\n\t};\n\n\treturn deletePropImmutableRec(obj, prop, 0);\n}\n\n/**\n * Toggles a value.  The target value is evaluated using Boolean(currentValue).  The result will always be a JSON boolean.\n * Be careful with strings as target value, as \"true\" and \"false\" will toggle to false, but \"0\" will toggle to true.\n * Here is what Javascript considers false:  0, -0, null, false, NaN, undefined, and the empty string (\"\")\n * @param obj The object to evaluate.\n * @param prop The path to the value.\n */\nfunction toggle(obj, prop) {\n\tconst curVal = get(obj, prop);\n\treturn set(obj, prop, !Boolean(curVal));\n}\n\n/**\n * Merges a value.  The target value must be an object, array, null, or undefined.\n * If target is an object, Object.assign({}, target, param) is used.\n * If target an array, target.concat(param) is used.\n * If target is null or undefined, the value is simply set.\n * @param obj The object to evaluate.\n * @param prop The path to the value.\n * @param val The value to merge into the target value.\n */\nfunction merge(obj, prop, val) {\n\tconst curVal = get(obj, prop);\n\tif (typeof curVal === 'object') {\n\t\tif (Array.isArray(curVal)) {\n\t\t\treturn set(obj, prop, curVal.concat(val));\n\t\t} else if (curVal === null) {\n\t\t\treturn set(obj, prop, val);\n\t\t}\n\t\telse {\n\t\t\tlet merged = Object.assign({}, curVal, val);\n\t\t\treturn set(obj, prop, merged);\n\t\t}\n\t} else if (typeof curVal === 'undefined') {\n\t\treturn set(obj, prop, val);\n\t}\n\telse {\n\t\treturn obj;\n\t}\n}\n\nfunction getArrayIndex(head, obj) {\n\tif (head === '$end') {\n\t\thead = Math.max(obj.length - 1, 0);\n\t}\n\tif (!/^\\+?\\d+$/.test(head)) {\n\t\tthrow new Error(`Array index '${head}' has to be an integer`);\n\t}\n\treturn parseInt(head);\n}\n\nfunction propToArray(prop) {\n\treturn prop.split('.').reduce((ret, el, index, list) => {\n\t\tconst last = index > 0 && list[index - 1];\n\t\tif (last && /(?:^|[^\\\\])\\\\$/.test(last)) {\n\t\t\tconst prev = ret.pop();\n\t\t\tret.push(prev.slice(0, -1) + '.' + el);\n\t\t} else {\n\t\t\tret.push(el);\n\t\t}\n\t\treturn ret;\n\t}, []);\n}\n\nmodule.exports = {\n\tset,\n\tget,\n\tdelete: _delete,\n\ttoggle,\n\tmerge\n};\n"],"sourceRoot":""}