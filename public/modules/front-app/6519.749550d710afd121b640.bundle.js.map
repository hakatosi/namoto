{"version":3,"sources":["webpack:///./resources/modules/editor/src/js/classes/AltrpModel.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/AccordionComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/AdvancedComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/ButtonComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/CarouselComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/ColumnComponents.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/DashboardComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/DatePickerComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/DiagramComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/DividerComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/DropbarWidgetComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/FormComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/GalleryComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/ImageLightboxComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/InputCheckboxComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/InputDateComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/InputRadioComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/InputRangeSliderComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/InputSliderComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/ListComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/MapComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/MapConstructorComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/SectionWidgetComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/TabsSwitcherComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/TooltipComponent.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/VideoComponent.js","webpack:///./resources/modules/front-app/src/js/components/helpers/getInputFileStyles.js","webpack:///./resources/modules/front-app/src/js/components/helpers/getInputGalleryStyles.js","webpack:///./resources/modules/front-app/src/js/components/helpers/getInputMultiSelectStyles.js","webpack:///./resources/modules/front-app/src/js/components/helpers/getInputSelectStyles.js","webpack:///./resources/modules/front-app/src/js/components/helpers/getInputTextCommonStyles.js","webpack:///./resources/modules/front-app/src/js/components/helpers/getTemplateStyles.js","webpack:///./resources/modules/front-app/src/js/components/helpers/stylesForTheBreadcrumbs.js","webpack:///./resources/modules/front-app/src/js/components/helpers/stylesForTheHeadingTypeAnimating.js","webpack:///./resources/modules/front-app/src/js/components/helpers/stylesForTheHeadingTypeHeading.js","webpack:///./resources/modules/front-app/src/js/components/helpers/stylesForTheImage.js","webpack:///./resources/modules/front-app/src/js/components/helpers/stylesForTheMenu.js","webpack:///./resources/modules/front-app/src/js/components/helpers/stylesForThePosts.js","webpack:///./resources/modules/front-app/src/js/components/helpers/stylesForTheTable.js","webpack:///./resources/modules/front-app/src/js/components/helpers/stylesForTheTabs.js","webpack:///./resources/modules/front-app/src/js/components/helpers/stylesForTheText.js","webpack:///./resources/modules/front-app/src/js/functions/get-route-styles.js"],"names":["AltrpModel","data","this","cloneDeep","clone","isEmpty","name","defaultValue","get","has","value","getData","set","unset","window","AccordionComponent","settings","styles","getResponsiveSetting","slider","sliderStyled","styledString","AdvancedComponent","size","btnStyles","ButtonComponent","stylesInString","backgroundColorActive","colorPropertyStyled","gradientActive","gradientStyled","backgroundImageActive","backgroundImageControllerToStyles","borderTypeActive","simplePropertyStyled","borderWidthActive","borderWidthStyled","borderColorActive","borderRadiusActive","sizeStyled","boxShadowActive","shadowControllerToStyles","typographicActive","typographicControllerToStyles","colorActive","backgroundColorSvgActive","fillColorSvgActive","strokeColorSvgActive","backgroundColorSvg","backgroundColorSvgHover","fillColorSvg","strokeColorSvg","fillColorSvgHover","strokeColorSvgHover","paddingIconRightBtn","dimensionsControllerToStyles","iconRightSizeBtn","iconSizeStyled","paddingIconLeftBtn","iconLeftSizeBtn","paddingIconTopBtn","iconTopSizeBtn","paddingIconBottomBtn","iconBottomSizeBtn","CarouselComponent","globalDefaults","push","altrpHelpers","flexWrap","flexDirection","align","justifyContent","overflow","backgroundColor","gradient","zIndex","borderType","borderWidth","borderColor","borderRadius","boxShadow","backgroundColorH","gradientH","borderTypeH","borderWidthH","borderColorH","borderRadiusH","boxShadowH","marginBottom","marginBottomH","backgroundImage","backgroundPosition","backgroundAttachment","backgroundRepeat","backgroundSizeInUnits","backgroundSize","backgroundImageH","backgroundPositionH","backgroundAttachmentH","backgroundRepeatH","backgroundSizeInUnitsH","backgroundSizeH","margin","padding","undefined","shadowStyled","DashboardComponent","style_font_typographic","family","_","isString","dashboardStyles","DatePickerComponent","elementId","DiagramComponent","DividerComponent","DropbarWidgetComponent","FormComponent","background_section_opacity","inputWrapperStyles","width","inputWrapperStyle","containerStyles","containerStyle","fieldStyles","color","typographic","placeholder_and_value_alignment_position_section","position_z_index","input_position","textarea_resize","justify_options","image_select_item_width","image_select_item_height","image_select_image_fit","image_select_image_position","cross_size","unit","fieldStyle","filedSelect2ControllerStyles","fieldSelect2ControlStyle","imageSelectLabelStyles","imageSelectLabel","fieldSelect2SingleValueStyles","fieldSelect2SingleValueStyle","fieldLabelContainerStyles","label_position_top","label_position_left","label_icon_position","fieldLabelContainerStyle","fieldLabelStyles","fieldLabel","labelIconStyles","iconSize","labelIconStyle","placeholderStyles","placeholderStyle","fieldLabelRequiredStyles","fieldLabelRequired","maskMismatchMessageStyles","id","maskMismatchMessage","select2Options","GalleryComponent","aspectRatio","def","defaultStyled","objectFit","height","opacity","filters","transitionDuration","animationDuration","backgroundSizeInUnit","aspect_ratio_size","parentClass","filtersControllerToStyles","opacityStyled","Number","fieldAlignment","backgroundColorHover","boxShadowHover","fontTypographic","fontColor","fontTypographicHover","fontColorHover","fontTypographicActive","fontColorActive","colorStyled","fieldStylesHover","fieldStyleHover","fieldStylesActive","fieldStyleActive","fieldStylesFocus","fieldStyleFocus","prefix","aligment","dotColor","dotSize","colorPickedHex","colorRGB","r","g","b","a","colorStyledSecond","InputRangeSliderComponent","tr_x","tr_y","thickness","InputSliderComponent","ListComponent","MapComponent","MapConstructorComponent","altrpSectionHover","borderStyle","state","SectionWidgetComponent","childrenLength","verticalAlign","gorizontalAlign","minHeight","altrpSection","altrpSectionColumn","positionTop","positionRight","positionLeft","positionBottom","altrpSectionSecond","altrpSectionSecondHover","altrpBackgroundImage","altrpBackgroundImageHover","altrpSectionBoxed","page_areas","length","altrpSectionSectionBoxed","altrpSectionFull","TabsSwitcherComponent","TooltipComponent","VideoComponent","getInputFileStyles","alignment","getInputGalleryStyles","columns","v_gap","getInputMultiSelectStyles","getInputMultiSelectPopoverStyles","getInputSelectStyles","button_gradient","getInputSelectPopoverStyles","getInputTextCommonStyles","getTemplateStyles","colorIcon","icon_ml","icon_mr","delimiter","url","delimiter_width","delimiter_height","delimiter_ml","delimiter_mr","font","current_color","current_font","getHeadingTypeAnimatingStyles","justifyContentHeaddingSubHover","marginBottomForHorizontalHover","marginBottomForVerticalHover","marginBottomForRotateHover","typographicAnimating","colorAnimating","typographicAnimatingHover","colorAnimatingHover","typographicNoAnimating","colorNoAnimating","typographicNoAnimatingHover","colorNoAnimatingHover","strokeWidthAnimatingSvg","colorAnimatingSvg","strokeWidthAnimatingSvgHover","colorAnimatingSvgHover","getHeadingTypeHeadingStyles","justifyContentHeaddingSub","textShadowHeaddingSub","textShadowControllerToStyles","typographicHeaddingSub","paddingHeaddingSub","colorHeaddingSub","backgroundColorHeaddingSub","widthHeadingSub","textShadowHeaddingSubHover","typographicHeaddingSubHover","paddingHeaddingSubHover","colorHeaddingSubHover","backgroundColorHeaddingSubHover","widthHeadingSubHover","marginTop","marginTopHover","marginBottomHover","marginRight","marginRightHover","marginLeft","marginLeftHover","textAlignAdvancedWrapper","backgroundColorHeadingAdvanced","colorHeadingAdvanced","paddingHeadingAdvanced","typographicHeadingAdvanced","textShadowHeadingAdvanced","borderTypeHeadingAdvanced","borderWidthHeadingAdvanced","borderColorHeadingAdvanced","borderRadiusHeadingAdvanced","opacityHeadingAdvanced","backgroundColorHeadingAdvancedHover","colorHeadingAdvancedHover","paddingHeadingAdvancedHover","typographicHeadingAdvancedHover","textShadowHeadingAdvancedHover","borderTypeHeadingAdvancedHover","borderWidthHeadingAdvancedHover","borderColorHeadingAdvancedHover","borderRadiusHeadingAdvancedHover","opacityHeadingAdvancedHover","marginBottomForHorizontal","marginBottomForVertical","marginBottomForRotate","textShadow","transform","translateStyled","colorLinkHover","colorHover","typographicHover","textShadowHover","marginHover","paddingHover","zIndexHover","opacityHover","gradientHover","borderTypeHover","borderWidthHover","borderColorHover","borderRadiusHover","transformHover","backgroundImageHover","backgroundPositionHover","backgroundAttachmentHover","backgroundRepeatHover","backgroundSizeInUnitsHover","backgroundSizeHover","renderButton","buttonBg","buttonColor","buttonPadding","border","getPostsStyles","flexDirectionPaginPrev","marginPaginPrev","paddingPaginPrev","colorPaginPrev","typographicPaginPrev","borderTypePaginPrev","borderWidthPaginPrev","borderColorPaginPrev","borderRadiusPaginPrev","boxShadowPaginPrev","flexDirectionPaginPrevHover","marginPaginPrevHover","paddingPaginPrevHover","colorPaginPrevHover","typographicPaginPrevHover","borderTypePaginPrevHover","borderWidthPaginPrevHover","borderColorPaginPrevHover","borderRadiusPaginPrevHover","boxShadowPaginPrevHover","marginPaginPrevSvgImg","marginPaginPrevSvgImgHover","sizePaginPrevSvg","sizePaginPrevSvgHover","heightPaginPrevImg","heightPaginPrevImgHover","fillPaginPrevPath","fillPaginPrevPathHover","flexDirectionPaginNext","marginPaginNext","paddingPaginNext","colorPaginNext","typographicPaginNext","borderTypePaginNext","borderWidthPaginNext","borderColorPaginNext","borderRadiusPaginNext","boxShadowPaginNext","flexDirectionPaginNextHover","marginPaginNextHover","paddingPaginNextHover","colorPaginNextHover","typographicPaginNextHover","borderTypePaginNextHover","borderWidthPaginNextHover","borderColorPaginNextHover","borderRadiusPaginNextHover","boxShadowPaginNextHover","marginPaginNextSvgImg","marginPaginNextSvgImgHover","sizePaginNextSvg","sizePaginNextSvgHover","heightPaginNextImg","heightPaginNextImgHover","fillPaginNextPath","fillPaginNextPathHover","marginPaginCount","backgroundColorPaginCount","paddingPaginCount","marginPaginCountHover","backgroundColorPaginCountHover","paddingPaginCountHover","colorPaginCountPagesItem","colorPaginCountPagesItemHover","marginPaginPagesItem","backgroundColorPaginPagesItem","borderTypePaginPagesItem","borderWidthPaginPagesItem","borderRadiusPaginPagesItem","borderColorPaginPagesItem","boxShadowPaginPagesItem","marginPaginPagesItemHover","backgroundColorPaginPagesItemHover","borderTypePaginPagesItemHover","borderWidthPaginPagesItemHover","borderRadiusPaginPagesItemHover","borderColorPaginPagesItemHover","boxShadowPaginPagesItemHover","colorActivePaginPagesItem","backgroundColorActivePaginPagesItem","borderColorActivePaginPagesItem","colorActivePaginPagesItemHover","backgroundColorActivePaginPagesItemHover","borderColorActivePaginPagesItemHover","typographicPaginPaginPagesItem","typographicPaginPaginPagesItemHover","marginPaginEllipsis","colorPaginEllipsis","typographicPaginEllipsis","marginPaginEllipsisHover","colorPaginEllipsisHover","typographicPaginEllipsisHover","marginPaginGotoPage","paddingPaginGotoPage","colorPaginGotoPage","backgroundColorPaginGotoPage","borderTypePaginGotoPage","borderWidthPaginGotoPage","borderColorPaginGotoPage","borderRadiusPaginGotoPage","boxShadowPaginGotoPage","marginPaginGotoPageHover","paddingPaginGotoPageHover","colorPaginGotoPageHover","backgroundColorPaginGotoPageHover","borderTypePaginGotoPageHover","borderWidthPaginGotoPageHover","borderColorPaginGotoPageHover","borderRadiusPaginGotoPageHover","boxShadowPaginGotoPageHover","paddingPosts","paddingPostsHover","paddingPaginPages","paddingPaginPagesHover","typographicPaginPaginGotoPages","typographicPaginPaginGotoPagesHover","typographicPaginPaginPagesItemCountPrev","typographicPaginPaginPagesItemCountPrevHover","marginPaginSelectSize","marginPaginSelectSizeHover","paddingPaginSelectSizeControl","paddingPaginSelectSizeControlHover","typographicPaginPaginSelectSize","typographicPaginPaginSelectSizeHover","borderTypePaginSelect2Control","borderWidthPaginSelect2Control","borderRadiusPaginSelect2Control","borderColorPaginSelect2Control","boxShadowPaginSelect2Control","colorPaginSelect2Control","backgroundColorPaginSelect2Control","borderTypePaginSelect2ControlHover","borderWidthPaginSelect2ControlHover","borderRadiusPaginSelect2ControlHover","borderColorPaginSelect2ControlHover","boxShadowPaginSelect2ControlHover","colorPaginSelect2ControlHover","backgroundColorPaginSelect2ControlHover","getTableStyles","flexDirectionHover","marginPaginationSvg","marginPaginationSvgHover","iconSizeHover","iconSizeNextImg","iconSizeNextImgHover","iconFillNextPath","iconFillNextPathHover","flexDirectionPaginationPrev","marginPaginationPrev","flexDirectionPaginationPrevHover","marginPaginationPrevHover","marginPrevSvg","iconSizePrevSvg","marginPrevSvgHover","iconSizePrevSvgHover","iconSizePrevImg","iconSizePrevImgHover","iconFillPrevPath","iconFillPrevPathHover","colorReplaceText","typographicReplaceText","colorReplaceTextHover","typographicReplaceTextHover","widthPictureReplacePicture","heightReplacePicture","paddingGroupedColumn","paddingGroupedColumnHover","iconFillTableThPath","iconFillTableThPathHover","iconSizeGroupedColumnSvgImg","iconSizeGroupedColumnSvgImgHover","paddingNotGroupedColumn","paddingNotGroupedColumnHover","iconFillNotGroupedColumnPath","iconFillNotGroupedColumnPathHover","iconSizeNotGroupedColumnSvgImg","iconSizeNotGroupedColumnSvgImgHover","paddingExpandedRow","paddingExpandedRowHover","iconFillExpandedRowPath","iconFillExpandedRowPathHover","iconSizeExpandedRowSvgImg","iconSizeExpandedRowSvgImgHover","paddingNotExpandedRow","paddingNotExpandedRowHover","iconFillNotExpandedRowPath","iconFillNotExpandedRowPathHover","iconSizeNotExpandedRowSvgImg","iconSizeNotExpandedRowSvgImgHover","colorThNthChild","colorThNthChildHover","colorFieldSelect2ControlBtn","backgroundColorFieldSelect2ControlBtn","inputPaddingFieldSelect2ControlBtn","typographicFieldSelect2ControlBtn","borderTypeFieldSelect2ControlBtn","borderWidthFieldSelect2ControlBtn","borderColorFieldSelect2ControlBtn","colorFieldSelect2ControlBtnHover","backgroundColorFieldSelect2ControlBtnHover","inputPaddingFieldSelect2ControlBtnHover","typographicFieldSelect2ControlBtnHover","borderTypeFieldSelect2ControlBtnHover","borderWidthFieldSelect2ControlBtnHover","borderColorFieldSelect2ControlBtnHover","labelPaddingLabel","labelPaddingLabelHover","textAlignTableTh","typographicTableTh","colorTableTh","paddingTableTh","borderTypeTableTh","borderColorTableTh","borderWidthTableTh","backgroundColorTableTh","textAlignTableThHover","typographicTableThHover","colorTableThHover","paddingTableThHover","borderTypeTableThHover","borderColorTableThHover","borderWidthTableThHover","backgroundColorTableThHover","backgroundColorTableHead","backgroundColorTableHeadHover","borderWidthTableThNotFirstChild","marginTopLeftStyled","borderWidthTableThNotFirstChildHover","borderWidthTableTrNotFirstChild","borderWidthTableTrNotFirstChildHover","verticalAlignDivNotAltrpElement","verticalAlignDivNotAltrpElementHover","textAlignTableTd","paddingTableTd","borderTypeTableTd","borderColorTableTd","colorTableTd","typographicTableTd","borderWidthTableTd","textAlignTableTdHover","paddingTableTdHover","borderTypeTableTdHover","borderColorTableTdHover","colorTableTdHover","typographicTableTdHover","borderWidthTableTdHover","colorTableTdA","typographicTableTdA","colorTableTdAHover","typographicTableTdAHover","backgroundColorTbodyBackground","backgroundColorTbodyBackgroundHover","borderWidthTransposeTableTdNot","borderWidthTransposeTableTdNotHover","borderWidthTransposeTableTdNotTd","borderWidthTransposeTableTdNotTdHover","colorTdGrouping","typographicTdGrouping","paddingTdGrouping","colorTdGroupingHover","typographicTdGroupingHover","paddingTdGroupingHover","backgroundColorTbodyTdGrouping","textAlignTbodyTdGrouping","backgroundColorTbodyTdGroupingHover","textAlignTbodyTdGroupingHover","verticalAlignDivNotAltrpElTd","verticalAlignDivNotAltrpElTdHover","iconSizeTdGroupingIconSvg","iconLeftSpaceTdGroupingIconSvg","iconRightSpaceTdGroupingIconSvg","iconTopTranslateTdGroupingIconSvg","iconLeftTranslateTdGroupingIconSvg","iconSizeTdGroupingIconSvgHover","iconLeftSpaceTdGroupingIconSvgHover","iconRightSpaceTdGroupingIconSvgHover","iconTopTranslateTdGroupingIconSvgHover","iconLeftTranslateTdGroupingIconSvgHover","iconFillTdGroupingIconSvgPath","iconFillTdGroupingIconSvgPathHover","paddingTableFootTd","textAlignTableFootTd","backgroundColorTableFootTd","colorTableFootTd","typographicTableFootTd","paddingTableFootTdHover","textAlignTableFootTdHover","backgroundColorTableFootTdHover","colorTableFootTdHover","typographicTableFootTdHover","paddingGlobalFilterLabel","colorGlobalFilterLabel","typographicGlobalFilterLabel","paddingGlobalFilterLabelHover","colorGlobalFilterLabelHover","typographicGlobalFilterLabelHover","paddingGlobalFilterInput","widthGlobalFilterInput","marginLeftGlobalFilterInput","colorGlobalFilterInput","backgroundColorGlobalFilterInput","typographicGlobalFilterInput","borderTypeGlobalFilterInput","borderWidthGlobalFilterInput","borderRadiusGlobalFilterInput","borderColorGlobalFilterInput","boxShadowGlobalFilterInput","paddingGlobalFilterInputHover","widthGlobalFilterInputHover","marginLeftGlobalFilterInputHover","colorGlobalFilterInputHover","backgroundColorGlobalFilterInputHover","typographicGlobalFilterInputHover","borderTypeGlobalFilterInputHover","borderWidthGlobalFilterInputHover","borderRadiusGlobalFilterInputHover","borderColorGlobalFilterInputHover","boxShadowGlobalFilterInputHover","paddingPagination","paddingPaginationHover","typographicPaginationPrev","typographicPaginationPrevHover","typographicPaginationNext","typographicPaginationNextHover","typographicPaginationPagesItem","typographicPaginationPagesItemHover","colorPaginationPrevNext","backgroundColorPaginationPrevNext","paddingPaginationPrevNext","borderTypePaginationPrevNext","borderWidthPaginationPrevNext","borderRadiusPaginationPrevNext","borderColorPaginationPrevNext","boxShadowPaginationPrevNext","colorPaginationPrevNextHover","backgroundColorPaginationPrevNextHover","paddingPaginationPrevNextHover","borderTypePaginationPrevNextHover","borderWidthPaginationPrevNextHover","borderRadiusPaginationPrevNextHover","borderColorPaginationPrevNextHover","boxShadowPaginationPrevNextHover","typographicNextItemCountPrevGotoSelect","typographicNextItemCountPrevGotoSelectHover","marginPaginationCount","colorPaginationCount","backgroundColorPaginationCount","paddingPaginationCount","marginPaginationCountHover","colorPaginationCountHover","backgroundColorPaginationCountHover","paddingPaginationCountHover","marginPaginationEllipsis","colorPaginationEllipsis","typographicPaginationEllipsis","marginPaginationEllipsisHover","colorPaginationEllipsisHover","typographicPaginationEllipsisHover","marginPaginationGotoPages","paddingPaginationGotoPages","colorPaginationGotoPages","backgroundColorPaginationGotoPages","borderTypePaginationGotoPages","borderWidthPaginationGotoPages","borderRadiusPaginationGotoPages","borderColorPaginationGotoPages","boxShadowPaginationGotoPages","marginPaginationGotoPagesHover","paddingPaginationGotoPagesHover","colorPaginationGotoPagesHover","backgroundColorPaginationGotoPagesHover","borderTypePaginationGotoPagesHover","borderWidthPaginationGotoPagesHover","borderRadiusPaginationGotoPagesHover","borderColorPaginationGotoPagesHover","boxShadowPaginationGotoPagesHover","widthPaginSelectSizeControl","borderTypePaginSelectSizeControl","borderWidthPaginSelectSizeControl","borderRadiusPaginSelectSizeControl","borderColorPaginSelectSizeControl","boxShadowPaginSelectSizeControl","colorPaginSelectSizeControl","backgroundColorPaginSelectSizeControl","widthPaginSelectSizeControlHover","borderTypePaginSelectSizeControlHover","borderWidthPaginSelectSizeControlHover","borderRadiusPaginSelectSizeControlHover","borderColorPaginSelectSizeControlHover","boxShadowPaginSelectSizeControlHover","colorPaginSelectSizeControlHover","backgroundColorPaginSelectSizeControlHover","typographicPaginSelectSize","marginCheckIconSvg","sizeCheckIconSvg","marginCheckIconSvgHover","sizeCheckIconSvgHover","marginUncheckIconSvg","sizeUncheckIconSvg","marginUncheckIconSvgHover","sizeUncheckIconSvgHover","marginCheckIconIndeterminateSvg","sizeCheckIconIndeterminateSvg","marginCheckIconIndeterminateSvgHover","sizeCheckIconIndeterminateSvgHover","iconFillCheckIconCheckedPath","iconFillCheckIconCheckedPathHover","iconFillCheckIconUncheckedPath","iconFillCheckIconUncheckedPathHover","iconFillCheckIconIndeterminatePath","iconFillCheckIconIndeterminatePathHover","sliderSizeTableResizer","backgroundColorTableResizer","sliderSizeTableResizerHover","backgroundColorTableResizerHover","backgroundColorTableResizerResizing","backgroundColorTableResizerResizingHover","filtersImage","filtersImageHover","fill","i_size","contentBackgroundColor","contentPadding","contentBorderType","contentBorderWidth","contentBorderColor","contentBorderRadius","indicatorColor","getTextStyles","columnCount","columnGap","columnGapStyled","borderRadiusStyled","paragraphMargin","textIndent","blockquoteMargin","blockquotePadding","blockquoteBackgroundColor","blockquoteBorderStyle","blockquoteBorderWidth","blockquoteBorderColor","blockquoteBorderRadius","blockquoteBoxShadow","blockquoteTypographic","blockquoteTextShadow","tableMargin","tableBackgroundColor","tableBorderStyle","tableBorderWidth","tableBorderColor","tableOddRowsColor","tableCellsPadding","dimensionsStyled","tableCellsBorderStyle","tableCellsBorderWidth","tableCellsBorderColor","tableCellsTypographic","tableCellsTextShadow","linkTypographic","linkTextShadow","numberedListMargin","numberedListItemMargin","numberedListStyle","unorderedListMargin","unorderedListItemMargin","unorderedListStyle","FRONT_DEFAULT_AREAS","getRouteStyles","areas","isArray","filter","area","indexOf","columnsGrid","rightSidebar","find","area_type","sidebar_location","leftSidebar","sidebar_width","contentRow","getCustomCSS","getSetting"],"mappings":"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","file":"6519.749550d710afd121b640.bundle.js","sourcesContent":["/**\r\n * Имеет интерфейс для доступы к свойствам data (любой вложенности)\r\n * @class AltrpModel\r\n */\r\nimport cloneDeep from 'lodash.clonedeep';\r\nimport get from 'lodash.get';\r\nimport set from 'lodash.set';\r\nimport has from 'lodash.has';\r\nimport unset from 'lodash.unset';\r\nimport isEmpty from 'lodash.isempty';\r\n// import {cloneDeep, get, set, has, unset, isString, isEmpty} from \"lodash\";\r\n\r\nclass AltrpModel {\r\n  constructor(data = {}) {\r\n    this.data = cloneDeep(data);\r\n  }\r\n\r\n  /**\r\n   * Возваращает объект данных\r\n   * @params {boolean} clone - клонировать или ссылку на данные\r\n   * @return {{}}\r\n   */\r\n  getData(clone = true) {\r\n    if(clone){\r\n      return cloneDeep(this.data);\r\n    }\r\n    return this.data;\r\n  }\r\n\r\n  /**\r\n   * Пустой ли объект\r\n   */\r\n  isEmpty(){\r\n    return isEmpty(this.data);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  getProperty(name, defaultValue = '') {\r\n    return get(this.data, name, defaultValue);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  hasProperty(name, defaultValue = '') {\r\n    return has(this.data, name);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {{}}\r\n   */\r\n  setProperty(name, value = '') {\r\n    if(value instanceof AltrpModel){\r\n      value = value.getData(false);\r\n    }\r\n    return set(this.data, name, value);\r\n  }\r\n  /**\r\n   * Удаляет свойства name\r\n   * @params {string} name\r\n   * @return {*}\r\n   */\r\n  unsetProperty(name) {\r\n    return unset(this.data, name);\r\n  }\r\n}\r\nwindow.AltrpModel = AltrpModel;\r\nexport default AltrpModel\r\n","import {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n/**\r\n * @return {string}\r\n */\r\n\r\nexport default function AccordionComponent(settings) {\r\n  const styles = [\r\n    \"altrp-accordion-item-label\",\r\n\r\n    [\"\", \"font_typographic_title_style\", \"typographic\"],\r\n    [\"text-align\", \"alignment_item_style\"],\r\n    [\"color\", \"color_title_style\", \"color\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"spacing_icon_style\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `margin-left: ${slider}; margin-right: ${slider};`\r\n      }\r\n    },\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item-content\",\r\n\r\n    [\"background-color\", \"background_color_content_style\", \"color\"],\r\n    [\"color\", \"color_content_style\", \"color\"],\r\n    [\"border-radius\", \"border_radius_content_style\", \"dimensions\"],\r\n    [\"text-align\", \"alignment_item_style\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item-content-show\",\r\n\r\n    [\"padding\", \"padding_content_style\", \"dimensions\"],\r\n    [\"margin-top\", \"spacing_content_style\", \"slider\"],\r\n    [\"\", \"typographic_content_style\", \"typographic\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item\",\r\n\r\n    [\"margin-top\", \"spacing_item_style\", \"slider\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item-button\",\r\n\r\n    [\"flex-direction\", \"alignment_icon_style\"],\r\n    [\"background-color\", \"background_color_title_style\", \"color\"],\r\n    [\"border-style\", \"border_type_title_style\"],\r\n    [\"border-width\", \"border_width_title_style\", \"dimensions\"],\r\n    [\"border-color\", \"border_color_title_style\", \"color\"],\r\n    [\"border-radius\", \"border_radius_title_style\", \"dimensions\"],\r\n    [\"padding\", \"padding_title_style\", \"dimensions\"],\r\n    [\"\", \"box_shadow_title_style\", \"shadow\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item-icon path\",\r\n\r\n    [\"fill\", \"color_icon_style\", \"color\"],\r\n\r\n    \"}\",\r\n\r\n\r\n    \"altrp-accordion-item-button:hover .altrp-accordion-item-label\",\r\n\r\n    [\"color\", \"color_title_style\", \"color\", \":hover\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"spacing_icon_style\", \":hover\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `margin-left: ${slider}; margin-right: ${slider};`\r\n      } else {\r\n        return \"\"\r\n      }\r\n    },\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item-content:hover\",\r\n\r\n    [\"background-color\", \"background_color_content_style\", \"color\", \":hover\"],\r\n    [\"color\", \"color_content_style\", \"color\", \":hover\"],\r\n    [\"border-radius\", \"border_radius_content_style\", \"dimensions\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item-content-show:hover\",\r\n    [\"margin-top\", \"spacing_content_style\", \"slider\", \":hover\"],\r\n    [\"\", \"typographic_content_style\", \"typographic\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item-button:hover\",\r\n\r\n    [\"background-color\", \"background_color_title_style\", \"color\", \":hover\"],\r\n    [\"border-style\", \"border_type_title_style\", null, \":hover\"],\r\n    [\"border-width\", \"border_width_title_style\", \"dimensions\", \":hover\"],\r\n    [\"border-color\", \"border_color_title_style\", \"color\", \":hover\"],\r\n    [\"border-radius\", \"border_radius_title_style\", \"dimensions\", \":hover\"],\r\n    [\"\", \"box_shadow_title_style\", \"shadow\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-accordion-item-button:hover .altrp-accordion-item-icon path\",\r\n\r\n    [\"fill\", \"color_icon_style\", \"color\", \":hover\"],\r\n\r\n    \"}\",\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","import {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\n\r\n/**\r\n * @return {string}\r\n */\r\n\r\nexport default function AdvancedComponent(settings) {\r\n\r\n  const styles = [\r\n    [\"z-index\", \"z_index\"],\r\n\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"advanced_opacity\");\r\n\r\n      if(value && value.size) {\r\n        return `opacity: ${value.size};`\r\n      } else {\r\n        return ''\r\n      }\r\n    },\r\n    // () => {\r\n    //   let element_css_editor = getResponsiveSetting(settings, \"element_css_editor\");\r\n    //   console.log(element_css_editor);\r\n    //   return _.isString(element_css_editor) ? element_css_editor.replace(/__selector__/g, '&') : '';\r\n    // },\r\n\r\n    [\"padding\", \"positioning_padding\", \"dimensions\"],\r\n    [\"margin\", \"positioning_margin\", \"dimensions\"],\r\n\r\n    [\"width\", \"positioning_width_type\"],\r\n    [\"width\", \"positioning_custom_width\", \"slider\"],\r\n\r\n    [\"align-self\", \"positioning_vertical_align\"],\r\n\r\n    [\"position\", \"positioning_position_type\", \"\", \"\"],\r\n\r\n    [\"left\", \"positioning_horizontal_offset\", \"slider\"],\r\n    [\"bottom\", \"positioning_vertical_offset\", \"slider\"],\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","import {\r\n  sliderStyled,\r\n  styledString,\r\n  colorPropertyStyled,\r\n  gradientStyled,\r\n  backgroundImageControllerToStyles,\r\n  simplePropertyStyled,\r\n  borderWidthStyled,\r\n  sizeStyled,\r\n  shadowControllerToStyles,\r\n  typographicControllerToStyles,\r\n  iconSizeStyled,\r\n  dimensionsControllerToStyles,\r\n} from \"../../../../../../front-app/src/js/helpers/styles\";\r\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\n\r\nexport function btnStyles(settings) {\r\n  return [\r\n    \"altrp-btn-wrapper\",\r\n\r\n    [\"align-items\", \"button_alignment\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-btn\",\r\n    // [\"flex-direction\", \"button_icon_position\"],\r\n    [\"justify-content\", \"content_alignment\"],\r\n    [\"margin\", \"position_margin\", \"dimensions\"],\r\n    [\"padding\", \"position_padding\", \"dimensions\"],\r\n    [\"z-index\", \"position_z_index\"],\r\n    [\"transition-property\", \"button_transition_property\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"button_transition_duration\");\r\n\r\n      if(value) {\r\n        return `transition-duration: ${value.size}s;`;\r\n      } else {\r\n        return ''\r\n      }\r\n    },\r\n    [\"transition-timing-function\", \"button_transition_timing\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"button_transition_delay\");\r\n\r\n      if (value) {\r\n        return `transition-delay: ${value.size}s;`;\r\n      } else {\r\n        return ''\r\n      }\r\n    },\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"position_opacity\");\r\n\r\n      if(value && value.size) {\r\n        return `opacity: ${value.size};`\r\n      } else {\r\n        return ''\r\n      }\r\n    },\r\n    [\"background-color\", \"background_color\", \"color\"],\r\n    [\"\", \"gradient\", \"gradient\"],\r\n    [\"\", \"background_image\", \"media\"],\r\n    [\"border-style\", \"border_type\"],\r\n    [\"border-width\", \"border_width\", \"dimensions\"],\r\n    [\"border-color\", \"border_color\", \"color\"],\r\n    [\"border-radius\", \"border_radius\", \"dimensions\"],\r\n    [\"\", \"style_background_shadow\", \"shadow\"],\r\n    [\"\", \"font_typographic\", \"typographic\"],\r\n    [\"color\", \"font_color\", \"color\"],\r\n\r\n    \"&:hover\",\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"position_opacity\", ':hover');\r\n\r\n      if (value && value.size) {\r\n        return `opacity: ${value.size};`\r\n      } else {\r\n        return ''\r\n      }\r\n    },\r\n    [\"background-color\", \"background_color\", \"color\", \":hover\"],\r\n    [\"\", \"gradient\", \"gradient\", \":hover\"],\r\n    [\"border-style\", \"border_type\", \"\", \":hover\"],\r\n    [\"border-width\", \"border_width\", \"dimensions\", \":hover\"],\r\n    [\"border-color\", \"border_color\", \"color\", \":hover\"],\r\n    [\"border-radius\", \"border_radius\", \"dimensions\", \":hover\"],\r\n    [\"\", \"style_background_shadow\", \"shadow\", \":hover\"],\r\n    [\"color\", \"font_color\", \"color\", \":hover\"],\r\n    [\"\", \"background_image\", \"media\", \":hover\"],\r\n\r\n    \"& .altrp-btn-icon\",\r\n    // [\"width\", \"icon_size\", \"slider\", \":hover\"],\r\n    // [\"height\", \"icon_size\", \"slider\", \":hover\"],\r\n\r\n    \"& svg\",\r\n    [\"background-color\", \"icon_color_background\", \"color\", \":hover\"],\r\n    [\"width\", \"icon_size\", \"slider\", \":hover\"],\r\n    [\"height\", \"icon_size\", \"slider\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"& img\",\r\n    [\"width\", \"icon_size\", \"slider\", \":hover\"],\r\n    [\"icon_size\", \"slider\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"& path\",\r\n    [\"fill\", \"icon_color\", \"color\", \":hover\"],\r\n    [\"stroke\", \"icon_color_stroke\", \"color\", \":hover\"],\r\n    \"}\",\r\n    \"}\",\r\n    \"}\",\r\n  \"&.state-disabled\",\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"position_opacity\", '.state-disabled');\r\n\r\n      if (value && value.size) {\r\n        return `opacity: ${value.size};`\r\n      } else {\r\n        return ''\r\n      }\r\n    },\r\n    [\"background-color\", \"background_color\", \"color\", \".state-disabled\"],\r\n    [\"\", \"gradient\", \"gradient\", \".state-disabled\"],\r\n    [\"border-style\", \"border_type\", \"\", \".state-disabled\"],\r\n    [\"border-width\", \"border_width\", \"dimensions\", \".state-disabled\"],\r\n    [\"border-color\", \"border_color\", \"color\", \".state-disabled\"],\r\n    [\"border-radius\", \"border_radius\", \"dimensions\", \".state-disabled\"],\r\n    [\"\", \"style_background_shadow\", \"shadow\", \".state-disabled\"],\r\n    [\"color\", \"font_color\", \"color\", \".state-disabled\"],\r\n    [\"\", \"background_image\", \"media\", \".state-disabled\"],\r\n\r\n    \"& .altrp-btn-icon\",\r\n    // [\"width\", \"icon_size\", \"slider\", \":hover\"],\r\n    // [\"height\", \"icon_size\", \"slider\", \":hover\"],\r\n\r\n    \"& svg\",\r\n    [\"background-color\", \"icon_color_background\", \"color\", \".state-disabled\"],\r\n    [\"width\", \"icon_size\", \"slider\", \".state-disabled\"],\r\n    [\"height\", \"icon_size\", \"slider\", \".state-disabled\"],\r\n    \"}\",\r\n\r\n    \"& img\",\r\n    [\"width\", \"icon_size\", \"slider\", \".state-disabled\"],\r\n    [\"icon_size\", \"slider\", \".state-disabled\"],\r\n    \"}\",\r\n\r\n    \"& path\",\r\n    [\"fill\", \"icon_color\", \"color\", \".state-disabled\"],\r\n    [\"stroke\", \"icon_color_stroke\", \"color\", \".state-disabled\"],\r\n    \"}\",\r\n    \"}\",\r\n    \"}\",\r\n\r\n    \"& .altrp-btn-icon\",\r\n    [\"padding\", \"icon_padding\", \"dimensions\"],\r\n    // [\"width\", \"icon_size\", \"slider\"],\r\n    // [\"height\", \"icon_size\", \"slider\"],\r\n\r\n    \"& svg\",\r\n    [\"background-color\", \"icon_color_background\", \"color\"],\r\n    [\"width\", \"icon_size\", \"slider\"],\r\n    [\"height\", \"icon_size\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"& img\",\r\n    [\"width\", \"icon_size\", \"slider\"],\r\n    [\"icon_size\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"& path\",\r\n    [\"fill\", \"icon_color\", \"color\"],\r\n    [\"stroke\", \"icon_color_stroke\", \"color\"],\r\n    \"}\",\r\n    \"}\",\r\n\r\n    \"}\",\r\n\r\n    \"altrp-background-image\",\r\n    [\"background-position\", \"background_position\"],\r\n    [\"background-attachment\", \"background_attachment\"],\r\n    [\"background-repeat\", \"background_repeat\"],\r\n    [\"background-size\", \"background_image_width\", \"slider\"],\r\n    [\"background-size\", \"background_size\"],\r\n    \"}\",\r\n  ]\r\n}\r\n\r\n/**\r\n * @return {string}\r\n */\r\n\r\nexport default function ButtonComponent(settings) {\r\n\r\n  const styles = [\r\n\r\n    ...btnStyles(settings)\r\n  ];\r\n\r\n  let stylesInString = '';\r\n\r\n  stylesInString += `& .altrp-btn.active {`;\r\n\r\n  const backgroundColorActive = getResponsiveSetting(settings, 'background_color', '.active');\r\n  if (backgroundColorActive) {\r\n    stylesInString += colorPropertyStyled(backgroundColorActive, 'background-color');\r\n  }\r\n\r\n  const gradientActive = getResponsiveSetting(settings, \"gradient\", '.active');\r\n\r\n  if (gradientActive) {\r\n    stylesInString += gradientStyled(gradientActive);\r\n  }\r\n\r\n  const backgroundImageActive = getResponsiveSetting(settings, \"background_image\", '.active');\r\n\r\n  if (backgroundImageActive) {\r\n    stylesInString += backgroundImageControllerToStyles(backgroundImageActive);\r\n  }\r\n\r\n  const borderTypeActive = getResponsiveSetting(settings, \"border_type\", '.active');\r\n\r\n  if (borderTypeActive) {\r\n    stylesInString += simplePropertyStyled(borderTypeActive, \"border-style\");\r\n  }\r\n\r\n  const borderWidthActive = getResponsiveSetting(settings, \"border_width\", '.active');\r\n\r\n  if (borderWidthActive) {\r\n    stylesInString += borderWidthStyled(borderWidthActive);\r\n  }\r\n\r\n  const borderColorActive = getResponsiveSetting(settings, \"border_color\", '.active');\r\n\r\n  if (borderColorActive) {\r\n    stylesInString += colorPropertyStyled(borderColorActive, \"border-color\");\r\n  }\r\n\r\n  const borderRadiusActive = getResponsiveSetting(settings, \"border_radius\", '.active');\r\n\r\n  if (borderRadiusActive) {\r\n    stylesInString += sizeStyled(borderRadiusActive, \"border-radius\");\r\n  }\r\n\r\n  const boxShadowActive = getResponsiveSetting(settings, 'style_background_shadow', '.active');\r\n\r\n  if (boxShadowActive) {\r\n    stylesInString += shadowControllerToStyles(boxShadowActive);\r\n  }\r\n\r\n  const typographicActive = getResponsiveSetting(settings, \"font_typographic\", '.active');\r\n\r\n  if (typographicActive) {\r\n    stylesInString += typographicControllerToStyles(typographicActive);\r\n  }\r\n\r\n  const colorActive = getResponsiveSetting(settings, 'font_color', '.active');\r\n\r\n  if (colorActive) {\r\n    stylesInString += colorPropertyStyled(colorActive, 'color');\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn.active svg {`;\r\n\r\n  const backgroundColorSvgActive = getResponsiveSetting(settings, 'icon_color_background', '.active');\r\n\r\n  if (backgroundColorSvgActive) {\r\n    stylesInString += colorPropertyStyled(backgroundColorSvgActive, 'background-color');\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn.active path {`;\r\n\r\n  const fillColorSvgActive = getResponsiveSetting(settings, 'icon_color', '.active');\r\n\r\n  if (fillColorSvgActive) {\r\n    stylesInString += colorPropertyStyled(fillColorSvgActive, 'fill');\r\n  }\r\n\r\n  const strokeColorSvgActive = getResponsiveSetting(settings, 'icon_color_stroke', '.active');\r\n\r\n  if (strokeColorSvgActive) {\r\n    stylesInString += colorPropertyStyled(strokeColorSvgActive, 'stroke');\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn svg {`;\r\n\r\n  const backgroundColorSvg = getResponsiveSetting(settings, 'icon_color_background');\r\n\r\n  if (backgroundColorSvg) {\r\n    stylesInString += colorPropertyStyled(backgroundColorSvg, 'background-color');\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn:hover svg {`;\r\n\r\n  const backgroundColorSvgHover = getResponsiveSetting(settings, 'icon_color_background', ':hover');\r\n\r\n  if (backgroundColorSvgHover) {\r\n    stylesInString += colorPropertyStyled(backgroundColorSvgHover, 'background-color');\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn path {`;\r\n\r\n  const fillColorSvg = getResponsiveSetting(settings, 'icon_color');\r\n\r\n  if (fillColorSvg) {\r\n    stylesInString += colorPropertyStyled(fillColorSvg, 'fill');\r\n  }\r\n\r\n  const strokeColorSvg = getResponsiveSetting(settings, 'icon_color_stroke');\r\n\r\n  if (strokeColorSvg) {\r\n    stylesInString += colorPropertyStyled(strokeColorSvg, 'stroke');\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn:hover path {`;\r\n\r\n  const fillColorSvgHover = getResponsiveSetting(settings, 'icon_color', ':hover');\r\n\r\n  if (fillColorSvgHover) {\r\n    stylesInString += colorPropertyStyled(fillColorSvgHover, 'fill');\r\n  }\r\n\r\n  const strokeColorSvgHover = getResponsiveSetting(settings, 'icon_color_stroke', ':hover');\r\n\r\n  if (strokeColorSvgHover) {\r\n    stylesInString += colorPropertyStyled(strokeColorSvgHover, 'stroke');\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn .altrp-btn-icon-right svg, & .altrp-btn .altrp-btn-icon-right img {`;\r\n\r\n  const paddingIconRightBtn = getResponsiveSetting(settings, 'icon_padding_right');\r\n\r\n  if (paddingIconRightBtn) {\r\n    stylesInString += dimensionsControllerToStyles(paddingIconRightBtn);\r\n  }\r\n\r\n  const iconRightSizeBtn = getResponsiveSetting(settings, 'icon_size_right');\r\n\r\n  if (iconRightSizeBtn) {\r\n    stylesInString += iconSizeStyled(iconRightSizeBtn);\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn .altrp-btn-icon-left svg, & .altrp-btn .altrp-btn-icon-left img {`;\r\n\r\n  const paddingIconLeftBtn = getResponsiveSetting(settings, 'icon_padding_left');\r\n\r\n  if (paddingIconLeftBtn) {\r\n    stylesInString += dimensionsControllerToStyles(paddingIconLeftBtn);\r\n  }\r\n\r\n  const iconLeftSizeBtn = getResponsiveSetting(settings, 'icon_size_left');\r\n\r\n  if (iconLeftSizeBtn) {\r\n    stylesInString += iconSizeStyled(iconLeftSizeBtn);\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn .altrp-btn-icon-top svg, & .altrp-btn .altrp-btn-icon-top img {`;\r\n\r\n  const paddingIconTopBtn = getResponsiveSetting(settings, 'icon_padding_top');\r\n\r\n  if (paddingIconTopBtn) {\r\n    stylesInString += dimensionsControllerToStyles(paddingIconTopBtn);\r\n  }\r\n\r\n  const iconTopSizeBtn = getResponsiveSetting(settings, 'icon_size_top');\r\n\r\n  if (iconTopSizeBtn) {\r\n    stylesInString += iconSizeStyled(iconTopSizeBtn);\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += `& .altrp-btn .altrp-btn-icon-bottom svg, & .altrp-btn .altrp-btn-icon-bottom img {`;\r\n\r\n  const paddingIconBottomBtn = getResponsiveSetting(settings, 'icon_padding_bottom');\r\n\r\n  if (paddingIconBottomBtn) {\r\n    stylesInString += dimensionsControllerToStyles(paddingIconBottomBtn);\r\n  }\r\n\r\n  const iconBottomSizeBtn = getResponsiveSetting(settings, 'icon_size_bottom');\r\n\r\n  if (iconBottomSizeBtn) {\r\n    stylesInString += iconSizeStyled(iconBottomSizeBtn);\r\n  }\r\n\r\n  stylesInString += `} `;\r\n\r\n  stylesInString += styledString(styles, settings);\r\n\r\n  return stylesInString;\r\n}\r\n","import {sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\n\r\n/**\r\n * @return {string}\r\n */\r\n(window.globalDefaults = window.globalDefaults || []).push(`\r\n  .altrp-carousel-slide-img {\r\n    background: no-repeat 50%;\r\n    -webkit-background-size: cover;\r\n    cursor: grab;\r\n    background-size: cover;\r\n    height: 100%;\r\n    width: 100%;\r\n    object-fit: cover;\r\n    border-style: solid;\r\n    border-width: 0;\r\n    position: relative;\r\n  }\r\n\r\n  .altrp-carousel-slide {\r\n      overflow: hidden;\r\n      height: 220px;\r\n      position: relative;\r\n  }\r\n\r\n  .slick-list {\r\n    height: 100%;\r\n  }\r\n\r\n  .altrp-carousel-arrow svg {\r\n    width: 50px;\r\n    height: 50px;\r\n  }\r\n\r\n  .slick-slide, .altrp-carousel-dots {\r\n    padding: 0 15px;\r\n  }\r\n\r\n  .altrp-carousel-paging {\r\n    width: 10px;\r\n    height: 10px;\r\n    background-color: #a4a4a4;\r\n  }\r\n\r\n  .altrp-carousel-slide-overlay {\r\n    background-color: rgb(255, 255, 255);\r\n  }\r\n\r\n  .altrp-carousel-arrow {\r\n      cursor: pointer;\r\n      position: relative;\r\n      z-index: 999;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n  }\r\n\r\n  .altrp-carousel-arrow-next {\r\n      transform: rotate(180deg);\r\n  }\r\n\r\n  .altrp-carousel {\r\n      position: relative;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      height: 100%;\r\n      width: 100%;\r\n  }\r\n\r\n  .altrp-carousel-paging {\r\n      border-radius: 10vh;\r\n      background-color: #a4a4a4;\r\n      padding-right: 1px;\r\n  }\r\n\r\n  .altrp-carousel-container {\r\n      width: 100%;\r\n  }\r\n\r\n  .altrp-carousel-dots .slick-active .altrp-carousel-paging {\r\n      background-color: #136aed;\r\n  }\r\n\r\n  .altrp-carousel-dots-bottom-left {\r\n      text-align: left !important;\r\n  }\r\n\r\n  .altrp-carousel-dots-bottom-right {\r\n      text-align: right !important;\r\n  }\r\n\r\n  .altrp-carousel-dots-top-left {\r\n      text-align: left !important;\r\n  }\r\n\r\n  .altrp-carousel-dots-top {\r\n      text-align: center !important;\r\n      bottom: auto !important;\r\n  }\r\n\r\n  .altrp-carousel-dots-top-right {\r\n      text-align: right !important;\r\n  }\r\n\r\n  .altrp-carousel-dots {\r\n      position: relative;\r\n      list-style: none;\r\n      padding: 0;\r\n      text-align: center;\r\n      margin: 0;\r\n      bottom: 0;\r\n  }\r\n\r\n  .altrp-carousel-dots li {\r\n      position: relative;\r\n      display: inline-block;\r\n      margin-left: 5px;\r\n      cursor: pointer;\r\n  }\r\n\r\n  .altrp-carousel-paging:first-child {\r\n      margin-left: 0;\r\n  }\r\n\r\n  .altrp-carousel-container-no-arrow {\r\n      width: 100%;\r\n  }\r\n\r\n  .altrp-carousel-arrow-top-left {\r\n      top: 0;\r\n      left: 0;\r\n      margin-top: 10px;\r\n      margin-left: 10px;\r\n  }\r\n\r\n  .altrp-carousel-arrows-container {\r\n      position: absolute;\r\n      display: flex;\r\n      font-size: 25px;\r\n      flex-direction: row;\r\n      z-index: 999;\r\n  }\r\n\r\n  .altrp-carousel-arrow-top {\r\n      top: 0;\r\n  }\r\n\r\n  .altrp-carousel-arrows-container .altrp-carousel-arrow-prev {\r\n      display: flex;\r\n      margin-right: 2em;\r\n  }\r\n\r\n  .altrp-carousel-arrows-container .altrp-carousel-arrow-next {\r\n      display: flex;\r\n      margin-left: 2em;\r\n  }\r\n\r\n  .altrp-carousel-arrow-top-right {\r\n      top: 0;\r\n      right: 0;\r\n      margin-right: 10px;\r\n  }\r\n\r\n  .altrp-carousel-arrow-bottom-left {\r\n      bottom: 0;\r\n      left: 0;\r\n      margin-left: 10px;\r\n  }\r\n\r\n  .altrp-carousel-arrow-bottom {\r\n      bottom: 0;\r\n\r\n  }\r\n\r\n  .altrp-carousel-arrow-bottom-right {\r\n      bottom: 0;\r\n      right: 0;\r\n      margin-right: 10px;\r\n  }\r\n\r\n  .altrp-carousel-slides {\r\n      width: 100%;\r\n      display: flex;\r\n  }\r\n\r\n  .altrp-carousel-slides-dots-top {\r\n      flex-direction: column-reverse;\r\n  }\r\n\r\n  .altrp-carousel-slides-dots-top .altrp-carousel-dots {\r\n      margin-bottom: 15px;\r\n  }\r\n\r\n  .altrp-carousel-slides-dots-bottom {\r\n      flex-direction: column;\r\n  }\r\n\r\n  .altrp-carousel-slides-dots-bottom .altrp-carousel-dots {\r\n      margin-bottom: -15px;\r\n  }\r\n\r\n  .altrp-carousel-slide-overlay {\r\n      width: calc(100% - 40px);\r\n      margin: 20px;\r\n      top: 0;\r\n      opacity: 0;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      perspective: 20px;\r\n      height: calc(100% - 40px);\r\n      padding: 10px;\r\n      cursor: grab;\r\n      background-color: #ffffff;\r\n      z-index: 4;\r\n      position: absolute;\r\n      transition: 0.5s;\r\n  }\r\n\r\n  .altrp-carousel-slide:hover .altrp-carousel-slide-overlay {\r\n      opacity: 1;\r\n  }\r\n\r\n`);\r\n\r\nexport default function CarouselComponent(settings) {\r\n  const styles = [\r\n    \"altrp-carousel-slide\",\r\n\r\n    [\"height\", \"height_slides_content\", \"slider\"],\r\n    [\"background-color\", \"background_slides_style\", \"color\"],\r\n    [\"padding\", \"padding_slides_style\", \"dimensions\"],\r\n    [\"border-radius\", \"border_radius_slides_style\", \"dimensions\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-carousel-slide:hover\",\r\n\r\n    [\"background-color\", \"background_slides_style\", \"color\", \":hover\"],\r\n    [\"border-radius\", \"border_radius_slides_style\", \"dimensions\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"slick-list\",\r\n\r\n    [\"width\", \"width_slides_content\", \"slider\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-carousel-slide-img\",\r\n\r\n    [\"background-size\", \"image_fit_additional_content\"],\r\n\r\n    \"}\",\r\n\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"space_between_slides_style\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `\r\n        & .slick-slide { padding: 0 ${slider}; }\r\n        & .altrp-carousel-dots { padding 0 ${slider}; }\r\n        `\r\n      }\r\n    },\r\n\r\n    \"altrp-carousel-arrow\",\r\n\r\n    [\"padding\", \"padding_arrows_navigation_style\", \"dimensions\"],\r\n    [\"border-radius\", \"border_radius_arrows_navigation_style\", \"dimensions\"],\r\n    [\"background-color\", \"arrows_background_navigation_style\", \"color\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"arrows_size_navigation_style\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `svg {height: ${slider}; width: ${slider};}`\r\n      }\r\n    },\r\n\r\n    \"& svg path\",\r\n\r\n    [\"stroke\", \"arrows_color_navigation_style\", \"color\"],\r\n\r\n    \"}\",\r\n\r\n    \"}\",\r\n\r\n\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"horizontal_offset_arrows_navigation_style\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `\r\n        & .altrp-carousel-arrow-prev { left: ${slider}; }\r\n        & .altrp-carousel-arrow-next { right: ${slider}; }\r\n        `\r\n      }\r\n    },\r\n\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"vertical_no_center_offset_arrows_navigation_style\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `\r\n        & .altrp-carousel-arrow { top:${slider}; }\r\n        `\r\n      } else {\r\n        return \"\"\r\n      }\r\n    },\r\n\r\n    \"altrp-carousel-arrow:hover\",\r\n\r\n    [\"background-color\", \"arrows_background_navigation_style\", \"color\", \":hover\"],\r\n    [\"border-radius\", \"border_radius_arrows_navigation_style\", \"dimensions\", \":hover\"],\r\n\r\n    \"& svg path\",\r\n\r\n    [\"stroke\", \"arrows_color_navigation_style\", \"color\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"arrows_size_navigation_style\", \":hover\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `& svg { height: ${slider}; width: ${slider}; }`\r\n      } else {\r\n        return \"\"\r\n      }\r\n    },\r\n\r\n    \"}\",\r\n\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"dots_size_navigation_style\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `\r\n        & .altrp-carousel-paging { width: ${slider}; height: ${slider}; }\r\n        `\r\n      } else {\r\n        return \"\"\r\n      }\r\n      // & .altrp-carousel-dots li { margin-left: calc(${slider} * 0.1); }\r\n    },\r\n\r\n    \"altrp-carousel-paging\",\r\n\r\n    [\"background-color\", \"background_color_dots_navigation_style\", \"color\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-carousel-paging:hover\",\r\n\r\n    [\"background-color\", \"background_color_dots_navigation_style\", \"color\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-carousel-dots .slick-active .altrp-carousel-paging\",\r\n\r\n    [\"background-color\", \"background_color_active_dots_navigation_style\", \"color\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-carousel-dots .slick-active .altrp-carousel-paging:hover\",\r\n\r\n    [\"background-color\", \"background_color_active_dots_navigation_style\", \"color\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-carousel-dots\",\r\n\r\n    [\"left\", \"horizontal_offset_dots_navigation_style\", \"slider\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"vertical_no_center_offset_dots_navigation_style\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return `\r\n      transform: translateY(${slider})\r\n      `\r\n      }\r\n    },\r\n\r\n    \"}\",\r\n\r\n    \"altrp-carousel-slide-overlay\",\r\n\r\n    [\"background-color\", \"background_color_overlay\", \"color\"],\r\n\r\n\r\n    \"& .altrp-carousel-slide-overlay-text\",\r\n\r\n    [\"color\", \"font_color_overlay\", \"color\"],\r\n    [\"\", \"typographic_overlay\", \"typographic\"],\r\n\r\n    \"}\",\r\n\r\n    \"}\",\r\n\r\n    \"altrp-carousel-slide-overlay:hover\",\r\n\r\n    [\"background-color\", \"background_color_overlay\", \"color\", \":hover\"],\r\n\r\n\r\n    \"& .altrp-carousel-slide-overlay-text\",\r\n    [\"color\", \"font_color_overlay\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"}\"\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","const { getResponsiveSetting } = window.altrpHelpers;\r\nimport {\r\n  dimensionsControllerToStyles,\r\n  simplePropertyStyled,\r\n  borderWidthStyled,\r\n  colorPropertyStyled,\r\n  sizeStyled,\r\n  gradientStyled,\r\n  shadowStyled,\r\n  backgroundImageControllerToStyles,\r\n} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\nconst ColumnComponent = (settings) => {\r\n  let styles = \"\";\r\n\r\n  let flexWrap, flexDirection, align, justifyContent, overflow, backgroundColor, gradient, zIndex, borderType, borderWidth, borderColor, borderRadius, boxShadow;\r\n  let backgroundColorH, gradientH, borderTypeH, borderWidthH, borderColorH, borderRadiusH, boxShadowH;\r\n  let marginBottom, marginBottomH, backgroundImage, backgroundPosition, backgroundAttachment, backgroundRepeat, backgroundSizeInUnits, backgroundSize;\r\n  let backgroundImageH, backgroundPositionH, backgroundAttachmentH, backgroundRepeatH, backgroundSizeInUnitsH, backgroundSizeH, margin, marginH, padding, paddingH, width;\r\n\r\n  styles += \"& > div.altrp-column.altrp-column-priority {\";\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, \"style_position_padding\");\r\n  }\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  //Получаем значения width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    width = getResponsiveSetting(settings, \"layout_column_width\");\r\n  }\r\n\r\n  // if (layout_column_width) {\r\n  //   if (Number(layout_column_width)) {\r\n  //     styles += `width:${layout_column_width}%;`;\r\n  //   } else {\r\n  //     styles += `width:${layout_column_width};`;\r\n  //   }\r\n  // }\r\n\r\n  //Получаем значения margin из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    margin = getResponsiveSetting(settings, 'style_position_margin');\r\n  }\r\n\r\n  if (margin) {\r\n    styles += dimensionsControllerToStyles(margin, 'margin');\r\n  }\r\n\r\n  //Получаем значения flex-wrap из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    flexWrap = getResponsiveSetting(settings, 'layout_flex_wrap_content');\r\n  }\r\n\r\n  if (flexWrap) {\r\n    styles += simplePropertyStyled(flexWrap, 'flex-wrap');\r\n  }\r\n\r\n  //Получаем значения flex-direction из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    flexDirection = getResponsiveSetting(settings, 'layout_column_direction');\r\n  }\r\n\r\n  if (flexDirection) {\r\n    styles += simplePropertyStyled(flexDirection, 'flex-direction');\r\n  }\r\n\r\n  //Получаем значения align-content и align-items из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    align = getResponsiveSetting(settings, 'layout_type');\r\n  }\r\n\r\n  if (align) {\r\n    styles += simplePropertyStyled(align, 'align-content');\r\n    styles += simplePropertyStyled(align, 'align-items');\r\n  }\r\n\r\n  //Получаем значения justify-content из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    justifyContent = getResponsiveSetting(settings, 'layout_justify_content');\r\n  }\r\n\r\n  if (justifyContent) {\r\n    styles += simplePropertyStyled(justifyContent, 'justify-content');\r\n  }\r\n\r\n  //Получаем значения overflow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    overflow = getResponsiveSetting(settings, 'layout_overflow');\r\n  }\r\n\r\n  if (overflow) {\r\n    styles += simplePropertyStyled(overflow, 'overflow',);\r\n  }\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'column_style_background_color');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n  // console.log(settings);\r\n  //Получаем значения gradient из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    gradient = getResponsiveSetting(settings, 'gradient');\r\n  }\r\n\r\n  if (gradient) {\r\n    styles += gradientStyled(gradient);\r\n  }\r\n\r\n  //Получаем значения z-index из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    zIndex = getResponsiveSetting(settings, 'position_z_index');\r\n  }\r\n\r\n  if (zIndex) {\r\n    styles += simplePropertyStyled(zIndex, 'z-index');\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderType = getResponsiveSetting(settings, 'column_style_border_type');\r\n  }\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'column_style_border_width');\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'column_style_border_color');\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'column_style_border_radius');\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += sizeStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения box-shadow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    boxShadow = getResponsiveSetting(settings, 'column_style_box_shadow');\r\n  }\r\n\r\n  if (boxShadow) {\r\n    styles += shadowStyled(boxShadow);\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  //hover\r\n\r\n  styles += \"& > div.altrp-column.altrp-column-priority:hover {\";\r\n\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColorH = getResponsiveSetting(settings, 'column_style_background_color', ':hover');\r\n  }\r\n\r\n  if (backgroundColorH) {\r\n    styles += colorPropertyStyled(backgroundColorH, 'background-color');\r\n  }\r\n\r\n  //Получаем значения gradient из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    gradientH = getResponsiveSetting(settings, 'gradient', ':hover');\r\n  }\r\n\r\n  if (gradientH) {\r\n    styles += gradientStyled(gradientH);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderTypeH = getResponsiveSetting(settings, 'column_style_border_type', ':hover');\r\n  }\r\n\r\n  if (borderTypeH) {\r\n    styles += simplePropertyStyled(borderTypeH, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidthH = getResponsiveSetting(settings, 'column_style_border_width', ':hover');\r\n  }\r\n\r\n  if (borderWidthH) {\r\n    styles += borderWidthStyled(borderWidthH);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColorH = getResponsiveSetting(settings, 'column_style_border_color', ':hover');\r\n  }\r\n\r\n  if (borderColorH) {\r\n    styles += colorPropertyStyled(borderColorH, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadiusH = getResponsiveSetting(settings, 'column_style_border_radius', ':hover');\r\n  }\r\n\r\n  if (borderRadiusH) {\r\n    styles += sizeStyled(borderRadiusH, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения box-shadow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    boxShadowH = getResponsiveSetting(settings, 'column_style_box_shadow', ':hover');\r\n  }\r\n\r\n  if (boxShadowH) {\r\n    styles += shadowStyled(boxShadowH);\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += \"& > .altrp-element:not(:last-child) {\";\r\n\r\n  if (settings !== undefined) {\r\n    marginBottom = getResponsiveSetting(settings, 'layout_widgets-space');\r\n  }\r\n\r\n  if (marginBottom) {\r\n    styles += `margin-bottom: ${marginBottom}px; `;\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  //hover\r\n\r\n  styles += \"& > .altrp-element:not(:last-child):hover {\";\r\n\r\n  if (settings !== undefined) {\r\n    marginBottomH = getResponsiveSetting(settings, 'layout_widgets-space', ':hover');\r\n  }\r\n\r\n  if (marginBottomH) {\r\n    styles += `margin-bottom: ${marginBottomH}px; `;\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += \"& > .altrp-column.altrp-background-image {\";\r\n\r\n  //Получаем значения background-image из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundImage = getResponsiveSetting(settings, 'background_image');\r\n  }\r\n\r\n  if (backgroundImage) {\r\n    styles += backgroundImageControllerToStyles(backgroundImage);\r\n  }\r\n\r\n  //Получаем значения background-position из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundPosition = getResponsiveSetting(settings, 'background_position');\r\n  }\r\n\r\n  if (backgroundPosition) {\r\n    styles += simplePropertyStyled(backgroundPosition, 'background-position');\r\n  }\r\n\r\n  //Получаем значения background-attachment из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundAttachment = getResponsiveSetting(settings, 'background_attachment');\r\n  }\r\n\r\n  if (backgroundAttachment) {\r\n    styles += simplePropertyStyled(backgroundAttachment, 'background-attachment');\r\n  }\r\n\r\n  //Получаем значения background-repeat из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundRepeat = getResponsiveSetting(settings, 'background_repeat');\r\n  }\r\n\r\n  if (backgroundRepeat) {\r\n    styles += simplePropertyStyled(backgroundRepeat, 'background-repeat');\r\n  }\r\n\r\n  //Получаем значения background-size в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSizeInUnits = getResponsiveSetting(settings, 'background_image_width');\r\n  }\r\n\r\n  if (backgroundSizeInUnits) {\r\n    styles += sizeStyled(backgroundSizeInUnits, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-size из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSize = getResponsiveSetting(settings, 'background_size');\r\n  }\r\n\r\n  if (backgroundSize) {\r\n    styles += simplePropertyStyled(backgroundSize, 'background-size');\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  //hover\r\n\r\n  styles += \"& > div.altrp-column.altrp-background-image:hover {\";\r\n\r\n  //Получаем значения background-position из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundPositionH = getResponsiveSetting(settings, 'background_position', ':hover');\r\n  }\r\n\r\n  if (backgroundPositionH) {\r\n    styles += simplePropertyStyled(backgroundPositionH, 'background-position');\r\n  }\r\n\r\n  //Получаем значения background-attachment из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundAttachmentH = getResponsiveSetting(settings, 'background_attachment', ':hover');\r\n  }\r\n\r\n  if (backgroundAttachmentH) {\r\n    styles += simplePropertyStyled(backgroundAttachmentH, 'background-attachment');\r\n  }\r\n\r\n  //Получаем значения background-repeat из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundRepeatH = getResponsiveSetting(settings, 'background_repeat', ':hover');\r\n  }\r\n\r\n  if (backgroundRepeatH) {\r\n    styles += simplePropertyStyled(backgroundRepeatH, 'background-repeat');\r\n  }\r\n\r\n  //Получаем значения background-size в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSizeInUnitsH = getResponsiveSetting(settings, 'background_image_width', ':hover');\r\n  }\r\n\r\n  if (backgroundSizeInUnitsH) {\r\n    styles += sizeStyled(backgroundSizeInUnitsH, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-size из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSizeH = getResponsiveSetting(settings, 'background_size', ':hover');\r\n  }\r\n\r\n  if (backgroundSizeH) {\r\n    styles += simplePropertyStyled(backgroundSizeH, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-image из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundImageH = getResponsiveSetting(settings, 'background_image', ':hover');\r\n  }\r\n\r\n  if (backgroundImageH) {\r\n    styles += backgroundImageControllerToStyles(backgroundImageH);\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  //<editor-fold description=active>\r\n  styles += \"& > div.altrp-column.altrp-column-priority.active {\";\r\n\r\n  //Получаем значения background-position из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundPositionH = getResponsiveSetting(settings, 'background_position', '.active');\r\n  }\r\n\r\n  if (backgroundPositionH) {\r\n    styles += simplePropertyStyled(backgroundPositionH, 'background-position');\r\n  }\r\n\r\n  //Получаем значения background-attachment из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundAttachmentH = getResponsiveSetting(settings, 'background_attachment', '.active');\r\n  }\r\n\r\n  if (backgroundAttachmentH) {\r\n    styles += simplePropertyStyled(backgroundAttachmentH, 'background-attachment');\r\n  }\r\n\r\n  //Получаем значения background-repeat из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundRepeatH = getResponsiveSetting(settings, 'background_repeat', '.active');\r\n  }\r\n\r\n  if (backgroundRepeatH) {\r\n    styles += simplePropertyStyled(backgroundRepeatH, 'background-repeat');\r\n  }\r\n\r\n  //Получаем значения background-size в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSizeInUnitsH = getResponsiveSetting(settings, 'background_image_width', '.active');\r\n  }\r\n\r\n  if (backgroundSizeInUnitsH) {\r\n    styles += sizeStyled(backgroundSizeInUnitsH, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-size из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSizeH = getResponsiveSetting(settings, 'background_size', '.active');\r\n  }\r\n\r\n  if (backgroundSizeH) {\r\n    styles += simplePropertyStyled(backgroundSizeH, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-image из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundImageH = getResponsiveSetting(settings, 'background_image', '.active');\r\n  }\r\n\r\n  if (backgroundImageH) {\r\n    styles += backgroundImageControllerToStyles(backgroundImageH);\r\n  }\r\n  styles += \"} \";\r\n\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColorH = getResponsiveSetting(settings, 'column_style_background_color', '.active');\r\n  }\r\n\r\n  if (backgroundColorH) {\r\n    styles += colorPropertyStyled(backgroundColorH, 'background-color');\r\n  }\r\n\r\n  //Получаем значения gradient из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    gradientH = getResponsiveSetting(settings, 'gradient', '.active');\r\n  }\r\n\r\n  if (gradientH) {\r\n    styles += gradientStyled(gradientH);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderTypeH = getResponsiveSetting(settings, 'column_style_border_type', '.active');\r\n  }\r\n\r\n  if (borderTypeH) {\r\n    styles += simplePropertyStyled(borderTypeH, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidthH = getResponsiveSetting(settings, 'column_style_border_width', '.active');\r\n  }\r\n\r\n  if (borderWidthH) {\r\n    styles += borderWidthStyled(borderWidthH);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColorH = getResponsiveSetting(settings, 'column_style_border_color', '.active');\r\n  }\r\n\r\n  if (borderColorH) {\r\n    styles += colorPropertyStyled(borderColorH, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadiusH = getResponsiveSetting(settings, 'column_style_border_radius', '.active');\r\n  }\r\n\r\n  if (borderRadiusH) {\r\n    styles += sizeStyled(borderRadiusH, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения box-shadow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    boxShadowH = getResponsiveSetting(settings, 'column_style_box_shadow', '.active');\r\n  }\r\n\r\n  if (boxShadowH) {\r\n    styles += shadowStyled(boxShadowH);\r\n  }\r\n\r\n  //</editor-fold>\r\n  return styles;\r\n};\r\n\r\nexport default ColumnComponent\r\n","import {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\nexport function dashboardStyles(settings){\r\n\r\n    const style_font_typographic =() => {\r\n        const value = getResponsiveSetting(settings, \"style_font_typographic\");\r\n    \r\n        if(value) {\r\n          if(value.family) {\r\n            if(_.isString(value.family)) {\r\n              return `font-family: \"${value.family}\" sans-serif !important;`;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    \r\n    return [\r\n        \"altrp-dashboard__card--background\",\r\n          [\"background-color\", \"style_background_color\", \"color\", \"\", true],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--settings-tooltip-background\",\r\n          [\"background-color\", \"style_settings_tooltip_background_color\", \"color\", \"\", true],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--settings-tooltip-icon-background\",\r\n          [\"background-color\", \"style_settings_tooltip_icon_background_color\", \"color\", \"\", true],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--border-color\",\r\n          [\"border-color\", \"style_border_color\", \"color\"],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--border-style\",\r\n          [\"border-style\", \"style_border_style\"],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--border\",\r\n          [\"border-width\", \"style_border_width\", \"slider\"],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--border-radius\",\r\n          [\"border-radius\", \"style_border_radius\", \"slider\"],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--font\",\r\n          [\"border-style\", \"border_type_card\"],\r\n          [\"border-width\", \"border_width_card\", \"dimensions\"],\r\n          [\"border-color\", \"altrp-dashboard__card--font\", \"color\"],\r\n          [\"border-radius\", \"border_radius_card\", \"dimensions\"],\r\n          [\"\", \"style_background_shadow\", \"shadow\"],\r\n          style_font_typographic(),\r\n          \"& text\",\r\n            style_font_typographic(),\r\n          \"}\",\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--font-color\",\r\n          [\"color\", \"style_font_color\", \"color\"],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--font-size\",\r\n          [\"font-size\", \"style_font_size\", \"slider\"],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__card--font-weight\",\r\n          [\"font-weight\", \"style_font_weight\", \"slider\"],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__tooltip--label-background\",\r\n          [\"margin\", \"style_margin_tooltip\", \"dimensions\"],\r\n          [\"background-color\", \"style_background_color_tooltip\", \"color\", \"\", true],\r\n          [\"\", \"style_background_tooltip_shadow\", \"shadow\"],\r\n          [\"border-style\", \"border_type_tooltip\"],\r\n          [\"border-width\", \"border_width_tooltip\", \"dimensions\"],\r\n          [\"border-color\", \"border_color_tooltip\", \"color\"],\r\n        \"}\",\r\n    \r\n        \"altrp-dashboard__tooltip--font\",\r\n          [\"padding\", \"style_padding_tooltip\", \"dimensions\"],\r\n          [\"\", \"style_font_tooltip\", \"typographic\"],\r\n          [\"color\", \"style_font_color_tooltip\", \"color\"],\r\n        \"}\",\r\n      ];\r\n}\r\n\r\nexport default function DashboardComponent(settings){\r\n    const styles=[\r\n        ...dashboardStyles(settings)\r\n    ];\r\n\r\n    return styledString(styles,settings);\r\n}","import { styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n/**\r\n * @return {string}\r\n */\r\n\r\nexport default function DatePickerComponent(settings, elementId) {\r\n  const styles = [\r\n    `! div.altrp-date-picker${elementId}`,\r\n      [\"padding\", \"picker_padding\", \"dimensions\"],\r\n      [\"background-color\", \"picker_background\", \"color\"],\r\n      [\"border-style\", \"picker_border_type\"],\r\n      [\"border-width\", \"picker_border_width\", \"dimensions\"],\r\n      [\"border-color\", \"picker_border_color\", \"color\"],\r\n      [\"border-radius\", \"picker_border_radius\", \"dimensions\"],\r\n      [\"\", \"picker_shadow\", \"shadow\"],\r\n      [\"\", \"picker_typographic\", \"typographic\"],\r\n      \"bp3-datepicker-month-select select\",\r\n        [\"\", \"picker_month_typographic\", \"typographic\"],\r\n        [\"color\", \"picker_month_color\", \"color\"],\r\n      \"}\",\r\n      \"bp3-datepicker-year-select select\",\r\n        [\"\", \"picker_year_typographic\", \"typographic\"],\r\n        [\"color\", \"picker_year_color\", \"color\"],\r\n      \"}\",\r\n      \"bp3-icon > svg:not([fill])\",\r\n        [\"fill\", \"picker_icons_color\", \"color\"],\r\n      \"}\",\r\n      \"DayPicker-Weekday\",\r\n        [\"\", \"date_weekday_typographic\", \"typographic\"],\r\n        [\"color\", \"date_weekday_color\", \"color\"],\r\n      \"}\",\r\n      \"DayPicker-Day.DayPicker-Day.DayPicker-Day\",\r\n        [\"\", \"date_selected_typographic\", \"typographic\"],\r\n        [\"background-color\", \"date_background_color\", \"color\"],\r\n        [\"color\", \"date_font_color\", \"color\"],\r\n        [\"border-radius\", \"date_radius\", \"dimensions\"],\r\n      \"}\",\r\n      \"DayPicker-Day.DayPicker-Day.DayPicker-Day:hover\",\r\n        [\"background-color\", \"date_background_color\", \"color\", \":hover\"],\r\n        [\"color\", \"date_font_color\", \"color\", \":hover\"],\r\n        [\"border-radius\", \"date_radius\", \"dimensions\", \":hover\"],\r\n      \"}\",\r\n      \"& div.DayPicker-Day--selected.DayPicker-Day--selected.DayPicker-Day--selected\",\r\n        [\"color\", \"date_selected_font_color\", \"color\"],\r\n        [\"background-color\", \"date_selected_background_color\", \"color\"],\r\n      \"}\",\r\n      \"& div.DayPicker-Day--selected.DayPicker-Day--selected.DayPicker-Day--selected:hover\",\r\n        [\"color\", \"date_selected_font_color\", \"color\", \":hover\"],\r\n        [\"background-color\", \"date_selected_background_color\", \"color\", \":hover\"],\r\n      \"}\",\r\n      \"DayPicker-Day--outside.DayPicker-Day--outside\",\r\n        [\"color\", \"date_outside_font_color\", \"color\"],\r\n        [\"background-color\", \"date_outside_background_color\", \"color\"],\r\n      \"}\",\r\n      \"DayPicker-Day--outside:hover\",\r\n        [\"color\", \"date_outside_font_color\", \"color\", \":hover\"],\r\n       [\"background-color\", \"date_outside_background_color\", \"color\", \":hover\"],\r\n      \"}\",\r\n    \"}\",\r\n\r\n    `! div.altrp-date-picker-popover-${elementId}`,\r\n      [\"\", \"picker_shadow\", \"shadow\"],\r\n      [\"border-radius\", \"picker_border_radius\", \"dimensions\"],\r\n\r\n      \"bp3-popover-arrow-fill\",\r\n        [\"fill\", \"picker_background\", \"color\"],\r\n      \"}\",\r\n\r\n      \"bp3-popover-content\",\r\n        [\"border-radius\", \"picker_border_radius\", \"dimensions\"],\r\n      \"}\",\r\n    \"}\"\r\n  ];\r\n  return styledString(styles, settings)\r\n}\r\n","import {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\nexport default function DiagramComponent(settings) {\r\n  const styles = [\r\n    \"altrp-dashboard__tooltip--margin\",\r\n      [\"margin\", \"style_margin_tooltip\", \"dimensions\"],\r\n      [\"padding\", \"style_padding_tooltip\", \"dimensions\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--width\",\r\n      [\"padding-top\", \"style_width_tooltip\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--font\",\r\n      [\"\", \"style_font_tooltip\", \"typographic\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--font-color\",\r\n      [\"color\", \"style_font_color_tooltip\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--label-background\",\r\n      [\"background-color\", \"style_background_color_tooltip\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--label-background-shadow\",\r\n      [\"background-color\", \"style_background_tooltip_shadow\", \"shadow\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--border-type\",\r\n      [\"border-style\", \"border_type_tooltip\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--border-width\",\r\n      [\"border-width\", \"border_width_tooltip\", \"dimensions\"],\r\n    \"}\",\r\n\r\n    \"altrp-dashboard__tooltip--border-color\",\r\n      [\"border-color\", \"border_color_tooltip\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-diagram\",\r\n      [\"width\", \"width\", \"slider\"],\r\n      [\"height\", \"height\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-btn\",\r\n      [\"margin\", \"margin\", \"dimensions\"],\r\n    \"}\",\r\n  ];\r\n  return styledString(styles, settings)\r\n}\r\n","import {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n/**\r\n * @return {string}\r\n */\r\n\r\nexport default function DividerComponent(settings) {\r\n  const styles = [\r\n    \"altrp-divider-separator\",\r\n\r\n    [\"width\", \"divider_width\", \"slider\"],\r\n\r\n    \"}\",\r\n\r\n    \"&\",\r\n\r\n    [\"align-items\", \"divider_alignment\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-divider\",\r\n\r\n    [\"margin\", \"position_margin\", \"dimensions\"],\r\n    [\"z-index\", \"position_z_index\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"divider_style_gap\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return ` padding-top: ${slider}; padding-bottom: ${slider}; `\r\n      }\r\n    },\r\n\r\n    \"}\",\r\n\r\n    \"altrp-divider-label\",\r\n\r\n    [\"color\", \"text_style_color\", \"color\"],\r\n    [\"\", \"text_style_typographic\", \"typographic\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-divider .altrp-divider-separator\",\r\n    [\"border-color\", \"divider_style_color\", \"color\"],\r\n    \"}\",\r\n    \"altrp-divider.active\",\r\n\r\n    [\"margin\", \"position_margin\", \"dimensions\", \".active\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"divider_style_gap\", \".active\");\r\n      const slider = sliderStyled(value);\r\n\r\n      if(slider) {\r\n        return ` padding-top: ${slider}; padding-bottom: ${slider}; `\r\n      }\r\n    },\r\n\r\n    \"& .altrp-divider-label\",\r\n\r\n    [\"color\", \"text_style_color\", \"color\", \".active\"],\r\n\r\n    \"}\",\r\n\r\n    \"}\",\r\n    \"altrp-divider.active .altrp-divider-separator\",\r\n    [\"border-color\", \"divider_style_color\", \"color\", \".active\"],\r\n    \"}\",\r\n\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","import {sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\nimport {btnStyles} from \"./ButtonComponent\";\r\n\r\n/**\r\n * @return {string}\r\n */\r\nexport default function DropbarWidgetComponent(settings) {\r\n\r\n  const styles = [\r\n    ...btnStyles(settings)\r\n  ];\r\n\r\n  return styledString(styles, settings) + \"& .altrp-btn-wrapper{display:flex;flex-direction:column;}\";\r\n}\r\n","import { getResponsiveSetting } from \"../../../../../../front-app/src/js/helpers\";\r\nimport {\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  simplePropertyStyled,\r\n  colorPropertyStyled,\r\n  borderWidthStyled,\r\n  shadowControllerToStyles,\r\n  sizeStyled\r\n} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n/**\r\n * Стили для класса .altrp-input-wrapper\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst inputWrapperStyle = settings => {\r\n  let styles = `&& .altrp-input-wrapper {`;\r\n  let width;\r\n  //width begin\r\n  settings && (width = getResponsiveSetting(settings, \"field_width\"));\r\n  width && (styles += sizeStyled(width, \"width\"));\r\n  //width end\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field-container\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst containerStyle = settings => {\r\n  let styles = `&& .altrp-field-container {`;\r\n  let margin;\r\n\r\n  //margin begin\r\n  settings && (margin = getResponsiveSetting(settings, \"position_margin\"));\r\n  margin && (styles += dimensionsControllerToStyles(margin, \"margin\"));\r\n  //margin end\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldStyle = settings => {\r\n  let styles = `&& .altrp-field {`;\r\n  let padding,\r\n    color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  const {\r\n    placeholder_and_value_alignment_position_section,\r\n    position_z_index,\r\n    input_position,\r\n    textarea_resize,\r\n    justify_options,\r\n    image_select_item_width,\r\n    image_select_item_height,\r\n    image_select_image_fit,\r\n    image_select_image_position,\r\n    cross_size\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"position_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\"));\r\n  borderType &&\r\n    (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n    (borderRadius = getResponsiveSetting(\r\n      settings,\r\n      \"global_filter_input_border_radius\"\r\n    ));\r\n  borderRadius &&\r\n    (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"background_style_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n    (styles += `text-align:${placeholder_and_value_alignment_position_section};`);\r\n\r\n  position_z_index && (styles += `z-index:${position_z_index};`);\r\n  textarea_resize && (styles += `resize:${textarea_resize};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-option{\";\r\n\r\n  input_position && (styles += `flex-direction:${input_position};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select{\";\r\n\r\n  justify_options && (styles += `justify-content:${justify_options};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select>.altrp-field{\";\r\n\r\n  image_select_item_width &&\r\n    (styles += `width:${image_select_item_width.size}${image_select_item_width.unit};`);\r\n\r\n  image_select_item_height &&\r\n    (styles += `height:${image_select_item_height.size}${image_select_item_height.unit};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select img{\";\r\n  image_select_image_fit && (styles += `object-fit:${image_select_image_fit};`);\r\n  image_select_image_position &&\r\n    (styles += `object-position:${image_select_image_position};`);\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .input-clear-btn{\";\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"cross_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  //TODO не нашел как активировать эту штуку\r\n  //cross_size && (styles += `font-size:${cross_size.size}${cross_size.unit};`);\r\n\r\n  styles += \"}\";\r\n\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field-select2__control\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldSelect2ControlStyle = settings => {\r\n  let styles = `&& .altrp-field-select2__control {`;\r\n  let padding,\r\n    color,\r\n    backgroundColor,\r\n    borderType,\r\n    borderColor,\r\n    borderWidth,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  const {\r\n    placeholder_and_value_alignment_position_section,\r\n    position_z_index\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"position_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\"));\r\n  borderType &&\r\n    (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n    (borderRadius = getResponsiveSetting(\r\n      settings,\r\n      \"global_filter_input_border_radius\"\r\n    ));\r\n  borderRadius &&\r\n    (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"background_style_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n    (styles += `text-align:${placeholder_and_value_alignment_position_section}`);\r\n  position_z_index && (styles += `z-index:${position_z_index};`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-image-select__label\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst imageSelectLabel = settings => {\r\n  let styles = `&& .altrp-image-select__label {`;\r\n  let color, typographic;\r\n\r\n  const { placeholder_and_value_alignment_position_section } = settings;\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n    (styles += `text-align:${placeholder_and_value_alignment_position_section}`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-select2__single-value\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldSelect2SingleValueStyle = settings => {\r\n  let styles = `&& .altrp-field-select2__single-value {`;\r\n  let typographic, color;\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label-container\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabelContainerStyle = settings => {\r\n  let styles = `&& .altrp-field-label-container {`;\r\n  let backgroundColor, padding, width;\r\n  const {\r\n    label_position_top,\r\n    label_position_left,\r\n    label_icon_position\r\n  } = settings;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"label_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"label_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (width = getResponsiveSetting(settings, \"label_width\"));\r\n  width && (styles += `${sizeStyled(width, \"width\")};flex-shrink: 0;`);\r\n\r\n  label_position_top && (styles += `top:${label_position_top};`);\r\n  label_position_left && (styles += `left:${label_position_left};`);\r\n  label_icon_position && (styles += `flex-direction:${label_icon_position};`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabel = settings => {\r\n  let styles = `&& .altrp-field-label {`;\r\n  let color, typographic;\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"label_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"label_style_font_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-label-icon\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst labelIconStyle = settings => {\r\n  let styles = `&& .altrp-label-icon {`;\r\n  let padding, backgroundColor, iconSize;\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"icon_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (iconSize = getResponsiveSetting(settings, \"icon_size\"));\r\n  iconSize &&\r\n    (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  //for path\r\n  styles += `&& .altrp-label-icon path{`;\r\n\r\n  settings && (backgroundColor = getResponsiveSetting(settings, \"icon_color\"));\r\n  backgroundColor && (styles += colorPropertyStyled(backgroundColor, \"fill\"));\r\n\r\n  styles += \"}\";\r\n  //for svg\r\n  styles += `&& .altrp-label-icon svg{`;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(settings, \"icon_color_background\"));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background\"));\r\n  iconSize &&\r\n    (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  //for img\r\n  styles += `&& .altrp-label-icon img{`;\r\n\r\n  iconSize &&\r\n    (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для классов\r\n * altrp-field::placeholder\r\n * altrp-field-select2__placeholder\r\n * altrp-field-file__placeholder\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst placeholderStyle = settings => {\r\n  let styles = `&& .altrp-field::placeholder{`;\r\n  let color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderColor,\r\n    borderWidth,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"placeholder_style_font_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"background_style_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-select2__placeholder{`;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"background_style_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-file__placeholder{`;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\"));\r\n  borderType &&\r\n    (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n    (borderRadius = getResponsiveSetting(\r\n      settings,\r\n      \"global_filter_input_border_radius\"\r\n    ));\r\n  borderRadius &&\r\n    (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"background_style_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"placeholder_style_font_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label--required::after\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabelRequired = settings => {\r\n  let styles = `&& .altrp-field-label--required::after{`;\r\n  let color, typographic;\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"required_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"required_style_font_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-select2__option\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldSelect2Option = (settings, id) => {\r\n  let styles = `.${id}.altrp-field-select2__option{`;\r\n  let backgroundColor;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"option_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(\r\n      backgroundColor,\r\n      \"background-color\",\r\n      \"!important\"\r\n    ));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `.${id}.altrp-field-select2__option.altrp-field-select2__option--is-focused{`;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"option_focused_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(\r\n      backgroundColor,\r\n      \"background-color\",\r\n      \"!important\"\r\n    ));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `.${id}.altrp-field-select2__option.altrp-field-select2__option--is-selected{`;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"option_selected_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(\r\n      backgroundColor,\r\n      \"background-color\",\r\n      \"!important\"\r\n    ));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса mask-mismatch-message\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst maskMismatchMessage = (settings, id) => {\r\n  let styles = `&& .mask-mismatch-message{`;\r\n  let margin, padding, color, typographic;\r\n\r\n  settings &&\r\n    (margin = getResponsiveSetting(settings, \"mismatch_message_margin\"));\r\n  margin && (styles += dimensionsControllerToStyles(margin, \"margin\"));\r\n\r\n  settings &&\r\n    (padding = getResponsiveSetting(settings, \"mismatch_message_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(margin, \"padding\"));\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"mismatch_message_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"mismatch_message_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n//Точка входа\r\nfunction FormComponent(settings) {\r\n  let styles = \"\";\r\n  const { background_section_opacity } = settings;\r\n  //for all element\r\n  background_section_opacity &&\r\n    (styles += `opacity:${background_section_opacity.size};`);\r\n  //altrp-input-wrapper\r\n  const inputWrapperStyles = inputWrapperStyle(settings);\r\n  inputWrapperStyles && (styles += inputWrapperStyles);\r\n  //altrp-field-container\r\n  const containerStyles = containerStyle(settings);\r\n  containerStyles && (styles += containerStyles);\r\n  //altrp-field\r\n  const fieldStyles = fieldStyle(settings);\r\n  fieldStyles && (styles += fieldStyles);\r\n  //altrp-field-select2__control\r\n  const filedSelect2ControllerStyles = fieldSelect2ControlStyle(settings);\r\n  filedSelect2ControllerStyles && (styles += filedSelect2ControllerStyles);\r\n  //altrp-image-select__label\r\n  const imageSelectLabelStyles = imageSelectLabel(settings);\r\n  imageSelectLabelStyles && (styles += imageSelectLabelStyles);\r\n  //altrp-field-select2__single-value\r\n  const fieldSelect2SingleValueStyles = fieldSelect2SingleValueStyle(settings);\r\n  fieldSelect2SingleValueStyles && (styles += fieldSelect2SingleValueStyles);\r\n  //altrp-field-select2__single-value\r\n  const fieldLabelContainerStyles = fieldLabelContainerStyle(settings);\r\n  fieldLabelContainerStyles && (styles += fieldLabelContainerStyles);\r\n  //altrp-field-label\r\n  const fieldLabelStyles = fieldLabel(settings);\r\n  fieldLabelStyles && (styles += fieldLabelStyles);\r\n  //altrp-label-icon\r\n  const labelIconStyles = labelIconStyle(settings);\r\n  labelIconStyles && (styles += labelIconStyles);\r\n  //altrp-field::placeholder altrp-field-select2__placeholder altrp-field-file__placeholder\r\n  const placeholderStyles = placeholderStyle(settings);\r\n  placeholderStyles && (styles += placeholderStyles);\r\n  //altrp-field-label--required::after\r\n  const fieldLabelRequiredStyles = fieldLabelRequired(settings);\r\n  fieldLabelRequiredStyles && (styles += fieldLabelRequiredStyles);\r\n  //mask-mismatch-message\r\n  const maskMismatchMessageStyles = maskMismatchMessage(settings);\r\n  maskMismatchMessageStyles && (styles += maskMismatchMessageStyles);\r\n  //finish\r\n  return styles;\r\n}\r\nexport default {\r\n  FormComponent: FormComponent,\r\n  select2Options: fieldSelect2Option\r\n};\r\n","import {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\nimport {defaultStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n/**\r\n * @return {string}\r\n */\r\n\r\nexport default function GalleryComponent(settings) {\r\n  const styles = [\r\n    \"altrp-gallery-img\",\r\n\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"aspect_ratio_grid_settings\");\r\n      let aspectRatio = \"100%\";\r\n\r\n      switch (value) {\r\n        case \"3to2\":\r\n          aspectRatio = \"66.6667%\";\r\n          break\r\n        case \"4to3\":\r\n          aspectRatio = \"75%\";\r\n          break\r\n        case \"9to16\":\r\n          aspectRatio = \"177.778%\";\r\n          break\r\n        case \"16to9\":\r\n          aspectRatio = \"56.25%\";\r\n          break\r\n        case \"21to9\":\r\n          aspectRatio = \"42.8571%\";\r\n          break\r\n      }\r\n\r\n      return `padding-bottom: ${aspectRatio}`\r\n    },\r\n\r\n    \"}\",\r\n\r\n    \"altrp-gallery-img-container\",\r\n\r\n    [\"border-style\", \"border_type\"],\r\n    [\"border-width\", \"border_width\", \"dimensions\"],\r\n    [\"border-color\", \"border_color\", \"color\"],\r\n    [\"border-radius\", \"border_radius\", \"dimensions\"],\r\n\r\n    \"}\",\r\n\r\n    \".altrp-gallery-img-container:hover .altrp-gallery-img-container\",\r\n\r\n    [\"border-style\", \"border_type\", \":hover\"],\r\n    [\"border-width\", \"border_width\", \"dimensions\", \":hover\"],\r\n    [\"border-color\", \"border_color\", \"color\", \":hover\"],\r\n    [\"border-radius\", \"border_radius\", \"dimensions\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-gallery-overlay-bg\",\r\n\r\n    [\"background-color\", \"overlay_background_color\", \"color\"],\r\n    [\"\", \"overlay_background_gradient\", \"gradient\"],\r\n    [\"mix-blend-mode\", \"blend_mode\"],\r\n\r\n    \"}\",\r\n\r\n    \".altrp-gallery-img-container:hover .altrp-gallery-overlay-bg\",\r\n\r\n    [\"background-color\", \"overlay_background_color\", \"color\", \":hover\"],\r\n    [\"\", \"overlay_background_gradient\", \"gradient\", \":hover\"],\r\n    [\"mix-blend-mode\", \"blend_mode\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-gallery-overlay\",\r\n\r\n    [\"align-items\", \"overlay_content_alignment\"],\r\n    [\"justify-content\", \"overlay_content_vertical\"],\r\n    [\"padding\", \"overlay_content_padding\", \"dimensions\"],\r\n\r\n    \"}\",\r\n\r\n    \".altrp-gallery-img-container:hover .altrp-gallery-overlay\",\r\n\r\n    [\"align-items\", \"overlay_content_alignment\", \":hover\"],\r\n    [\"justify-content\", \"overlay_content_vertical\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-gallery-overlay-title\",\r\n\r\n    [\"color\", \"overlay_title_color\", \"color\"],\r\n    [\"\", \"overlay_title_typographic\", \"typographic\"],\r\n    [\"margin-bottom\", \"overlay_title_spacing\", \"slider\"],\r\n\r\n    \"}\",\r\n\r\n    \".altrp-gallery-img-container:hover .altrp-gallery-overlay-title\",\r\n\r\n    [\"color\", \"overlay_title_color\", \"color\", \":hover\"],\r\n    [\"\", \"overlay_title_typographic\", \"typographic\", \":hover\"],\r\n    [\"margin-bottom\", \"overlay_title_spacing\", \"slider\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-gallery-overlay-description\",\r\n\r\n    [\"color\", \"overlay_description_color\", \"color\"],\r\n    [\"\", \"overlay_description_typographic\", \"typographic\"],\r\n\r\n    \"}\",\r\n\r\n    \".altrp-gallery-img-container:hover .altrp-gallery-overlay-description\",\r\n\r\n    [\"color\", \"overlay_description_color\", \"color\", \":hover\"],\r\n    [\"\", \"overlay_description_typographic\", \"typographic\", \":hover\"],\r\n\r\n    \"}\",\r\n\r\n    \"altrp-gallery-grid\",\r\n\r\n    [\"grid-gap\", \"spacing_grid_settings\", \"slider\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"columns_grid_settings\");\r\n      const def = defaultStyled(value);\r\n\r\n      if(def) {\r\n        return `grid-template-columns: repeat(${def}, 1fr);`\r\n      }\r\n    },\r\n\r\n    \"}\"\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","import { getResponsiveSetting } from \"../../../../../../front-app/src/js/helpers\";\r\nimport {\r\n  dimensionsControllerToStyles,\r\n  gradientStyled,\r\n  filtersControllerToStyles,\r\n  simplePropertyStyled,\r\n  colorPropertyStyled,\r\n  sizeStyled,\r\n  opacityStyled,\r\n  borderWidthStyled,\r\n  backgroundImageControllerToStyles,\r\n} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n\r\nconst ImageLightboxComponent = (settings,id)=>{\r\n  let styles = '';\r\n\r\n  let objectFit, height, width, margin, padding, zIndex, opacity, borderType, filters;\r\n  let borderWidth, borderColor, borderRadius, transitionDuration, animationDuration, backgroundColor, backgroundColorHover, gradient;\r\n  let justifyContent;\r\n  let backgroundImage, backgroundPosition, backgroundAttachment, backgroundRepeat,backgroundSizeInUnit, backgroundSize;\r\n\r\n  const parentClass = `.altrp-element${id}`;\r\n\r\n  styles += `${parentClass} .altrp-image {`;\r\n\r\n  //Получаем значения object-fit из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    objectFit = getResponsiveSetting(settings, 'image_fit_size');\r\n  }\r\n\r\n  if (objectFit) {\r\n    styles += simplePropertyStyled(objectFit, 'object-fit');\r\n  }\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'background_color');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  //Получаем значения gradient из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    gradient = getResponsiveSetting(settings, 'gradient');\r\n  }\r\n\r\n  if (gradient) {\r\n    styles += gradientStyled(gradient);\r\n  }\r\n\r\n  //Получаем значения filters из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    filters = getResponsiveSetting(settings, 'image_style_text_shadow');\r\n  }\r\n\r\n  if (filters) {\r\n    styles += filtersControllerToStyles(filters);\r\n  }\r\n\r\n  //Получаем значения height из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    height = getResponsiveSetting(settings, 'height_size');\r\n  }\r\n\r\n  if (height) {\r\n    if(height.size !== \"0\") {\r\n      styles += sizeStyled(height, 'height');\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  //Получаем значения width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    width = getResponsiveSetting(settings, 'width_size');\r\n  }\r\n\r\n  if (width) {\r\n    styles += sizeStyled(width, 'width');\r\n  }\r\n\r\n  //Получаем значения margin из контроллера, обрабатываем и добавляем в styles\r\n  //Свойство margin было убрано из Контроллера у виджета Image. Перенес сюда на всякий случай, так как были активные rules в Image.js\r\n\r\n  if (settings !== undefined) {\r\n    margin = getResponsiveSetting(settings, 'position_margin');\r\n  }\r\n\r\n  if (margin) {\r\n    styles += dimensionsControllerToStyles(margin, 'margin');\r\n  }\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'position_padding');\r\n  }\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  //Получаем значения z-index из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    zIndex = getResponsiveSetting(settings, 'position_z_index');\r\n  }\r\n\r\n  if (zIndex) {\r\n    styles += simplePropertyStyled(zIndex, 'z-index');\r\n  }\r\n\r\n  //Получаем значения opacity из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    opacity = getResponsiveSetting(settings, 'opacity_overlay');\r\n  }\r\n\r\n  if (opacity) {\r\n    styles += opacityStyled(opacity);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderType = getResponsiveSetting(settings, 'border_type');\r\n  }\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'border_width');\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'border_color');\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'border_radius');\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += sizeStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения transition-duration в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    transitionDuration = getResponsiveSetting(settings, 'creative_hover_controller');\r\n  }\r\n\r\n  if (transitionDuration) {\r\n    styles += sizeStyled(transitionDuration, 'transition-duration');\r\n  }\r\n\r\n  //Получаем значения animation-duration в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    animationDuration = getResponsiveSetting(settings, 'creative_hover_controller');\r\n  }\r\n\r\n  if (animationDuration) {\r\n    styles += sizeStyled(animationDuration, 'animation-duration');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-image:hover {`;\r\n\r\n  //Получаем значения object-fit из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    objectFit = getResponsiveSetting(settings, 'image_fit_size', ':hover');\r\n  }\r\n\r\n  if (objectFit) {\r\n    styles += simplePropertyStyled(objectFit, 'object-fit');\r\n  }\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'background_color', ':hover');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  //Получаем значения gradient из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    gradient = getResponsiveSetting(settings, 'gradient', ':hover');\r\n  }\r\n\r\n  if (gradient) {\r\n    styles += gradientStyled(gradient);\r\n  }\r\n\r\n  //Получаем значения filters из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    filters = getResponsiveSetting(settings, 'image_style_text_shadow', ':hover');\r\n  }\r\n\r\n  if (filters) {\r\n    styles += filtersControllerToStyles(filters);\r\n  }\r\n\r\n  //Получаем значения height из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    height = getResponsiveSetting(settings, 'height_size', ':hover');\r\n  }\r\n\r\n  if (height) {\r\n    if(height.size !== \"0\") {\r\n      styles += sizeStyled(height, 'height');\r\n    }\r\n  }\r\n\r\n  //Получаем значения width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    width = getResponsiveSetting(settings, 'width_size', ':hover');\r\n  }\r\n\r\n  if (width) {\r\n    styles += sizeStyled(width, 'width');\r\n  }\r\n\r\n  //Получаем значения margin из контроллера, обрабатываем и добавляем в styles\r\n  //Свойство margin было убрано из Контроллера у виджета Image. Перенес сюда на всякий случай, так как были активные rules в Image.js\r\n\r\n  if (settings !== undefined) {\r\n    margin = getResponsiveSetting(settings, 'position_margin', ':hover');\r\n  }\r\n\r\n  if (margin) {\r\n    styles += dimensionsControllerToStyles(margin, 'margin');\r\n  }\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'position_padding', ':hover');\r\n  }\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  //Получаем значения z-index из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    zIndex = getResponsiveSetting(settings, 'position_z_index', ':hover');\r\n  }\r\n\r\n  if (zIndex) {\r\n    styles += simplePropertyStyled(zIndex, 'z-index');\r\n  }\r\n\r\n  //Получаем значения opacity из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    opacity = getResponsiveSetting(settings, 'opacity_overlay', ':hover');\r\n  }\r\n\r\n  if (opacity) {\r\n    styles += opacityStyled(opacity);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderType = getResponsiveSetting(settings, 'border_type', ':hover');\r\n  }\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'border_width', ':hover');\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'border_color', ':hover');\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'border_radius', ':hover');\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += sizeStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения transition-duration в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    transitionDuration = getResponsiveSetting(settings, 'creative_hover_controller', ':hover');\r\n  }\r\n\r\n  if (transitionDuration) {\r\n    styles += sizeStyled(transitionDuration, 'transition-duration');\r\n  }\r\n\r\n  //Получаем значения animation-duration в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    animationDuration = getResponsiveSetting(settings, 'creative_hover_controller', ':hover');\r\n  }\r\n\r\n  if (animationDuration) {\r\n    styles += sizeStyled(animationDuration, 'animation-duration');\r\n  }\r\n\r\n  styles+=\"} \";\r\n\r\n  styles+=`${parentClass} .altrp-image-container {`;\r\n\r\n  //Получаем значения justify-content из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    justifyContent = getResponsiveSetting(settings, 'image_style_alignment');\r\n  }\r\n\r\n  if (justifyContent) {\r\n    styles += simplePropertyStyled(justifyContent, 'justify-content');\r\n  }\r\n\r\n  styles+=\"} \";\r\n\r\n  styles+=`${parentClass} .altrp-image-container:hover {`;\r\n\r\n  //Получаем значения justify-content из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    justifyContent = getResponsiveSetting(settings, 'image_style_alignment', ':hover');\r\n  }\r\n\r\n  if (justifyContent) {\r\n    styles += simplePropertyStyled(justifyContent, 'justify-content');\r\n  }\r\n\r\n  styles+=\"} \";\r\n\r\n  styles+=`${parentClass} .altrp-background-image {`;\r\n\r\n  //Получаем значения background-image из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundImage = getResponsiveSetting(settings, 'background_image');\r\n  }\r\n\r\n  if (backgroundImage) {\r\n    styles += backgroundImageControllerToStyles(backgroundImage);\r\n  }\r\n\r\n  //Получаем значения background-position из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundPosition = getResponsiveSetting(settings, 'background_position');\r\n  }\r\n\r\n  if (backgroundPosition) {\r\n    styles += simplePropertyStyled(backgroundPosition, 'background-position');\r\n  }\r\n\r\n  //Получаем значения background-attachment из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundAttachment = getResponsiveSetting(settings, 'background_attachment');\r\n  }\r\n\r\n  if (backgroundAttachment) {\r\n    styles += simplePropertyStyled(backgroundAttachment, 'background-attachment');\r\n  }\r\n\r\n  //Получаем значения background-repeat из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundRepeat = getResponsiveSetting(settings, 'background_repeat');\r\n  }\r\n\r\n  if (backgroundRepeat) {\r\n    styles += simplePropertyStyled(backgroundRepeat, 'background-repeat');\r\n  }\r\n\r\n  //Получаем значения background-size в конкретных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSizeInUnit = getResponsiveSetting(settings, 'background_image_width');\r\n  }\r\n\r\n  if (backgroundSizeInUnit) {\r\n    styles += sizeStyled(backgroundSizeInUnit, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-size из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSize = getResponsiveSetting(settings, 'background_size');\r\n  }\r\n\r\n  if (backgroundSize) {\r\n    styles += simplePropertyStyled(backgroundSize, 'background-size');\r\n  }\r\n\r\n  styles+=\"} \";\r\n\r\n  styles+=`${parentClass} .altrp-background-image:hover {`;\r\n\r\n  //Получаем значения background-image из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundImage = getResponsiveSetting(settings, 'background_image', ':hover');\r\n  }\r\n\r\n  if (backgroundImage) {\r\n    styles += backgroundImageControllerToStyles(backgroundImage);\r\n  }\r\n\r\n  //Получаем значения background-position из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundPosition = getResponsiveSetting(settings, 'background_position', ':hover');\r\n  }\r\n\r\n  if (backgroundPosition) {\r\n    styles += simplePropertyStyled(backgroundPosition, 'background-position');\r\n  }\r\n\r\n  //Получаем значения background-attachment из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundAttachment = getResponsiveSetting(settings, 'background_attachment', ':hover');\r\n  }\r\n\r\n  if (backgroundAttachment) {\r\n    styles += simplePropertyStyled(backgroundAttachment, 'background-attachment');\r\n  }\r\n\r\n  //Получаем значения background-repeat из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundRepeat = getResponsiveSetting(settings, 'background_repeat', ':hover');\r\n  }\r\n\r\n  if (backgroundRepeat) {\r\n    styles += simplePropertyStyled(backgroundRepeat, 'background-repeat');\r\n  }\r\n\r\n  //Получаем значения background-size в конкретных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSizeInUnit = getResponsiveSetting(settings, 'background_image_width', ':hover');\r\n  }\r\n\r\n  if (backgroundSizeInUnit) {\r\n    styles += sizeStyled(backgroundSizeInUnit, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-size из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSize = getResponsiveSetting(settings, 'background_size', ':hover');\r\n  }\r\n\r\n  if (backgroundSize) {\r\n    styles += simplePropertyStyled(backgroundSize, 'background-size');\r\n  }\r\n\r\n  styles+=\"} \";\r\n\r\n  let aspect_ratio_size;\r\n\r\n  if (settings !== undefined) {\r\n    aspect_ratio_size = getResponsiveSetting(settings, 'aspect_ratio_size');\r\n    if(Number(aspect_ratio_size) !== 0) {\r\n      styles+= 'padding:0;';\r\n    }\r\n    else{\r\n      padding = getResponsiveSetting(settings, 'position_padding');\r\n      styles +=dimensionsControllerToStyles(padding);\r\n    }\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nexport default ImageLightboxComponent;\r\n","import { getResponsiveSetting } from \"../../../../../../front-app/src/js/helpers\";\r\nimport {\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  simplePropertyStyled,\r\n  colorPropertyStyled,\r\n  borderWidthStyled,\r\n  shadowControllerToStyles,\r\n  sizeStyled, sliderStyled, defaultStyled, colorStyled\r\n} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n/**\r\n * Стили для класса .altrp-input-wrapper\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst inputWrapperStyle = settings => {\r\n  let styles = `&& .altrp-input-wrapper {`;\r\n  let width;\r\n  //width begin\r\n  settings && (width = getResponsiveSetting(settings, \"field_width\"));\r\n  width && (styles += sizeStyled(width, \"width\"));\r\n  //width end\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field-container\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst containerStyle = settings => {\r\n  let styles = `&& .altrp-field-container {`;\r\n  let margin;\r\n\r\n  //margin begin\r\n  settings && (margin = getResponsiveSetting(settings, \"position_margin\"));\r\n  margin && (styles += dimensionsControllerToStyles(margin, \"margin\"));\r\n  //margin end\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldStyle = settings => {\r\n  let styles = `&& .altrp-field, && .altrp-field-checkbox .bp3-control-indicator {`;\r\n  let padding,\r\n    color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow,\r\n    size\r\n  ;\r\n\r\n  const {\r\n    placeholder_and_value_alignment_position_section,\r\n    position_z_index,\r\n    input_position,\r\n    textarea_resize,\r\n    justify_options,\r\n    image_select_item_width,\r\n    image_select_item_height,\r\n    image_select_image_fit,\r\n    image_select_image_position,\r\n    cross_size\r\n  } = settings;\r\n\r\n  settings && (size = getResponsiveSetting(settings, \"field_size\"));\r\n  size && (styles += `height:${sliderStyled(size)};width:${sliderStyled(size)};`);\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  // settings &&\r\n  // (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  // typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"position_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  // settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  // color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"border_radius\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n  (styles += `text-align:${placeholder_and_value_alignment_position_section};`);\r\n\r\n  position_z_index && (styles += `z-index:${position_z_index};`);\r\n  textarea_resize && (styles += `resize:${textarea_resize};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field, && .altrp-field-checkbox .bp3-control-indicator:before {`;\r\n\r\n\r\n  // settings &&\r\n  // (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  // typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  size && (styles += `height:${sliderStyled(size)};width:${sliderStyled(size)};`);\r\n\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  // settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  // color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  // settings &&\r\n  // (borderRadius = getResponsiveSetting(\r\n  //   settings,\r\n  //   \"global_filter_input_border_radius\"\r\n  // ));\r\n  // borderRadius &&\r\n  // (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-radio-group {`;\r\n\r\n  let fieldAlignment;\r\n\r\n  settings && (fieldAlignment = getResponsiveSetting(settings, \"field_alignment\"));\r\n  fieldAlignment && (styles += `justify-content: ${defaultStyled(fieldAlignment)};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-option:hover span.bp3-control-indicator.bp3-control-indicator {\";\r\n\r\n  let backgroundColorHover;\r\n\r\n  settings && (backgroundColorHover = getResponsiveSetting(settings, \"background_style_background_color\", \":hover\"));\r\n\r\n  backgroundColorHover && (styles += colorStyled(backgroundColorHover, \"background-color\"));\r\n\r\n  let boxShadowHover;\r\n\r\n  settings && (boxShadowHover = getResponsiveSetting(settings, \"box_shadow\", \":hover\"));\r\n  boxShadowHover && (styles += shadowControllerToStyles(boxShadowHover));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-option label.altrp-field-option__label {\";\r\n\r\n  let fontTypographic;\r\n\r\n  settings &&\r\n  (fontTypographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  fontTypographic && (styles += typographicControllerToStyles(fontTypographic));\r\n\r\n  let fontColor;\r\n\r\n  settings && (fontColor = getResponsiveSetting(settings, \"field_font_color\"));\r\n  fontColor && (styles += colorPropertyStyled(fontColor, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-option:hover label.altrp-field-option__label {\";\r\n\r\n  let fontTypographicHover;\r\n\r\n  settings &&\r\n  (fontTypographicHover = getResponsiveSetting(settings, \"field_font_typographic\", \":hover\"));\r\n  fontTypographicHover && (styles += typographicControllerToStyles(fontTypographicHover));\r\n\r\n  let fontColorHover;\r\n\r\n  settings && (fontColorHover = getResponsiveSetting(settings, \"field_font_color\", \":hover\"));\r\n  fontColorHover && (styles += colorPropertyStyled(fontColorHover, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-option.active label.altrp-field-option__label {\";\r\n\r\n  let fontTypographicActive;\r\n\r\n  settings &&\r\n  (fontTypographicActive = getResponsiveSetting(settings, \"field_font_typographic\", \".active\"));\r\n  fontTypographicActive && (styles += typographicControllerToStyles(fontTypographicActive));\r\n\r\n  let fontColorActive;\r\n\r\n  settings && (fontColorActive = getResponsiveSetting(settings, \"field_font_color\", \".active\"));\r\n  fontColorActive && (styles += colorPropertyStyled(fontColorActive, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-option.active span.bp3-control-indicator.bp3-control-indicator   {\";\r\n\r\n  let backgroundColorActive;\r\n\r\n  settings && (backgroundColorActive = getResponsiveSetting(settings, \"background_style_background_color\", \".active\"));\r\n\r\n  backgroundColorActive && (styles += colorStyled(backgroundColorActive, \"background-color\"));\r\n\r\n  let boxShadowActive;\r\n\r\n  settings && (boxShadowActive = getResponsiveSetting(settings, \"box_shadow\", \".active\"));\r\n  boxShadowActive && (styles += shadowControllerToStyles(boxShadowActive));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-option{\";\r\n\r\n  input_position && (styles += `flex-direction:${input_position};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select{\";\r\n\r\n  justify_options && (styles += `justify-content:${justify_options};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select>.altrp-field{\";\r\n\r\n  image_select_item_width &&\r\n  (styles += `width:${image_select_item_width.size}${image_select_item_width.unit};`);\r\n\r\n  image_select_item_height &&\r\n  (styles += `height:${image_select_item_height.size}${image_select_item_height.unit};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select img{\";\r\n  image_select_image_fit && (styles += `object-fit:${image_select_image_fit};`);\r\n  image_select_image_position &&\r\n  (styles += `object-position:${image_select_image_position};`);\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .input-clear-btn{\";\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"cross_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  //TODO не нашел как активировать эту штуку\r\n  //cross_size && (styles += `font-size:${cross_size.size}${cross_size.unit};`);\r\n  styles += \"}\";\r\n\r\n  styles += \"}\";\r\n\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field-option:hover\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldStyleHover = settings => {\r\n  let styles = `&& .altrp-field, && .altrp-field-option:hover .altrp-field-checkbox .bp3-control-indicator {`;\r\n  let backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow\r\n  ;\r\n\r\n  const {\r\n    placeholder_and_value_alignment_position_section,\r\n    position_z_index,\r\n    textarea_resize,\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\", \":hover\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\", \":hover\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\", \":hover\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\", \":hover\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"border_radius\",\r\n    \":hover\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\",\r\n    \":hover\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n  (styles += `text-align:${placeholder_and_value_alignment_position_section};`);\r\n\r\n  position_z_index && (styles += `z-index:${position_z_index};`);\r\n  textarea_resize && (styles += `resize:${textarea_resize};`);\r\n\r\n  styles += \"}\";\r\n\r\n  return styles\r\n};\r\n\r\nconst fieldStyleActive = settings => {\r\n  let styles = `&& .altrp-field, && .altrp-field-option.active .altrp-field-checkbox .bp3-control-indicator {`;\r\n  let backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow\r\n  ;\r\n\r\n  const {\r\n    placeholder_and_value_alignment_position_section,\r\n    position_z_index,\r\n    textarea_resize,\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\", \".active\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\", \".active\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\", \".active\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\", \".active\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"border_radius\",\r\n    \".active\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\",\r\n    \".active\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n  (styles += `text-align:${placeholder_and_value_alignment_position_section};`);\r\n\r\n  position_z_index && (styles += `z-index:${position_z_index};`);\r\n  textarea_resize && (styles += `resize:${textarea_resize};`);\r\n\r\n  styles += \"}\";\r\n\r\n  return styles\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field:hover\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldStyleFocus = settings => {\r\n  let styles = `&& .altrp-field:focus, && .bp3-input:focus {`;\r\n  let padding,\r\n    color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  const {\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\", \":focus\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\", \":focus\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\", \":focus\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\", \":focus\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\", \":focus\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"global_filter_input_border_radius\",\r\n    \":focus\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\",\r\n    \":focus\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  styles += \"&& .input-clear-btn{\";\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"cross_color\", \":focus\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  //TODO не нашел как активировать эту штуку\r\n  //cross_size && (styles += `font-size:${cross_size.size}${cross_size.unit};`);\r\n  styles += \"}\";\r\n  styles += \"}\";\r\n\r\n  return styles;\r\n};\r\n\r\n\r\n/**\r\n * Стили для класса altrp-image-select__label\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst imageSelectLabel = settings => {\r\n  let styles = `&& .altrp-image-select__label {`;\r\n  let color, typographic;\r\n\r\n  const { placeholder_and_value_alignment_position_section } = settings;\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n  (styles += `text-align:${placeholder_and_value_alignment_position_section}`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-select2__single-value\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldSelect2SingleValueStyle = settings => {\r\n  let styles = `&& .altrp-field-select2__single-value {`;\r\n  let typographic, color;\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label-container\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabelContainerStyle = settings => {\r\n  let styles = `&& .altrp-field-label-container {`;\r\n  let backgroundColor, padding, width;\r\n  const {\r\n    label_position_top,\r\n    label_position_left,\r\n    label_icon_position\r\n  } = settings;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"label_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"label_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (width = getResponsiveSetting(settings, \"label_width\"));\r\n  width && (styles += `${sizeStyled(width, \"width\")};flex-shrink: 0;`);\r\n\r\n  label_position_top && (styles += `top:${label_position_top};`);\r\n  label_position_left && (styles += `left:${label_position_left};`);\r\n  label_icon_position && (styles += `flex-direction:${label_icon_position};`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabel = settings => {\r\n  let styles = `&& .altrp-field-label {`;\r\n  let color, typographic;\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"label_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"label_style_font_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-label-icon\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst labelIconStyle = settings => {\r\n  let styles = `&& .altrp-label-icon {`;\r\n  let padding, backgroundColor, iconSize;\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"icon_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (iconSize = getResponsiveSetting(settings, \"icon_size\"));\r\n  iconSize &&\r\n  (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  //for path\r\n  styles += `&& .altrp-label-icon path{`;\r\n\r\n  settings && (backgroundColor = getResponsiveSetting(settings, \"icon_color\"));\r\n  backgroundColor && (styles += colorPropertyStyled(backgroundColor, \"fill\"));\r\n\r\n  styles += \"}\";\r\n  //for svg\r\n  styles += `&& .altrp-label-icon svg{`;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(settings, \"icon_color_background\"));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background\"));\r\n  iconSize &&\r\n  (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  //for img\r\n  styles += `&& .altrp-label-icon img{`;\r\n\r\n  iconSize &&\r\n  (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для классов\r\n * altrp-field::placeholder\r\n * altrp-field-select2__placeholder\r\n * altrp-field-file__placeholder\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst placeholderStyle = settings => {\r\n  let styles = `&& .altrp-field, && .bp3-input::placeholder{`;\r\n  let color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderColor,\r\n    borderWidth,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"placeholder_style_font_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-select2__placeholder{`;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-file__placeholder{`;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"global_filter_input_border_radius\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"placeholder_style_font_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label--required::after\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabelRequired = settings => {\r\n  let styles = `&& .altrp-field-label--required::after{`;\r\n  let color, typographic;\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"required_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"required_style_font_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-select2__option\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldSelect2Option = (settings, id) => {\r\n  let styles = `.${id}.altrp-field-select2__option{`;\r\n  let backgroundColor;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"option_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(\r\n    backgroundColor,\r\n    \"background-color\",\r\n    \"!important\"\r\n  ));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `.${id}.altrp-field-select2__option.altrp-field-select2__option--is-focused{`;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"option_focused_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(\r\n    backgroundColor,\r\n    \"background-color\",\r\n    \"!important\"\r\n  ));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `.${id}.altrp-field-select2__option.altrp-field-select2__option--is-selected{`;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"option_selected_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(\r\n    backgroundColor,\r\n    \"background-color\",\r\n    \"!important\"\r\n  ));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса mask-mismatch-message\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst maskMismatchMessage = (settings, id) => {\r\n  let styles = `&& .mask-mismatch-message{`;\r\n  let margin, padding, color, typographic;\r\n\r\n  settings &&\r\n  (margin = getResponsiveSetting(settings, \"mismatch_message_margin\"));\r\n  margin && (styles += dimensionsControllerToStyles(margin, \"margin\"));\r\n\r\n  settings &&\r\n  (padding = getResponsiveSetting(settings, \"mismatch_message_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(margin, \"padding\"));\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"mismatch_message_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"mismatch_message_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n//Точка входа\r\nfunction InputCheckboxComponent(settings) {\r\n\r\n  let styles = \"\";\r\n  const { background_section_opacity } = settings;\r\n  //for all element\r\n  background_section_opacity &&\r\n  (styles += `opacity:${background_section_opacity.size};`);\r\n  //altrp-input-wrapper\r\n  const inputWrapperStyles = inputWrapperStyle(settings);\r\n  inputWrapperStyles && (styles += inputWrapperStyles);\r\n  //altrp-field-container\r\n  const containerStyles = containerStyle(settings);\r\n  containerStyles && (styles += containerStyles);\r\n  //altrp-field\r\n  const fieldStyles = fieldStyle(settings);\r\n  fieldStyles && (styles += fieldStyles);\r\n  //altrp-field:hover\r\n  const fieldStylesHover = fieldStyleHover(settings);\r\n  fieldStylesHover && (styles += fieldStylesHover);\r\n  //altrp-field.active\r\n  const fieldStylesActive = fieldStyleActive(settings);\r\n  fieldStylesActive && (styles += fieldStylesActive);\r\n  //altrp-field:focus\r\n  const fieldStylesFocus = fieldStyleFocus(settings);\r\n  fieldStylesFocus && (styles += fieldStylesFocus);\r\n  //altrp-image-select__label\r\n  const imageSelectLabelStyles = imageSelectLabel(settings);\r\n  imageSelectLabelStyles && (styles += imageSelectLabelStyles);\r\n  //altrp-field-select2__single-value\r\n  const fieldSelect2SingleValueStyles = fieldSelect2SingleValueStyle(settings);\r\n  fieldSelect2SingleValueStyles && (styles += fieldSelect2SingleValueStyles);\r\n  //altrp-field-select2__single-value\r\n  const fieldLabelContainerStyles = fieldLabelContainerStyle(settings);\r\n  fieldLabelContainerStyles && (styles += fieldLabelContainerStyles);\r\n  //altrp-field-label\r\n  const fieldLabelStyles = fieldLabel(settings);\r\n  fieldLabelStyles && (styles += fieldLabelStyles);\r\n  //altrp-label-icon\r\n  const labelIconStyles = labelIconStyle(settings);\r\n  labelIconStyles && (styles += labelIconStyles);\r\n  //altrp-field::placeholder altrp-field-select2__placeholder altrp-field-file__placeholder\r\n  const placeholderStyles = placeholderStyle(settings);\r\n  placeholderStyles && (styles += placeholderStyles);\r\n  //altrp-field-label--required::after\r\n  const fieldLabelRequiredStyles = fieldLabelRequired(settings);\r\n  fieldLabelRequiredStyles && (styles += fieldLabelRequiredStyles);\r\n  //mask-mismatch-message\r\n  const maskMismatchMessageStyles = maskMismatchMessage(settings);\r\n  maskMismatchMessageStyles && (styles += maskMismatchMessageStyles);\r\n  //finish\r\n  return styles;\r\n}\r\nexport default InputCheckboxComponent\r\n","import { getResponsiveSetting } from \"../../../../../../front-app/src/js/helpers\";\r\nimport {\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  simplePropertyStyled,\r\n  colorPropertyStyled,\r\n  borderWidthStyled,\r\n  shadowControllerToStyles,\r\n  sizeStyled\r\n} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n/**\r\n * Стили для класса .altrp-input-wrapper\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst inputWrapperStyle = settings => {\r\n  let styles = `&& .altrp-input-wrapper {`;\r\n  let width;\r\n  //width begin\r\n  settings && (width = getResponsiveSetting(settings, \"field_width\"));\r\n  width && (styles += sizeStyled(width, \"width\"));\r\n  //width end\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field-container\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst containerStyle = settings => {\r\n  let styles = `&& .altrp-field-container {`;\r\n  let margin;\r\n\r\n  //margin begin\r\n  settings && (margin = getResponsiveSetting(settings, \"position_margin\"));\r\n  margin && (styles += dimensionsControllerToStyles(margin, \"margin\"));\r\n  //margin end\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldStyle = settings => {\r\n  let styles = `& .altrp-field, & .bp3-input {`;\r\n  let padding,\r\n    color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  const {\r\n    placeholder_and_value_alignment_position_section,\r\n    position_z_index,\r\n    input_position,\r\n    textarea_resize,\r\n    justify_options,\r\n    image_select_item_width,\r\n    image_select_item_height,\r\n    image_select_image_fit,\r\n    image_select_image_position,\r\n    cross_size\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"position_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\"));\r\n  borderType &&\r\n    (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n    (borderRadius = getResponsiveSetting(\r\n      settings,\r\n      \"global_filter_input_border_radius\"\r\n    ));\r\n  borderRadius &&\r\n    (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"background_style_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n    (styles += `text-align:${placeholder_and_value_alignment_position_section};`);\r\n\r\n  position_z_index && (styles += `z-index:${position_z_index};`);\r\n  textarea_resize && (styles += `resize:${textarea_resize};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-option{\";\r\n\r\n  input_position && (styles += `flex-direction:${input_position};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select{\";\r\n\r\n  justify_options && (styles += `justify-content:${justify_options};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select>.altrp-field{\";\r\n\r\n  image_select_item_width &&\r\n    (styles += `width:${image_select_item_width.size}${image_select_item_width.unit};`);\r\n\r\n  image_select_item_height &&\r\n    (styles += `height:${image_select_item_height.size}${image_select_item_height.unit};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select img{\";\r\n  image_select_image_fit && (styles += `object-fit:${image_select_image_fit};`);\r\n  image_select_image_position &&\r\n    (styles += `object-position:${image_select_image_position};`);\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .input-clear-btn{\";\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"cross_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  //TODO не нашел как активировать эту штуку\r\n  //cross_size && (styles += `font-size:${cross_size.size}${cross_size.unit};`);\r\n  styles += \"}\";\r\n\r\n  styles += \"}\";\r\n\r\n  return styles;\r\n};\r\n\r\n/**\r\n* Стили для класса altrp-field:hover\r\n* @param {Object} settings style settings of element\r\n* @returns {String} CSS style string\r\n*/\r\nconst fieldStyleHover = settings => {\r\n  let styles = `&& .altrp-field:hover, && .bp3-input:hover {`;\r\n  let color,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  const {\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\", \":hover\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\", \":hover\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\", \":hover\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\", \":hover\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\", \":hover\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"global_filter_input_border_radius\",\r\n    \":hover\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\",\r\n    \":hover\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  styles += \"&& .input-clear-btn{\";\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"cross_color\", \":hover\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  //TODO не нашел как активировать эту штуку\r\n  //cross_size && (styles += `font-size:${cross_size.size}${cross_size.unit};`);\r\n  styles += \"}\";\r\n  styles += \"}\";\r\n\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field:hover\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldStyleFocus = settings => {\r\n  let styles = `&& .altrp-field:focus, && .bp3-input:focus {`;\r\n  let padding,\r\n    color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  const {\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\", \":focus\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\", \":focus\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\", \":focus\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\", \":focus\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\", \":focus\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"global_filter_input_border_radius\",\r\n    \":focus\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\",\r\n    \":focus\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  styles += \"&& .input-clear-btn{\";\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"cross_color\", \":focus\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  //TODO не нашел как активировать эту штуку\r\n  //cross_size && (styles += `font-size:${cross_size.size}${cross_size.unit};`);\r\n  styles += \"}\";\r\n  styles += \"}\";\r\n\r\n  return styles;\r\n};\r\n\r\n\r\n/**\r\n * Стили для класса altrp-image-select__label\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst imageSelectLabel = settings => {\r\n  let styles = `&& .altrp-image-select__label {`;\r\n  let color, typographic;\r\n\r\n  const { placeholder_and_value_alignment_position_section } = settings;\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n    (styles += `text-align:${placeholder_and_value_alignment_position_section}`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-select2__single-value\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldSelect2SingleValueStyle = settings => {\r\n  let styles = `&& .altrp-field-select2__single-value {`;\r\n  let typographic, color;\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabel = settings => {\r\n  let styles = `&& .altrp-field-label {`;\r\n  let color, typographic;\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"label_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"label_style_font_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `& .altrp-field-label-container {`;\r\n  let backgroundColor, padding, width;\r\n  const {\r\n    label_position_top,\r\n    label_position_left,\r\n    label_icon_position\r\n  } = settings;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"label_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"label_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (width = getResponsiveSetting(settings, \"label_width\"));\r\n  width && (styles += `${sizeStyled(width, \"width\")};flex-shrink: 0;`);\r\n\r\n  label_position_top && (styles += `top:${label_position_top};`);\r\n  label_position_left && (styles += `left:${label_position_left};`);\r\n  label_icon_position && (styles += `flex-direction:${label_icon_position};`);\r\n\r\n  styles += \"}\";\r\n\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-label-icon\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst labelIconStyle = settings => {\r\n  let styles = `&& .altrp-label-icon {`;\r\n  let padding, backgroundColor, iconSize;\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"icon_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (iconSize = getResponsiveSetting(settings, \"icon_size\"));\r\n  iconSize &&\r\n    (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  //for path\r\n  styles += `&& .altrp-label-icon path{`;\r\n\r\n  settings && (backgroundColor = getResponsiveSetting(settings, \"icon_color\"));\r\n  backgroundColor && (styles += colorPropertyStyled(backgroundColor, \"fill\"));\r\n\r\n  styles += \"}\";\r\n  //for svg\r\n  styles += `&& .altrp-label-icon svg{`;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(settings, \"icon_color_background\"));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background\"));\r\n  iconSize &&\r\n    (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  //for img\r\n  styles += `&& .altrp-label-icon img{`;\r\n\r\n  iconSize &&\r\n    (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для классов\r\n * altrp-field::placeholder\r\n * altrp-field-select2__placeholder\r\n * altrp-field-file__placeholder\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst placeholderStyle = settings => {\r\n  let styles = `&& .altrp-field, && .bp3-input::placeholder{`;\r\n  let color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderColor,\r\n    borderWidth,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"placeholder_style_font_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"background_style_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-select2__placeholder{`;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"background_style_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-file__placeholder{`;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\"));\r\n  borderType &&\r\n    (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n    (borderRadius = getResponsiveSetting(\r\n      settings,\r\n      \"global_filter_input_border_radius\"\r\n    ));\r\n  borderRadius &&\r\n    (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"background_style_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"placeholder_style_font_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label--required::after\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabelRequired = settings => {\r\n  let styles = `&& .altrp-field-label--required::after{`;\r\n  let color, typographic;\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"required_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"required_style_font_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-select2__option\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldSelect2Option = (settings, id) => {\r\n  let styles = `.${id}.altrp-field-select2__option{`;\r\n  let backgroundColor;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"option_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(\r\n      backgroundColor,\r\n      \"background-color\",\r\n      \"!important\"\r\n    ));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `.${id}.altrp-field-select2__option.altrp-field-select2__option--is-focused{`;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"option_focused_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(\r\n      backgroundColor,\r\n      \"background-color\",\r\n      \"!important\"\r\n    ));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `.${id}.altrp-field-select2__option.altrp-field-select2__option--is-selected{`;\r\n\r\n  settings &&\r\n    (backgroundColor = getResponsiveSetting(\r\n      settings,\r\n      \"option_selected_background_color\"\r\n    ));\r\n  backgroundColor &&\r\n    (styles += colorPropertyStyled(\r\n      backgroundColor,\r\n      \"background-color\",\r\n      \"!important\"\r\n    ));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса mask-mismatch-message\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst maskMismatchMessage = (settings, id) => {\r\n  let styles = `&& .mask-mismatch-message{`;\r\n  let margin, padding, color, typographic;\r\n\r\n  settings &&\r\n    (margin = getResponsiveSetting(settings, \"mismatch_message_margin\"));\r\n  margin && (styles += dimensionsControllerToStyles(margin, \"margin\"));\r\n\r\n  settings &&\r\n    (padding = getResponsiveSetting(settings, \"mismatch_message_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(margin, \"padding\"));\r\n\r\n  settings &&\r\n    (color = getResponsiveSetting(settings, \"mismatch_message_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n    (typographic = getResponsiveSetting(\r\n      settings,\r\n      \"mismatch_message_typographic\"\r\n    ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n//Точка входа\r\nfunction InputDateComponent(settings, elementId, prefix) {\r\n\r\n  let styles = \"\";\r\n  const { background_section_opacity } = settings;\r\n  //for all element\r\n  styles += `.${prefix}${elementId} {`\r\n  background_section_opacity &&\r\n    (styles += `opacity:${background_section_opacity.size};`);\r\n  //altrp-input-wrapper\r\n  styles += `}`;\r\n  styles += `.${prefix}${elementId} {`\r\n  const inputWrapperStyles = inputWrapperStyle(settings);\r\n  inputWrapperStyles && (styles += inputWrapperStyles);\r\n  styles += `}`;\r\n  //altrp-field-container\r\n  styles += `.${prefix}${elementId} {`\r\n  const containerStyles = containerStyle(settings);\r\n  containerStyles && (styles += containerStyles);\r\n  styles += `}`;\r\n  //altrp-field\r\n  styles += `.${prefix}${elementId} {`\r\n  const fieldStyles = fieldStyle(settings);\r\n  fieldStyles && (styles += fieldStyles);\r\n  styles += `}`;\r\n  //altrp-field:hover\r\n  styles += `.${prefix}${elementId} {`\r\n  const fieldStylesHover = fieldStyleHover(settings);\r\n  fieldStylesHover && (styles += fieldStylesHover);\r\n  styles += `}`;\r\n  //altrp-field:focus\r\n  styles += `.${prefix}${elementId} {`\r\n  const fieldStylesFocus = fieldStyleFocus(settings);\r\n  fieldStylesFocus && (styles += fieldStylesFocus);\r\n  styles += `}`;\r\n  //altrp-image-select__label\r\n  styles += `.${prefix}${elementId} {`\r\n  const imageSelectLabelStyles = imageSelectLabel(settings);\r\n  imageSelectLabelStyles && (styles += imageSelectLabelStyles);\r\n  styles += `}`;\r\n  //altrp-field-select2__single-value\r\n  styles += `.${prefix}${elementId} {`\r\n  const fieldSelect2SingleValueStyles = fieldSelect2SingleValueStyle(settings);\r\n  fieldSelect2SingleValueStyles && (styles += fieldSelect2SingleValueStyles);\r\n  styles += `}`;\r\n  //altrp-field-label\r\n  styles += `.${prefix}${elementId} {`\r\n  const fieldLabelStyles = fieldLabel(settings);\r\n  fieldLabelStyles && (styles += fieldLabelStyles);\r\n  styles += `}`;\r\n  //altrp-label-icon\r\n  styles += `.${prefix}${elementId} {`\r\n  const labelIconStyles = labelIconStyle(settings);\r\n  labelIconStyles && (styles += labelIconStyles);\r\n  styles += `}`;\r\n  //altrp-field::placeholder altrp-field-select2__placeholder altrp-field-file__placeholder\r\n  styles += `.${prefix}${elementId} {`\r\n  const placeholderStyles = placeholderStyle(settings);\r\n  placeholderStyles && (styles += placeholderStyles);\r\n  styles += `}`;\r\n  //altrp-field-label--required::after\r\n  styles += `.${prefix}${elementId} {`\r\n  const fieldLabelRequiredStyles = fieldLabelRequired(settings);\r\n  fieldLabelRequiredStyles && (styles += fieldLabelRequiredStyles);\r\n  styles += `}`;\r\n  //mask-mismatch-message\r\n  styles += `.${prefix}${elementId} {`\r\n  const maskMismatchMessageStyles = maskMismatchMessage(settings);\r\n  maskMismatchMessageStyles && (styles += maskMismatchMessageStyles);\r\n  styles += `}`;\r\n  //finish\r\n  return styles;\r\n}\r\nexport default InputDateComponent\r\n","import { getResponsiveSetting } from \"../../../../../../front-app/src/js/helpers\";\r\nimport {\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  simplePropertyStyled,\r\n  colorPropertyStyled,\r\n  borderWidthStyled,\r\n  shadowControllerToStyles,\r\n  sizeStyled, sliderStyled, defaultStyled, colorStyled, colorStyledSecond, styledString\r\n} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\n/**\r\n * Стили для класса .altrp-input-wrapper\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst inputWrapperStyle = settings => {\r\n  let styles = `&& .altrp-input-wrapper {`;\r\n  let width;\r\n  //width begin\r\n  settings && (width = getResponsiveSetting(settings, \"field_width\"));\r\n  width && (styles += sizeStyled(width, \"width\"));\r\n  //width end\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field-container\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst containerStyle = settings => {\r\n  let styles = `&& .altrp-field-container {`;\r\n  let margin, aligment;\r\n\r\n  //margin begin\r\n  settings && (margin = getResponsiveSetting(settings, \"position_margin\"));\r\n  margin && (styles += dimensionsControllerToStyles(margin, \"margin\"));\r\n  //margin end\r\n\r\n  settings && (aligment = getResponsiveSetting(settings, \"alignment_radio\"));\r\n  aligment && (styles += `align-items: ${defaultStyled(aligment)};`);\r\n  //margin end\r\n\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldStyle = settings => {\r\n  let styles = `.altrp-field-container .bp3-control-indicator.bp3-control-indicator.bp3-control-indicator {`;\r\n  let padding,\r\n    color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow,\r\n    size\r\n  ;\r\n\r\n  const {\r\n    placeholder_and_value_alignment_position_section,\r\n    position_z_index,\r\n    input_position,\r\n    textarea_resize,\r\n    justify_options,\r\n    image_select_item_width,\r\n    image_select_item_height,\r\n    image_select_image_fit,\r\n    image_select_image_position,\r\n    cross_size\r\n  } = settings;\r\n\r\n  settings && (size = getResponsiveSetting(settings, \"field_size\"));\r\n  size && (styles += `height:${sliderStyled(size)};width:${sliderStyled(size)};`);\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  // settings &&\r\n  // (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  // typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  // settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  // color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"border_radius\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n  (styles += `text-align:${placeholder_and_value_alignment_position_section};`);\r\n\r\n  position_z_index && (styles += `z-index:${position_z_index};`);\r\n  textarea_resize && (styles += `resize:${textarea_resize};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-radio .bp3-control-indicator:before {\";\r\n\r\n  size && (styles += `height:${sliderStyled(size)};width:${sliderStyled(size)};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-radio {\";\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"position_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  styles += \"}\";\r\n\r\n\r\n  styles += \"&& .altrp-field-radio {\";\r\n\r\n  let fontTypographic;\r\n\r\n  settings &&\r\n  (fontTypographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  fontTypographic && (styles += typographicControllerToStyles(fontTypographic));\r\n\r\n  let fontColor;\r\n\r\n  settings && (fontColor = getResponsiveSetting(settings, \"field_font_color\"));\r\n  fontColor && (styles += colorPropertyStyled(fontColor, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-radio:hover {\";\r\n\r\n  let fontTypographicHover;\r\n\r\n  settings &&\r\n  (fontTypographicHover = getResponsiveSetting(settings, \"field_font_typographic\", \":hover\"));\r\n  fontTypographicHover && (styles += typographicControllerToStyles(fontTypographicHover));\r\n\r\n  let fontColorHover;\r\n\r\n  settings && (fontColorHover = getResponsiveSetting(settings, \"field_font_color\", \":hover\"));\r\n  fontColorHover && (styles += colorPropertyStyled(fontColorHover, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-radio.active {\";\r\n\r\n  let fontTypographicActive;\r\n\r\n  settings &&\r\n  (fontTypographicActive = getResponsiveSetting(settings, \"field_font_typographic\", \".active\"));\r\n  fontTypographicActive && (styles += typographicControllerToStyles(fontTypographicActive));\r\n\r\n  let fontColorActive;\r\n\r\n  settings && (fontColorActive = getResponsiveSetting(settings, \"field_font_color\", \".active\"));\r\n  fontColorActive && (styles += colorPropertyStyled(fontColorActive, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-radio.bp3-control.bp3-radio input:checked ~ .bp3-control-indicator::before {\";\r\n\r\n  let dotColor;\r\n\r\n  settings && (dotColor = getResponsiveSetting(settings, \"background_style_dot\"));\r\n\r\n  let dotSize;\r\n\r\n  settings && (dotSize = getResponsiveSetting(settings, \"size_style_dot\"));\r\n\r\n  if(dotSize || dotColor) {\r\n\r\n    if(!dotSize) {\r\n      dotSize = {\r\n        size: 28,\r\n        unit: \"%\"\r\n      }\r\n    }\r\n\r\n    if(!dotColor) {\r\n      dotColor = {\r\n        color: \"rgba(255, 255, 255, 1)\",\r\n        colorPickedHex: \"#ffffff\",\r\n        colorRGB: {r: 255, g: 255, b: 255, a: 1}\r\n      }\r\n    }\r\n\r\n    styles += `background-image: radial-gradient(${colorStyledSecond(dotColor)}, ${colorStyledSecond(dotColor)} ${sliderStyled(dotSize)}, rgba(0, 0, 0, 0) calc(${sliderStyled(dotSize)} + 6%));`\r\n  }\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-subgroup {`;\r\n\r\n  let fieldAlignment;\r\n\r\n  settings && (fieldAlignment = getResponsiveSetting(settings, \"alignment\"));\r\n  fieldAlignment && (styles += `justify-content: ${defaultStyled(fieldAlignment)};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-option{\";\r\n\r\n  input_position && (styles += `flex-direction:${input_position};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select{\";\r\n\r\n  justify_options && (styles += `justify-content:${justify_options};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select>.altrp-field{\";\r\n\r\n  image_select_item_width &&\r\n  (styles += `width:${image_select_item_width.size}${image_select_item_width.unit};`);\r\n\r\n  image_select_item_height &&\r\n  (styles += `height:${image_select_item_height.size}${image_select_item_height.unit};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-image-select img{\";\r\n  image_select_image_fit && (styles += `object-fit:${image_select_image_fit};`);\r\n  image_select_image_position &&\r\n  (styles += `object-position:${image_select_image_position};`);\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .input-clear-btn{\";\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"cross_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  //TODO не нашел как активировать эту штуку\r\n  //cross_size && (styles += `font-size:${cross_size.size}${cross_size.unit};`);\r\n  styles += \"}\";\r\n\r\n  styles += \"}\";\r\n\r\n  return styles;\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field:hover\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldStyleHover = settings => {\r\n  let styles = `.altrp-field-container .altrp-field-radio:hover .bp3-control-indicator.bp3-control-indicator.bp3-control-indicator {`;\r\n  let padding,\r\n    color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow,\r\n    size\r\n  ;\r\n\r\n  const {\r\n    placeholder_and_value_alignment_position_section,\r\n    position_z_index,\r\n    input_position,\r\n    textarea_resize,\r\n    justify_options,\r\n    image_select_item_width,\r\n    image_select_item_height,\r\n    image_select_image_fit,\r\n    image_select_image_position,\r\n    cross_size\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\", \":hover\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  // settings &&\r\n  // (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  // typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  // settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  // color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\", \":hover\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\", \":hover\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\", \":hover\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"border_radius\",\r\n    \":hover\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\",\r\n    \":hover\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n  (styles += `text-align:${placeholder_and_value_alignment_position_section};`);\r\n\r\n  position_z_index && (styles += `z-index:${position_z_index};`);\r\n  textarea_resize && (styles += `resize:${textarea_resize};`);\r\n\r\n  styles += \"}\";\r\n\r\n  styles += \"&& .altrp-field-radio.bp3-control.bp3-radio:hover input:checked ~ .bp3-control-indicator.bp3-control-indicator::before {\";\r\n\r\n  let dotColor;\r\n\r\n  settings && (dotColor = getResponsiveSetting(settings, \"background_style_dot\", \":hover\"));\r\n\r\n  let dotSize;\r\n\r\n  settings && (dotSize = getResponsiveSetting(settings, \"size_style_dot\", \":hover\"));\r\n\r\n  if(dotSize || dotColor) {\r\n\r\n    if(!dotSize) {\r\n      dotSize = {\r\n        size: 28,\r\n        unit: \"%\"\r\n      }\r\n    }\r\n\r\n    if(!dotColor) {\r\n      dotColor = {\r\n        color: \"rgba(255, 255, 255, 1)\",\r\n        colorPickedHex: \"#ffffff\",\r\n        colorRGB: {r: 255, g: 255, b: 255, a: 1}\r\n      }\r\n    }\r\n\r\n    styles += `background-image: radial-gradient(${colorStyledSecond(dotColor)}, ${colorStyledSecond(dotColor)} ${sliderStyled(dotSize)}, rgba(0, 0, 0, 0) calc(${sliderStyled(dotSize)} + 6%));`\r\n  }\r\n\r\n  styles += \"}\";\r\n\r\n  return styles\r\n};\r\n\r\nconst fieldStyleActive = settings => {\r\n  let styles = `.altrp-field-container .altrp-field-radio.active .bp3-control-indicator.bp3-control-indicator.bp3-control-indicator {`;\r\n  let padding,\r\n    color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow,\r\n    size\r\n  ;\r\n\r\n  const {\r\n    placeholder_and_value_alignment_position_section,\r\n    position_z_index,\r\n    input_position,\r\n    textarea_resize,\r\n    justify_options,\r\n    image_select_item_width,\r\n    image_select_item_height,\r\n    image_select_image_fit,\r\n    image_select_image_position,\r\n    cross_size\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\", \".active\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  // settings &&\r\n  // (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  // typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  // settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  // color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\", \".active\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\", \".active\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\", \".active\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"border_radius\",\r\n    \".active\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\",\r\n    \".active\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n  (styles += `text-align:${placeholder_and_value_alignment_position_section};`);\r\n\r\n  position_z_index && (styles += `z-index:${position_z_index};`);\r\n  textarea_resize && (styles += `resize:${textarea_resize};`);\r\n\r\n  styles += \"}\";\r\n\r\n  return styles\r\n};\r\n\r\n/**\r\n * Стили для класса altrp-field:hover\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldStyleFocus = settings => {\r\n  let styles = `&& .altrp-field:focus, && .bp3-input:focus {`;\r\n  let padding,\r\n    color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderWidth,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  const {\r\n  } = settings;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\", \":focus\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\", \":focus\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\", \":focus\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\", \":focus\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\", \":focus\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"global_filter_input_border_radius\",\r\n    \":focus\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\",\r\n    \":focus\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  styles += \"&& .input-clear-btn{\";\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"cross_color\", \":focus\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  //TODO не нашел как активировать эту штуку\r\n  //cross_size && (styles += `font-size:${cross_size.size}${cross_size.unit};`);\r\n  styles += \"}\";\r\n  styles += \"}\";\r\n\r\n  return styles;\r\n};\r\n\r\n\r\n/**\r\n * Стили для класса altrp-image-select__label\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst imageSelectLabel = settings => {\r\n  let styles = `&& .altrp-image-select__label {`;\r\n  let color, typographic;\r\n\r\n  const { placeholder_and_value_alignment_position_section } = settings;\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  placeholder_and_value_alignment_position_section &&\r\n  (styles += `text-align:${placeholder_and_value_alignment_position_section}`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-select2__single-value\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldSelect2SingleValueStyle = settings => {\r\n  let styles = `&& .altrp-field-select2__single-value {`;\r\n  let typographic, color;\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(settings, \"field_font_typographic\"));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings && (color = getResponsiveSetting(settings, \"field_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label-container\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabelContainerStyle = settings => {\r\n  let styles = `&& .altrp-field-label-container {`;\r\n  let backgroundColor, padding, width;\r\n  const {\r\n    label_position_top,\r\n    label_position_left,\r\n    label_icon_position\r\n  } = settings;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"label_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"label_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (width = getResponsiveSetting(settings, \"label_width\"));\r\n  width && (styles += `${sizeStyled(width, \"width\")};flex-shrink: 0;`);\r\n\r\n  label_position_top && (styles += `top:${label_position_top};`);\r\n  label_position_left && (styles += `left:${label_position_left};`);\r\n  label_icon_position && (styles += `flex-direction:${label_icon_position};`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabel = settings => {\r\n  let styles = `&& .altrp-field-label {`;\r\n  let color, typographic;\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"label_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"label_style_font_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-label-icon\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst labelIconStyle = settings => {\r\n  let styles = `&& .altrp-label-icon {`;\r\n  let padding, backgroundColor, iconSize;\r\n\r\n  settings && (padding = getResponsiveSetting(settings, \"icon_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(padding, \"padding\"));\r\n\r\n  settings && (iconSize = getResponsiveSetting(settings, \"icon_size\"));\r\n  iconSize &&\r\n  (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  //for path\r\n  styles += `&& .altrp-label-icon path{`;\r\n\r\n  settings && (backgroundColor = getResponsiveSetting(settings, \"icon_color\"));\r\n  backgroundColor && (styles += colorPropertyStyled(backgroundColor, \"fill\"));\r\n\r\n  styles += \"}\";\r\n  //for svg\r\n  styles += `&& .altrp-label-icon svg{`;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(settings, \"icon_color_background\"));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background\"));\r\n  iconSize &&\r\n  (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  //for img\r\n  styles += `&& .altrp-label-icon img{`;\r\n\r\n  iconSize &&\r\n  (styles += `width:${iconSize.size}${iconSize.unit};height:${iconSize.size}${iconSize.unit};`);\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для классов\r\n * altrp-field::placeholder\r\n * altrp-field-select2__placeholder\r\n * altrp-field-file__placeholder\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst placeholderStyle = settings => {\r\n  let styles = `&& .altrp-field, && .bp3-input::placeholder{`;\r\n  let color,\r\n    typographic,\r\n    backgroundColor,\r\n    borderType,\r\n    borderColor,\r\n    borderWidth,\r\n    borderRadius,\r\n    boxShadow;\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"placeholder_style_font_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-select2__placeholder{`;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `&& .altrp-field-file__placeholder{`;\r\n\r\n  settings && (boxShadow = getResponsiveSetting(settings, \"box_shadow\"));\r\n  boxShadow && (styles += shadowControllerToStyles(boxShadow));\r\n\r\n  settings && (borderType = getResponsiveSetting(settings, \"border_type\"));\r\n  borderType &&\r\n  (styles += simplePropertyStyled(borderType, \"border-style\", \"!important\"));\r\n\r\n  settings && (borderColor = getResponsiveSetting(settings, \"border_color\"));\r\n  borderColor && (styles += colorPropertyStyled(borderColor, \"border-color\"));\r\n\r\n  settings && (borderWidth = getResponsiveSetting(settings, \"border_width\"));\r\n  borderWidth && (styles += borderWidthStyled(borderWidth));\r\n\r\n  settings &&\r\n  (borderRadius = getResponsiveSetting(\r\n    settings,\r\n    \"global_filter_input_border_radius\"\r\n  ));\r\n  borderRadius &&\r\n  (styles += dimensionsControllerToStyles(borderRadius, \"border-radius\"));\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"background_style_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(backgroundColor, \"background-color\"));\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"placeholder_style_font_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"placeholder_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-label--required::after\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldLabelRequired = settings => {\r\n  let styles = `&& .altrp-field-label--required::after{`;\r\n  let color, typographic;\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"required_style_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"required_style_font_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса altrp-field-select2__option\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst fieldSelect2Option = (settings, id) => {\r\n  let styles = `.${id}.altrp-field-select2__option{`;\r\n  let backgroundColor;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"option_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(\r\n    backgroundColor,\r\n    \"background-color\",\r\n    \"!important\"\r\n  ));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `.${id}.altrp-field-select2__option.altrp-field-select2__option--is-focused{`;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"option_focused_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(\r\n    backgroundColor,\r\n    \"background-color\",\r\n    \"!important\"\r\n  ));\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `.${id}.altrp-field-select2__option.altrp-field-select2__option--is-selected{`;\r\n\r\n  settings &&\r\n  (backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"option_selected_background_color\"\r\n  ));\r\n  backgroundColor &&\r\n  (styles += colorPropertyStyled(\r\n    backgroundColor,\r\n    \"background-color\",\r\n    \"!important\"\r\n  ));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n/**\r\n * Стили для класса mask-mismatch-message\r\n * @param {Object} settings style settings of element\r\n * @returns {String} CSS style string\r\n */\r\nconst maskMismatchMessage = (settings, id) => {\r\n  let styles = `&& .mask-mismatch-message{`;\r\n  let margin, padding, color, typographic;\r\n\r\n  settings &&\r\n  (margin = getResponsiveSetting(settings, \"mismatch_message_margin\"));\r\n  margin && (styles += dimensionsControllerToStyles(margin, \"margin\"));\r\n\r\n  settings &&\r\n  (padding = getResponsiveSetting(settings, \"mismatch_message_padding\"));\r\n  padding && (styles += dimensionsControllerToStyles(margin, \"padding\"));\r\n\r\n  settings &&\r\n  (color = getResponsiveSetting(settings, \"mismatch_message_font_color\"));\r\n  color && (styles += colorPropertyStyled(color, \"color\"));\r\n\r\n  settings &&\r\n  (typographic = getResponsiveSetting(\r\n    settings,\r\n    \"mismatch_message_typographic\"\r\n  ));\r\n  typographic && (styles += typographicControllerToStyles(typographic));\r\n\r\n  styles += \"}\";\r\n  return styles;\r\n};\r\n//Точка входа\r\nfunction InputCheckboxComponent(settings, elementId, prefix) {\r\n\r\n  let styles = \"\";\r\n\r\n  styles += `.${prefix}${elementId} {`;\r\n  const { background_section_opacity } = settings;\r\n  //for all element\r\n  background_section_opacity &&\r\n  (styles += `opacity:${background_section_opacity.size};`);\r\n  styles += `}`;\r\n  //altrp-input-wrapper\r\n  styles += `.${prefix}${elementId} {`;\r\n  const inputWrapperStyles = inputWrapperStyle(settings);\r\n  inputWrapperStyles && (styles += inputWrapperStyles);\r\n  styles += `}`;\r\n  //altrp-field-container\r\n  styles += `.${prefix}${elementId} {`;\r\n  const containerStyles = containerStyle(settings);\r\n  containerStyles && (styles += containerStyles);\r\n  styles += `}`;\r\n  //altrp-field-radio\r\n  styles += `.${prefix}${elementId} {`;\r\n  const fieldStyles = fieldStyle(settings);\r\n  fieldStyles && (styles += fieldStyles);\r\n  styles += `}`;\r\n  //altrp-field-radio:hover\r\n  styles += `.${prefix}${elementId} {`;\r\n  const fieldStylesHover = fieldStyleHover(settings);\r\n  fieldStylesHover && (styles += fieldStylesHover);\r\n  styles += `}`;\r\n  //altrp-field-radio.active\r\n  styles += `.${prefix}${elementId} {`;\r\n  const fieldStylesActive = fieldStyleActive(settings);\r\n  fieldStylesActive && (styles += fieldStylesActive);\r\n  styles += `}`;\r\n\r\n  //altrp-field:focus\r\n  styles += `.${prefix}${elementId} {`;\r\n  const fieldStylesFocus = fieldStyleFocus(settings);\r\n  fieldStylesFocus && (styles += fieldStylesFocus);\r\n  styles += `}`;\r\n  //altrp-image-select__label\r\n  styles += `.${prefix}${elementId} {`;\r\n  const imageSelectLabelStyles = imageSelectLabel(settings);\r\n  imageSelectLabelStyles && (styles += imageSelectLabelStyles);\r\n  styles += `}`;\r\n  //altrp-field-select2__single-value\r\n  styles += `.${prefix}${elementId} {`;\r\n  const fieldSelect2SingleValueStyles = fieldSelect2SingleValueStyle(settings);\r\n  fieldSelect2SingleValueStyles && (styles += fieldSelect2SingleValueStyles);\r\n  styles += `}`;\r\n  //altrp-field-select2__single-value\r\n  styles += `.${prefix}${elementId} {`;\r\n  const fieldLabelContainerStyles = fieldLabelContainerStyle(settings);\r\n  fieldLabelContainerStyles && (styles += fieldLabelContainerStyles);\r\n  styles += `}`;\r\n  //altrp-field-label\r\n  styles += `.${prefix}${elementId} {`;\r\n  const fieldLabelStyles = fieldLabel(settings);\r\n  fieldLabelStyles && (styles += fieldLabelStyles);\r\n  styles += `}`;\r\n  //altrp-label-icon\r\n  styles += `.${prefix}${elementId} {`;\r\n  const labelIconStyles = labelIconStyle(settings);\r\n  labelIconStyles && (styles += labelIconStyles);\r\n  styles += `}`;\r\n  //altrp-field::placeholder altrp-field-select2__placeholder altrp-field-file__placeholder\r\n  styles += `.${prefix}${elementId} {`;\r\n  const placeholderStyles = placeholderStyle(settings);\r\n  placeholderStyles && (styles += placeholderStyles);\r\n  styles += `}`;\r\n  //altrp-field-label--required::after\r\n  styles += `.${prefix}${elementId} {`;\r\n  const fieldLabelRequiredStyles = fieldLabelRequired(settings);\r\n  fieldLabelRequiredStyles && (styles += fieldLabelRequiredStyles);\r\n  styles += `}`;\r\n  //mask-mismatch-message\r\n  styles += `.${prefix}${elementId} {`;\r\n  const maskMismatchMessageStyles = maskMismatchMessage(settings);\r\n  maskMismatchMessageStyles && (styles += maskMismatchMessageStyles);\r\n  styles += `}`;\r\n  //finish\r\n  return styles;\r\n}\r\nexport default InputCheckboxComponent\r\n","\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\n\nexport default function InputRangeSliderComponent(settings) {\n  const styles = [\n    \"bp3-slider-axis .bp3-slider-label\",\n      [\"\", \"label_typographic\", \"typographic\"],\n      [\"color\", \"label_color\", \"color\"],\n    \"}\",\n\n    \"bp3-slider-axis .bp3-slider-label:hover\",\n      [\"\", \"label_typographic\", \"typographic\", \":hover\"],\n      [\"color\", \"label_color\", \"color\", \":hover\"],\n    \"}\",\n\n    \"bp3-slider-handle span.bp3-slider-label\",\n      [\"\", \"current_label_typographic\", \"typographic\"],\n      [\"color\", \"current_label_color\", \"color\"],\n    \"}\",\n\n    \"bp3-slider-handle:hover span.bp3-slider-label\",\n      [\"\", \"current_label_typographic\", \"typographic\", \":hover\"],\n      [\"color\", \"current_label_color\", \"color\", \":hover\"],\n    \"}\",\n\n    \"altrp-field-slider-horizontal .bp3-slider-handle\",\n      () => {\n        let width = getResponsiveSetting(settings, \"size\");\n\n        width = sliderStyled(width);\n\n        if(width) {\n          return `width: calc(${width} / 2);`\n        } else {\n          return \"\"\n        }\n      },\n      [\"height\", \"handle_size\", \"slider\"],\n    \"}\",\n\n\n    \"bp3-slider-handle\",\n      [\"border-radius\", \"handle_radius\", \"dimensions\"],\n    \"}\",\n\n    \"bp3-slider-handle.bp3-start\",\n      [\"border-radius\", \"handle_radius\", \"dimensions\"],\n    \"}\",\n\n    \"bp3-slider-handle.bp3-end\",\n      [\"border-radius\", \"handle_radius_second\", \"dimensions\"],\n    \"}\",\n\n    \"altrp-field-slider-horizontal .altrp-field-slider\",\n      [\"width\", \"width\", \"slider\"],\n    \"}\",\n\n    \"altrp-field-slider-vertical .altrp-field-slider\",\n      [\"height\", \"length\", \"slider\"],\n    \"}\",\n\n    () => {\n      let tr_x = getResponsiveSetting(settings, \"tr_x\") ;\n      let tr_y = getResponsiveSetting(settings, \"tr_y\") ;\n      if(! tr_x && ! tr_y){\n        return ''\n      }\n      return `& .bp3-slider-handle{transform:translate(${tr_x || '0px'},${tr_y || '0px'});}`\n    },\n\n    \"bp3-slider-progress, & .bp3-slider-track\",\n      [\"height\", \"height\", \"slider\"],\n    \"}\",\n\n    \"altrp-field-slider-vertical .bp3-slider-progress.bp3-slider-progress, & .altrp-field-slider-vertical .bp3-slider-track.bp3-slider-track\",\n      [\"width\", \"thickness\", \"slider\"],\n    \"}\",\n\n    \"altrp-field-slider-horizontal .bp3-slider-label\",\n      () => {\n        let height = getResponsiveSetting(settings, \"height\", \"\", { size: 6, unit: \"px\" })\n\n        height = sliderStyled(height)\n\n        return `transform: translate(-50%, calc(14px + ${height}));`\n      },\n    \"}\",\n\n    \"altrp-field-slider-vertical .bp3-slider-label.bp3-slider-label.bp3-slider-label\",\n      () => {\n        let thickness = getResponsiveSetting(settings, \"thickness\", \"\", { size: 6, unit: \"px\" })\n\n        thickness = sliderStyled(thickness)\n\n        return `transform: translate(calc(14px + ${thickness}), 50%);`\n      },\n    \"}\",\n\n    \"bp3-slider-handle .bp3-slider-label, & .bp3-slider-handle.bp3-active .bp3-slider-label\",\n      [\"background-color\", \"tooltip_color\", \"color\"],\n    \"}\",\n\n    \"bp3-slider-handle, & .bp3-slider-handle.bp3-active\",\n      [\"background-color\", \"handle_color\", \"color\"],\n    \"}\",\n\n    \"bp3-slider-handle:hover, & .bp3-slider-handle:hover.bp3-active\",\n      [\"background-color\", \"handle_color\", \"color\", \":hover\"],\n    \"}\",\n\n    \"bp3-slider-handle:active, & .bp3-slider-handle:active.bp3-active \",\n    [\"background-color\", \"handle_color\", \"color\", \".active\"],\n    \"}\",\n\n    \"bp3-slider-progress.bp3-intent-primary\",\n      [\"background-color\", \"filled_color\", \"color\"],\n    \"}\",\n\n    \"bp3-slider-progress\",\n      [\"background-color\", \"blank_color\", \"color\"],\n    \"}\",\n  ];\n\n  return styledString(styles, settings)\n}\n","\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\n\nexport default function InputSliderComponent(settings) {\n  const styles = [\n    \"bp3-slider-axis .bp3-slider-label\",\n      [\"\", \"label_typographic\", \"typographic\"],\n      [\"color\", \"label_color\", \"color\"],\n    \"}\",\n\n    \"bp3-slider-axis .bp3-slider-label:hover\",\n      [\"\", \"label_typographic\", \"typographic\", \":hover\"],\n      [\"color\", \"label_color\", \"color\", \":hover\"],\n    \"}\",\n\n    \"bp3-slider-handle span.bp3-slider-label\",\n      [\"\", \"current_label_typographic\", \"typographic\"],\n      [\"color\", \"current_label_color\", \"color\"],\n    \"}\",\n\n    \"bp3-slider-handle:hover span.bp3-slider-label\",\n      [\"\", \"current_label_typographic\", \"typographic\", \":hover\"],\n      [\"color\", \"current_label_color\", \"color\", \":hover\"],\n    \"}\",\n\n\n    \"bp3-slider-handle\",\n      [\"height\", \"handle_size\", \"slider\"],\n      [\"width\", \"handle_size\", \"slider\"],\n      [\"border-radius\", \"handle_radius\", \"dimensions\"],\n    \"}\",\n\n    \"altrp-field-slider-horizontal .altrp-field-slider\",\n      [\"width\", \"width\", \"slider\"],\n    \"}\",\n      () => {\n        let tr_x = getResponsiveSetting(settings, \"tr_x\") ;\n        let tr_y = getResponsiveSetting(settings, \"tr_y\") ;\n        if(! tr_x && ! tr_y){\n          return ''\n        }\n        return `& .bp3-slider-handle{transform:translate(${tr_x || '0px'},${tr_y || '0px'});}`\n      },\n    \"altrp-field-slider-vertical .altrp-field-slider\",\n      [\"height\", \"length\", \"slider\"],\n    \"}\",\n\n    \"bp3-slider-progress, & .bp3-slider-track\",\n      [\"height\", \"height\", \"slider\"],\n    \"}\",\n\n    \"altrp-field-slider-vertical .bp3-slider-progress.bp3-slider-progress, & .altrp-field-slider-vertical .bp3-slider-track.bp3-slider-track\",\n      [\"width\", \"thickness\", \"slider\"],\n    \"}\",\n\n    \"altrp-field-slider-horizontal .bp3-slider-label\",\n      () => {\n        let height = getResponsiveSetting(settings, \"height\", \"\", { size: 6, unit: \"px\" })\n\n        height = sliderStyled(height)\n\n        return `transform: translate(-50%, calc(14px + ${height}));`\n      },\n    \"}\",\n\n    \"altrp-field-slider-vertical .bp3-slider-label.bp3-slider-label.bp3-slider-label\",\n      () => {\n        let thickness = getResponsiveSetting(settings, \"thickness\", \"\", { size: 6, unit: \"px\" })\n\n        thickness = sliderStyled(thickness)\n\n        return `transform: translate(calc(14px + ${thickness}), 50%);`\n      },\n    \"}\",\n\n    \"bp3-slider-handle .bp3-slider-label, & .bp3-slider-handle.bp3-active .bp3-slider-label\",\n      [\"background-color\", \"tooltip_color\", \"color\"],\n    \"}\",\n\n    \"bp3-slider-handle, & .bp3-slider-handle.bp3-active\",\n      [\"background-color\", \"handle_color\", \"color\"],\n    \"}\",\n\n    \"bp3-slider-handle:hover, & .bp3-slider-handle:hover.bp3-active\",\n      [\"background-color\", \"handle_color\", \"color\", \":hover\"],\n    \"}\",\n\n    \"bp3-slider-handle:active, & .bp3-slider-handle:active.bp3-active \",\n    [\"background-color\", \"handle_color\", \"color\", \".active\"],\n    \"}\",\n\n    \"bp3-slider-progress.bp3-intent-primary\",\n      [\"background-color\", \"filled_color\", \"color\"],\n    \"}\",\n\n    \"bp3-slider-progress\",\n      [\"background-color\", \"blank_color\", \"color\"],\n    \"}\",\n  ];\n\n  return styledString(styles, settings)\n}\n","import {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\nexport default function ListComponent(settings) {\r\n  const styles = [\r\n    \"altrp-list\",\r\n    [\"margin\", \"position_margin\", \"dimensions\"],\r\n    [\"padding\", \"position_padding\", \"dimensions\"],\r\n\r\n    [\"z-index\", \"position_z_index\"],\r\n    \"}\",\r\n\r\n    \"altrp-list:hover\",\r\n    [\"margin\", \"position_margin\", \"dimensions\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-ul-inline, & .altrp-list-ul-default .altrp-list-li\",\r\n    [\"justify-content\", \"alignment_list_style\"],\r\n    \"}\",\r\n\r\n    \"& div.altrp-list-li-divider-default\",\r\n    [\"border-top-style\", \"divider_style_list_style\"],\r\n    [\"border-top-width\", \"divider_weight_list_style\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-li-divider-inline\",\r\n    [\"border-right-style\", \"divider_style_list_style\"],\r\n    [\"border-right-width\", \"divider_weight_list_style\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"& div.altrp-list-li-divider\",\r\n    [\"border-color\", \"divider_color_list_style\", \"color\"],\r\n    [\"width\", \"divider_width_list_style\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-icon, & .altrp-list-icon svg\",\r\n    [\"width\", \"size_icon_style\", \"slider\"],\r\n    [\"height\", \"size_icon_style\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-icon path\",\r\n    [\"fill\", \"fill_icon_style\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-icon\",\r\n    [\"background-color\", \"background_icon_style\", \"color\"],\r\n    [\"padding\", \"padding_icon_style\", \"dimensions\"],\r\n    [\"border-radius\", \"border-radius_icon_style\", \"dimensions\"],\r\n    [\"border-style\", \"border-type_icon_style\"],\r\n    [\"border-width\", \"border-width_icon_style\", \"dimensions\"],\r\n    [\"border-color\", \"border_color_icon_style\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-label\",\r\n    [\"margin-left\", \"indent_text_style\", \"slider\"],\r\n    [\"color\", \"color_text_style\", \"color\"],\r\n    [\"background-color\", \"background_color_text_style\", \"color\"],\r\n    [\"padding\", \"padding_text_style\", \"dimensions\"],\r\n    [\"border-radius\", \"border-radius_text_style\", \"dimensions\"],\r\n    [\"border-style\", \"border-type_text_style\"],\r\n    [\"border-width\", \"border-width_text_style\", \"dimensions\"],\r\n    [\"border-color\", \"border_color_text_style\", \"color\"],\r\n    [\"\", \"typographic_text_style\", \"typographic\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-li:hover\",\r\n    \"altrp-list-icon, & .altrp-list-icon svg\",\r\n    [\"width\", \"size_icon_style\", \"slider\", \":hover\"],\r\n    [\"height\", \"size_icon_style\", \"slider\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-icon:hover path\",\r\n    [\"fill\", \"fill_icon_style\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-icon:hover\",\r\n    [\"background-color\", \"background_icon_style\", \"color\", \":hover\"],\r\n    [\"border-radius\", \"border-radius_icon_style\", \"dimensions\", \":hover\"],\r\n    [\"border-style\", \"border-type_icon_style\", \"\", \":hover\"],\r\n    [\"border-width\", \"border-width_icon_style\", \"dimensions\", \":hover\"],\r\n    [\"border-color\", \"border_color_icon_style\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-label:hover\",\r\n    [\"margin-left\", \"indent_text_style\", \"slider\", \":hover\"],\r\n    [\"color\", \"color_text_style\", \"color\", \":hover\"],\r\n    [\"background-color\", \"background_color_text_style\", \"color\", \":hover\"],\r\n    [\"border-radius\", \"border-radius_text_style\", \"dimensions\", \":hover\"],\r\n    [\"border-style\", \"border-type_text_style\", \"\", \":hover\"],\r\n    [\"border-width\", \"border-width_text_style\", \"dimensions\", \":hover\"],\r\n    [\"border-color\", \"border_color_text_style\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-list-li-link:hover\",\r\n    [\"text-decoration\", \"link_decoration_text_style\", \"\", \":hover\"],\r\n    \"}\",\r\n    \"}\",\r\n\r\n    \"altrp-list-li-link\",\r\n    [\"text-decoration\", \"link_decoration_text_style\"],\r\n    \"}\"\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","import {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\nexport default function MapComponent(settings) {\r\n  const styles = [\r\n    \"altrp-image\",\r\n    [\"height\", \"style_height\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-btn\",\r\n    [\"margin\", \"style_margin\", \"dimensions\"],\r\n    \"}\"\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n};\r\n","import {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\nexport default function MapConstructorComponent(settings) {\r\n  const styles = [\r\n    \"altrp-image\",\r\n    [\"height\", \"style_height\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-btn\",\r\n    [\"margin\", \"style_margin\", \"dimensions\"],\r\n    \"}\"\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n\r\n","const { getResponsiveSetting } = window.altrpHelpers;\r\nimport {\r\n  simplePropertyStyled,\r\n  borderWidthStyled,\r\n  colorPropertyStyled,\r\n  dimensionsControllerToStyles,\r\n  sizeStyled,\r\n  shadowControllerToStyles,\r\n  gradientStyled,\r\n  backgroundImageControllerToStyles, sliderStyled, styledString,\r\n} from \"../../../../../../front-app/src/js/helpers/styles\";\r\nfunction altrpSection(settings) {\r\n  let styles = '';\r\n\r\n  let backgroundColor, flexWrap, verticalAlign, gorizontalAlign, flexDirection, minHeight, overflow, borderStyle, borderWidth, borderColor, borderRadius, boxShadow;\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'section_style_background_color');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background');\r\n  }\r\n\r\n  //Получаем значения flex-wrap из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    flexWrap = getResponsiveSetting(settings, 'layout_flex_wrap_content');\r\n  }\r\n\r\n  if (flexWrap) {\r\n    styles += simplePropertyStyled(flexWrap, 'flex-wrap');\r\n  }\r\n\r\n  //Получаем значения vertical-align из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    verticalAlign = getResponsiveSetting(settings, 'layout_column_position');\r\n  }\r\n\r\n  if (verticalAlign) {\r\n    styles += simplePropertyStyled(verticalAlign, 'align-content');\r\n    styles += simplePropertyStyled(verticalAlign, 'align-items');\r\n  }\r\n\r\n  //Получаем значения gorizontal-align из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    gorizontalAlign = getResponsiveSetting(settings, 'layout_justify_content');\r\n  }\r\n\r\n  if (gorizontalAlign) {\r\n    styles += simplePropertyStyled(gorizontalAlign, 'justify-content');\r\n  }\r\n\r\n  //Получаем значения flex-direction из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    flexDirection = getResponsiveSetting(settings, 'layout_column_direction');\r\n  }\r\n\r\n  if (flexDirection) {\r\n    styles += simplePropertyStyled(flexDirection, 'flex-direction');\r\n  }\r\n\r\n  //Получаем значения min-height из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    minHeight = getResponsiveSetting(settings, 'label_style_min_height');\r\n  }\r\n\r\n  if (minHeight) {\r\n    styles += sizeStyled(minHeight, 'min-height');\r\n  }\r\n\r\n  //Получаем значения overflow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    overflow = getResponsiveSetting(settings, 'layout_overflow');\r\n  }\r\n\r\n  if (overflow) {\r\n    styles += simplePropertyStyled(overflow, 'overflow');\r\n  }\r\n\r\n  //Получаем значения border-style из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderStyle = getResponsiveSetting(settings, 'section_style_border_type');\r\n  }\r\n\r\n  if (borderStyle) {\r\n    styles += simplePropertyStyled(borderStyle, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'section_style_border_width');\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'section_style_border_color');\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'section_style_border_radius');\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += sizeStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения box-shadow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    boxShadow = getResponsiveSetting(settings, 'section_style_box_shadow');\r\n  }\r\n\r\n  if (boxShadow) {\r\n    styles += shadowControllerToStyles(boxShadow);\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionHover(settings,state=':hover') {\r\n  let styles = '';\r\n\r\n  let backgroundColor, borderStyle, borderWidth, borderColor, borderRadius, boxShadow;\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'section_style_background_color', state);\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background');\r\n  }\r\n\r\n  //Получаем значения border-style из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderStyle = getResponsiveSetting(settings, 'section_style_border_type', state);\r\n  }\r\n\r\n  if (borderStyle) {\r\n    styles += simplePropertyStyled(borderStyle, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'section_style_border_width', state);\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'section_style_border_color', state);\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'section_style_border_radius', state);\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += sizeStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения box-shadow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    boxShadow = getResponsiveSetting(settings, 'section_style_box_shadow', state);\r\n  }\r\n\r\n  if (boxShadow) {\r\n    styles += shadowControllerToStyles(boxShadow);\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionColumn(settings) {\r\n  let styles = '';\r\n\r\n  let padding;\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'layout_columns_gap');\r\n  }\r\n\r\n  if (padding && padding !== 'none') {\r\n    styles += `padding: ${padding}px; `;\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionColumnHover(settings) {\r\n  let styles = '';\r\n\r\n  let padding;\r\n\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionSecond(settings) {\r\n  let styles = '';\r\n\r\n  let gradient, positionTop, positionRight, positionLeft, positionBottom, zIndex;\r\n\r\n  //Получаем значения gradient из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    gradient = getResponsiveSetting(settings, 'gradient');\r\n  }\r\n\r\n  if (gradient) {\r\n    styles += gradientStyled(gradient);\r\n  }\r\n\r\n  //Получаем значения position-top из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    positionTop = getResponsiveSetting(settings, 'position_top');\r\n  }\r\n\r\n  if (positionTop) {\r\n    styles += simplePropertyStyled(positionTop, 'top');\r\n  }\r\n\r\n  //Получаем значения position-right из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    positionRight = getResponsiveSetting(settings, 'position_right');\r\n  }\r\n\r\n  if (positionRight) {\r\n    styles += simplePropertyStyled(positionRight, 'right');\r\n  }\r\n\r\n  //Получаем значения position-left из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    positionLeft = getResponsiveSetting(settings, 'position_left');\r\n  }\r\n\r\n  if (positionLeft) {\r\n    styles += simplePropertyStyled(positionLeft, 'left');\r\n  }\r\n\r\n  //Получаем значения position-bottom из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    positionBottom = getResponsiveSetting(settings, 'position_bottom');\r\n  }\r\n\r\n  if (positionBottom) {\r\n    styles += simplePropertyStyled(positionBottom, 'bottom');\r\n  }\r\n\r\n  //Получаем значения z-index из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    zIndex = getResponsiveSetting(settings, 'position_style_z_index');\r\n  }\r\n\r\n  if (zIndex) {\r\n    styles += simplePropertyStyled(zIndex, 'z-index');\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionSecondHover(settings) {\r\n  let styles = '';\r\n\r\n  let gradient, positionTop, positionRight, positionLeft, positionBottom;\r\n\r\n  //Получаем значения gradient из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    gradient = getResponsiveSetting(settings, 'gradient', ':hover');\r\n  }\r\n\r\n  if (gradient) {\r\n    styles += gradientStyled(gradient);\r\n  }\r\n\r\n  //Получаем значения position-top из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    positionTop = getResponsiveSetting(settings, 'position_top', ':hover');\r\n  }\r\n\r\n  if (positionTop) {\r\n    styles += simplePropertyStyled(positionTop, 'top');\r\n  }\r\n\r\n  //Получаем значения position-right из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    positionRight = getResponsiveSetting(settings, 'position_right', ':hover');\r\n  }\r\n\r\n  if (positionRight) {\r\n    styles += simplePropertyStyled(positionRight, 'right');\r\n  }\r\n\r\n  //Получаем значения position-left из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    positionLeft = getResponsiveSetting(settings, 'position_left', ':hover');\r\n  }\r\n\r\n  if (positionLeft) {\r\n    styles += simplePropertyStyled(positionLeft, 'left');\r\n  }\r\n\r\n  //Получаем значения position-bottom из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    positionBottom = getResponsiveSetting(settings, 'position_bottom', ':hover');\r\n  }\r\n\r\n  if (positionBottom) {\r\n    styles += simplePropertyStyled(positionBottom, 'bottom');\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpBackgroundImage(settings) {\r\n  let styles = '';\r\n\r\n  let backgroundSize, backgroundRepeat, backgroundSizeInUnit, backgroundAttachment, backgroundPosition, backgroundImage;\r\n\r\n\r\n  //Получаем значения background-image из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundImage = getResponsiveSetting(settings, 'background_image');\r\n  }\r\n\r\n  if (backgroundImage) {\r\n    styles += backgroundImageControllerToStyles(backgroundImage);\r\n  }\r\n\r\n  //Получаем значения background-size из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSize = getResponsiveSetting(settings, 'background_size');\r\n  }\r\n\r\n  if (backgroundSize) {\r\n    styles += simplePropertyStyled(backgroundSize, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-repeat из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundRepeat = getResponsiveSetting(settings, 'background_repeat');\r\n  }\r\n\r\n  if (backgroundRepeat) {\r\n    styles += simplePropertyStyled(backgroundRepeat, 'background-repeat');\r\n  }\r\n\r\n  //Получаем значения background-size в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSizeInUnit = getResponsiveSetting(settings, 'background_image_width');\r\n  }\r\n\r\n  if (backgroundSizeInUnit) {\r\n    styles += sizeStyled(backgroundSizeInUnit, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-attachment из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundAttachment = getResponsiveSetting(settings, 'background_attachment');\r\n  }\r\n\r\n  if (backgroundAttachment) {\r\n    styles += simplePropertyStyled(backgroundAttachment, 'background-attachment');\r\n  }\r\n\r\n  //Получаем значения background-position из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundPosition = getResponsiveSetting(settings, 'background_position');\r\n  }\r\n\r\n  if (backgroundPosition) {\r\n    styles += simplePropertyStyled(backgroundPosition, 'background-position');\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpBackgroundImageHover(settings) {\r\n  let styles = '';\r\n\r\n  let backgroundSize, backgroundRepeat, backgroundSizeInUnit, backgroundAttachment, backgroundPosition, backgroundImage;\r\n\r\n  //Получаем значения background-size из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSize = getResponsiveSetting(settings, 'background_size', ':hover');\r\n  }\r\n\r\n  if (backgroundSize) {\r\n    styles += simplePropertyStyled(backgroundSize, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-repeat из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundRepeat = getResponsiveSetting(settings, 'background_repeat', ':hover');\r\n  }\r\n\r\n  if (backgroundRepeat) {\r\n    styles += simplePropertyStyled(backgroundRepeat, 'background-repeat');\r\n  }\r\n\r\n  //Получаем значения background-size в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundSizeInUnit = getResponsiveSetting(settings, 'background_image_width', ':hover');\r\n  }\r\n\r\n  if (backgroundSizeInUnit) {\r\n    styles += sizeStyled(backgroundSizeInUnit, 'background-size');\r\n  }\r\n\r\n  //Получаем значения background-attachment из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundAttachment = getResponsiveSetting(settings, 'background_attachment', ':hover');\r\n  }\r\n\r\n  if (backgroundAttachment) {\r\n    styles += simplePropertyStyled(backgroundAttachment, 'background-attachment');\r\n  }\r\n\r\n  //Получаем значения background-position из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundPosition = getResponsiveSetting(settings, 'background_position', ':hover');\r\n  }\r\n\r\n  if (backgroundPosition) {\r\n    styles += simplePropertyStyled(backgroundPosition, 'background-position');\r\n  }\r\n\r\n  //Получаем значения background-image из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundImage = getResponsiveSetting(settings, 'background_image', ':hover');\r\n  }\r\n\r\n  if (backgroundImage) {\r\n    styles += backgroundImageControllerToStyles(backgroundImage);\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionBoxed(settings) {\r\n  let styles = '';\r\n\r\n  let width;\r\n\r\n  //Получаем значения width в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    width = getResponsiveSetting(settings, 'layout_content_width');\r\n  }\r\n\r\n  if (width) {\r\n    width = sliderStyled(width);\r\n    styles += `width: ${width};`;\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionBoxedHover(settings) {\r\n  let styles = '';\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionSectionBoxed(settings) {\r\n  let styles = '';\r\n\r\n  let padding;\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'layout_content_width');\r\n  }\r\n  let width = '100vw';\r\n  if(window?.page_areas?.length > 4){//todo:weak place\r\n    width = '100%';\r\n  }\r\n  if (padding) {\r\n    if(padding.size) {\r\n      styles += `padding-left:calc((${width} - ${padding.size + padding.unit}) / 2);padding-right:calc((${width} - ${padding.size + padding.unit}) / 2);width:${width};`;\r\n    }\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionFull(settings) {\r\n  let styles = '';\r\n\r\n  let margin, padding;\r\n\r\n  //Получаем значения margin из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    margin = getResponsiveSetting(settings, 'position_style_position_margin');\r\n  }\r\n\r\n  if (margin) {\r\n    styles += dimensionsControllerToStyles(margin, 'margin');\r\n  }\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'position_style_position_padding');\r\n  }\r\n\r\n  if (padding) {\r\n    styles += ` > .altrp-section{${dimensionsControllerToStyles(padding, 'padding')}}`;\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nfunction altrpSectionFullHover(settings) {\r\n  let styles = '';\r\n\r\n  // let margin;\r\n  //\r\n  // //Получаем значения margin из контроллера, обрабатываем и добавляем в styles\r\n  //\r\n  // if (settings !== undefined) {\r\n  //   margin = getResponsiveSetting(settings, 'position_style_position_margin', ':hover');\r\n  // }\r\n  //\r\n  // if (margin) {\r\n  //   styles += dimensionsControllerToStyles(margin, 'margin');\r\n  // }\r\n\r\n  return styles;\r\n}\r\n/**\r\n * @return {string}\r\n */\r\n\r\nexport default function SectionWidgetComponent(settings, childrenLength) {\r\n\r\n  // console.log(`& > .altrp-section > .altrp-element_column{width:${100/childrenLength}%;}`);\r\n  return `\r\n\r\n  & > .altrp-section > .altrp-element_column{width:${100/childrenLength}%;}\r\n\r\n  & > div.altrp-section,\r\n  & > div.altrp-section-full-fill {\r\n    ${altrpSection(settings)}\r\n  }\r\n\r\n  & > div.altrp-section:hover,\r\n  & > div.altrp-section-full-fill:hover {\r\n    ${altrpSectionHover(settings)}\r\n  }\r\n  & > div.altrp-section.active,\r\n  & > div.altrp-section-full-fill.active {\r\n    ${altrpSectionHover(settings,'.active')}\r\n    ${(()=>{\r\n      const  styles = [\r\n        ['margin', 'position_style_position_margin', 'dimensions', '.active'],\r\n        ['padding', 'position_style_position_padding', 'dimensions', '.active'],\r\n      ];\r\n      return styledString(styles, settings);\r\n    })()\r\n  }\r\n  }\r\n  & > div.altrp-section div.altrp-column {\r\n    ${altrpSectionColumn(settings)}\r\n  }\r\n\r\n  & > div.altrp-section:hover div.altrp-column:hover {\r\n    ${altrpSectionColumnHover(settings)}\r\n  }\r\n\r\n  & > div.altrp-section {\r\n    ${altrpSectionSecond(settings)}\r\n  }\r\n\r\n  & > div.altrp-section:hover {\r\n    ${altrpSectionSecondHover(settings)}\r\n  }\r\n\r\n  & > div.altrp-section.altrp-background-image {\r\n    ${altrpBackgroundImage(settings)}\r\n  }\r\n\r\n  & > div.altrp-section.altrp-background-image:hover {\r\n    ${altrpBackgroundImageHover(settings)}\r\n  }\r\n\r\n  & > div.altrp-section_boxed,\r\n  & > div.altrp-section_section_boxed {\r\n    ${altrpSectionBoxed(settings)}\r\n  }\r\n\r\n  & > div.altrp-section_boxed:hover,\r\n  & > div.altrp-section_section_boxed:hover {\r\n    ${altrpSectionBoxedHover(settings)}\r\n  }\r\n\r\n  & > div.altrp-section_section-boxed {\r\n    ${altrpSectionSectionBoxed(settings)}\r\n  }\r\n\r\n  &,\r\n  & > div.altrp-section-full-fill {\r\n    ${altrpSectionFull(settings)}\r\n  }\r\n\r\n  &:hover,\r\n  & > div.altrp-section-full-fill:hover {\r\n    ${altrpSectionFullHover(settings)}\r\n  }\r\n\r\n`\r\n}\r\n","\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\n\r\nexport default function TabsSwitcherComponent(settings) {\r\n  const styles = [\r\n    \"& div.altrp-tabs-switcher_switch-wrapper span.bp3-control-indicator.bp3-control-indicator.bp3-control-indicator\",\r\n      [\"background\", \"box_around_color_one\", \"color\"],\r\n      [\"border-radius\", \"box_border_radius\", \"slider\"],\r\n      () => {\r\n        const value = getResponsiveSetting(settings, \"size\");\r\n        const slider = sliderStyled(value);\r\n\r\n        if(slider) {\r\n          return `\r\n            height: ${slider};\r\n            width: calc(${slider} * 2);\r\n\r\n            &:before {\r\n              height: calc(${slider} - 4px);\r\n              width: calc(${slider} - 4px);\r\n            }\r\n          `\r\n        } else {\r\n          return \"\"\r\n        }\r\n      },\r\n    \"}\",\r\n\r\n    \"& div.altrp-tabs-switcher_switch-wrapper span.bp3-control-indicator.bp3-control-indicator.bp3-control-indicator::before\",\r\n      [\"border-radius\", \"switch_border_radius\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"& div.altrp-tabs-switcher_switch-wrapper .altrp-tabs-switcher_switch:hover span.bp3-control-indicator.bp3-control-indicator.bp3-control-indicator::before\",\r\n    [\"border-radius\", \"switch_border_radius\", \"slider\", \":hover\"],\r\n    \"}\",\r\n\r\n\r\n    \"altrp-tabs-switcher_switch-wrapper span.bp3-control-indicator.bp3-control-indicator::before\",\r\n      [\"background\", \"switch_color\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_switch-wrapper .altrp-tabs-switcher_switch:hover span.bp3-control-indicator.bp3-control-indicator::before\",\r\n    [\"background\", \"switch_color\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_switch-wrapper .altrp-tabs-switcher_switch:hover span.bp3-control-indicator.bp3-control-indicator\",\r\n      [\"background\", \"box_around_color_one\", \"color\", \":hover\"],\r\n      [\"border-radius\", \"box_border_radius\", \"slider\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_switch-wrapper .altrp-tabs-switcher_switch:hover input:checked ~ span.bp3-control-indicator.bp3-control-indicator\",\r\n      [\"background\", \"box_around_color_two\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"& div.altrp-tabs-switcher_switch-wrapper input:checked ~ span.bp3-control-indicator.bp3-control-indicator.bp3-control-indicator\",\r\n      [\"background\", \"box_around_color_two\", \"color\"],\r\n      () => {\r\n        const value = getResponsiveSetting(settings, \"size\");\r\n        const slider = sliderStyled(value);\r\n\r\n        if(slider) {\r\n          return `\r\n            &:before {\r\n              left: calc(100% - ${slider});\r\n            }\r\n          `\r\n        } else {\r\n          return \"\"\r\n        }\r\n      },\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_label-one\",\r\n      [\"margin-right\", \"spacing\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_label-two\",\r\n      [\"margin-left\", \"spacing\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_wrapper\",\r\n      [\"margin-bottom\", \"margin_bottom\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_label-one\",\r\n      [\"\", \"typographic_title_one\", \"typographic\"],\r\n      [\"color\", \"color_title_one\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_label-one:hover\",\r\n      [\"\", \"typographic_title_one\", \"typographic\", \":hover\"],\r\n      [\"color\", \"color_title_one\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_label-two\",\r\n    [\"\", \"typographic_title_two\", \"typographic\"],\r\n    [\"color\", \"color_title_two\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_label-two:hover\",\r\n    [\"\", \"typographic_title_two\", \"typographic\", \":hover\"],\r\n    [\"color\", \"color_title_two\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n\r\n    \"altrp-tabs-switcher_content-one\",\r\n    [\"\", \"typographic_section_one\", \"typographic\"],\r\n    [\"color\", \"color_section_one\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_content-one:hover\",\r\n    [\"\", \"typographic_section_one\", \"typographic\", \":hover\"],\r\n    [\"color\", \"color_section_one\", \"color\", \":hover\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_content-two\",\r\n    [\"\", \"typographic_section_two\", \"typographic\"],\r\n    [\"color\", \"color_section_two\", \"color\"],\r\n    \"}\",\r\n\r\n    \"altrp-tabs-switcher_content-two:hover\",\r\n    [\"\", \"typographic_section_two\", \"typographic\", \":hover\"],\r\n    [\"color\", \"color_section_two\", \"color\", \":hover\"],\r\n    \"}\",\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\n\r\nexport default function TooltipComponent(settings) {\r\n  const styles = [\r\n    [\"\", \"tooltip_background_shadow\", \"shadow\"],\r\n    [\"border-radius\", \"tooltip_border_radius\", \"dimensions\"],\r\n    () => {\r\n      const value = getResponsiveSetting(settings, \"tooltip_background_color\");\r\n      if(value) {\r\n        if(value.color) {\r\n          return `border-color: transparent transparent ${value.color}`\r\n        } else {\r\n          return \"\"\r\n        }\r\n      } else {\r\n        return \"\"\r\n      }\r\n    },\r\n\r\n    \"&::after\",\r\n    [\"border-width\", \"arrow_size\", \"slider\"],\r\n    \"}\",\r\n\r\n    \"bp3-popover2-content\",\r\n      [\"background-color\", \"tooltip_background_color\", \"color\"],\r\n      [\"padding\", \"tooltip_position_padding\", \"dimensions\"],\r\n      [\"color\", \"tooltip_font_color\", \"color\"],\r\n      [\"\", \"tooltip_font_typographic\", \"typographic\"],\r\n      [\"border-radius\", \"tooltip_border_radius\", \"dimensions\"],\r\n    \"}\",\r\n\r\n    \"bp3-popover2-arrow-fill\",\r\n      [\"fill\", \"tooltip_background_color\", \"color\"],\r\n    \"}\",\r\n\r\n    \"bp3-popover2-arrow svg\",\r\n      [\"color\", \"tooltip_background_color\", \"color\"],\r\n    \"}\",\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","\r\nimport {defaultStyled, sliderStyled, styledString} from \"../../../../../../front-app/src/js/helpers/styles\";\r\n\r\nexport default function VideoComponent(settings) {\r\n  const styles = [\r\n    \"altrp-video\",\r\n    [\"width\", \"video_width\", \"slider\"],\r\n    [\"height\", \"video_height\", \"slider\"],\r\n    \"}\"\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n","import {styledString} from \"../../helpers/styles\";\r\nconst {getResponsiveSetting} = window.altrpHelpers;\r\n\r\n/**\r\n *\r\n * @param {{}} settings\r\n * @param {string} elementId\r\n */\r\nexport default function getInputFileStyles(settings, elementId) {\r\n  let styles = [\r\n    ()=>{\r\n      let styles ='&&{';\r\n      const alignment = getResponsiveSetting(settings, 'alignment')\r\n      if(alignment ){\r\n        // styles += `flex-direction:row;\r\n        // .bp3-file-input{flex-grow:0}`\r\n        switch(alignment){\r\n          case 'stretch':{\r\n            styles += `.bp3-file-input{align-self:${alignment};width:100%}`\r\n          }\r\n          break\r\n          default:{\r\n            styles += `.bp3-file-input{align-self:${alignment}}`\r\n          }break\r\n        }\r\n      }\r\n      styles += '}';\r\n      if(getResponsiveSetting(settings, 'preview')){\r\n        styles += `&  .bp3-file-upload-input{display:none!important}\r\n\r\n        `\r\n      }\r\n      return styles\r\n    },\r\n    //<editor-fold description=text>\r\n    '.bp3-file-input.bp3-file-input',\r\n    ['width', 'width', 'slider'],\r\n    ['height', 'height', 'slider'],\r\n    '}',\r\n    '.bp3-file-upload-input',\r\n    ['height', 'height', 'slider'],\r\n    ['padding', 'padding', 'dimensions'],\r\n    ['', 'typographic', 'typographic'],\r\n    ['color', 'color', 'color'],\r\n    ['background-color', 'background', 'color'],\r\n    ['box-shadow', 'box_shadow', 'shadow'],\r\n    ['border-radius', 'radius', 'dimensions'],\r\n    '}',\r\n    '.bp3-file-input_preview',\r\n    ['color', 'color', 'color'],\r\n    ['background-color', 'background', 'color'],\r\n    '}',\r\n    '.bp3-file-input .bp3-file-upload-input-custom-text::after',\r\n    ['width', 'b_width', 'slider'],\r\n    ['height', 'b_height', 'slider'],\r\n    ['margin', 'b_margin', 'dimensions'],\r\n    ['padding', 'b_padding', 'dimensions'],\r\n    ['background-image', 'b_background', 'gradient'],\r\n    ['', 'b_typographic', 'typographic'],\r\n    ['color', 'b_color', 'color'],\r\n    ['box-shadow', 'b_box_shadow', 'shadow'],\r\n    '}',\r\n    /**\r\n     * hover\r\n     */\r\n    '.bp3-file-upload-input:hover',\r\n    ['', 'typographic', 'typographic', ':hover'],\r\n    ['color', 'color', 'color', ':hover'],\r\n    ['background-color', 'background', 'color', ':hover'],\r\n    ['box-shadow', 'box_shadow', 'shadow', ':hover'],\r\n    '}',\r\n    '.bp3-file-upload-input.bp3-file-upload-input-custom-text:hover::after',\r\n    ['background-image', 'b_background', 'gradient', ':hover'],\r\n    ['', 'b_typographic', 'typographic', ':hover'],\r\n    ['color', 'b_color', 'color', ':hover'],\r\n    ['box-shadow', 'b_box_shadow', 'shadow', ':hover'],\r\n    '}',\r\n    '.bp3-file-input_preview:hover',\r\n    ['color', 'color', 'color', ':hover'],\r\n    ['background-color', 'background', 'color', ':hover'],\r\n    '}',\r\n    /**\r\n     * active\r\n     */\r\n    '.bp3-file-input_preview:active',\r\n    ['color', 'color', 'color', '.active'],\r\n    ['background-color', 'background', 'color', '.active'],\r\n    '}',\r\n    '& input:active + .bp3-file-upload-input',\r\n    ['', 'typographic', 'typographic', '.active'],\r\n    ['color', 'color', 'color', '.active'],\r\n    ['background-color', 'background', 'color', '.active'],\r\n    ['box-shadow', 'box_shadow', 'shadow', ':hover'],\r\n    '}',\r\n    '& input:active + .bp3-file-upload-input.bp3-file-upload-input-custom-text::after',\r\n    ['background-image', 'b_background', 'gradient', '.active'],\r\n    ['', 'b_typographic', 'typographic', '.active'],\r\n    ['color', 'b_color', 'color', '.active'],\r\n    ['box-shadow', 'b_box_shadow', 'shadow', '.active'],\r\n    '}',\r\n    //</editor-fold>\r\n  ];\r\n  return styledString(styles, settings)\r\n}\r\n\r\n","import {styledString} from '../../helpers/styles';\r\nconst {getResponsiveSetting} = window.altrpHelpers;\r\n\r\n/**\r\n *\r\n * @param {{}} settings\r\n * @param {string} elementId\r\n */\r\nexport default function getInputGalleryStyles(settings, elementId) {\r\n  let styles = [\r\n    ()=>{\r\n      let styles ='&{';\r\n      let columns = getResponsiveSetting(settings, 'columns')\r\n      if(! columns){\r\n        columns = 6\r\n      }\r\n      styles += '.input-gallery-wrapper{grid-template-columns:'\r\n      let width = 100 / columns + '%';\r\n      let v_gap = getResponsiveSetting(settings, 'v_gap')\r\n      if(v_gap && v_gap.size && columns > 1){\r\n        width = `calc(${width} - ${(v_gap.size * (columns - 1)) / columns  + (v_gap.unit || 'px')})`\r\n      }\r\n      styles += `repeat(${columns}, ${width});`\r\n      const alignment = getResponsiveSetting(settings, 'alignment');\r\n\r\n      styles +='}'\r\n      styles +='}'\r\n      return styles\r\n    },\r\n\r\n    '.input-gallery-wrapper',\r\n    ['column-gap', 'v_gap', 'slider'],\r\n    ['row-gap', 'h_gap', 'slider'],\r\n    '}',\r\n    //<editor-fold description=items>\r\n    '.input-gallery__item.input-gallery__item',\r\n    ['height', 'height', 'slider'],\r\n    ['background-color', 'background', 'color'],\r\n    ['background-image', 'gradient', 'gradient'],\r\n    ['box-shadow', 'box_shadow', 'shadow'],\r\n    ['border-radius', 'radius', 'dimensions'],\r\n    ['border-style', 'b_style', '',],\r\n    ['border-width', 'b_width', 'dimensions',],\r\n    ['border-color', 'b_color', 'color',],\r\n    '}',\r\n    /**\r\n     * hover\r\n     */\r\n\r\n    '.input-gallery__item.input-gallery__item:hover',\r\n    ['background-color', 'background', 'color', ':hover'],\r\n    ['background-image', 'gradient', 'gradient', ':hover'],\r\n    ['box-shadow', 'box_shadow', 'shadow', ':hover'],\r\n    ['border-radius', 'radius', 'dimensions', ':hover'],\r\n    ['border-style', 'b_style', '', ':hover'],\r\n    ['border-width', 'b_width', 'dimensions', ':hover'],\r\n    ['border-color', 'b_color', 'color', ':hover'],\r\n    '}',\r\n    /**\r\n     * active\r\n     */\r\n\r\n    //</editor-fold>\r\n    //<editor-fold description=delete>\r\n\r\n    '.input-gallery__delete.input-gallery__delete',\r\n    ['height', 'delete_s', 'slider'],\r\n    ['width', 'delete_s', 'slider'],\r\n    ['top', 'delete_o', 'slider'],\r\n    ['right', 'delete_o', 'slider'],\r\n\r\n    '}',\r\n    //</editor-fold>\r\n  ];\r\n  return styledString(styles, settings)\r\n}\r\n\r\n","import {gradientStyled, styledString} from \"../../helpers/styles\";\nconst {getResponsiveSetting} = window.altrpHelpers;\n\n/**\n *\n * @param {{}} settings\n * @param {string} elementId\n */\nexport default function getInputMultiSelectStyles(settings, elementId) {\n  let styles = [\n    //<editor-fold description=\"стили лэйбла\">\n    '.altrp-field-label-container',\n    ['background-color', 'label_background_color', 'color'],\n    ['padding', 'label_padding', 'dimensions'],\n    ['color', 'label_style_font_color', 'color'],\n    ['top', 'label_position_top', 'slider'],\n    ['left', 'label_position_left', 'slider'],\n    ['width', 'label_width', 'slider'],\n    '}',\n    '.altrp-field-label',\n    ['', 'label_style_font_typographic', 'typographic'],\n    '}',\n    '.altrp-label-icon',\n    ['padding', 'icon_padding', 'dimensions'],\n    // ['width', 'icon_size', 'slider'],\n    // ['height', 'icon_size', 'slider'],\n    '}',\n\n    '.altrp-label-icon svg',\n    ['width', 'icon_size', 'slider'],\n    ['height', 'icon_size', 'slider'],\n    ['background-color', 'icon_color_background', 'color'],\n    ['fill', 'icon_color', 'color'],\n    ['stroke', 'icon_color', 'color'],\n    '}',\n    '.altrp-label-icon svg path',\n    ['fill', 'icon_color', 'color'],\n    ['stroke', 'icon_color', 'color'],\n    '}',\n    '.altrp-label-icon img',\n    ['width', 'icon_size', 'slider'],\n    ['height', 'icon_size', 'slider'],\n    ['background-color', 'icon_color_background', 'color'],\n    '}',\n    //</editor-fold>\n    '.altrp-field-label--required::after',\n    ['', 'required_style_font_typographic', 'typographic'],\n    ['color', 'required_style_font_color', 'color'],\n    '}',\n    '.mask-mismatch-message',\n    ['margin', 'mismatch_message_margin', 'dimensions'],\n    ['padding', 'mismatch_message_padding', 'dimensions'],\n    ['color', 'mismatch_message_font_color', 'color'],\n    ['', 'mismatch_message_typographic', 'typographic'],\n    '}',\n    //<editor-fold description=\"стили иконок\">\n    '.bp3-icon_text-widget.bp3-icon_text-widget.bp3-icon_text-widget',\n    ['margin', 'input_icons_margin', 'dimensions'],\n    ['padding', 'input_icons_padding', 'dimensions'],\n    ['border-radius', 'input_icons_radius', 'dimensions'],\n    '}',\n    '.bp3-icon_text-widget',\n    ['background-color', 'input_icons_background', 'color', ],\n    '}',\n    '.bp3-icon_text-widget:hover',\n    ['background-color', 'input_icons_background', 'color', ':hover'],\n    '}',\n    '.bp3-icon_text-widget:active',\n    ['background-color', 'input_icons_background', 'color', '.active'],\n    '}',\n    '.bp3-icon_text-widget svg',\n    ['width', 'input_icons_size', 'slider'],\n    ['height', 'input_icons_size', 'slider'],\n    '}',\n    '.bp3-icon_text-widget svg,& .bp3-icon_text-widget path',\n    ['fill', 'input_icons_fill', 'color'],\n    ['stroke', 'input_icons_stroke', 'color'],\n    '}',\n    '.bp3-icon_text-widget:hover svg,& .bp3-icon_text-widget:hover path',\n    ['fill', 'input_icons_fill', 'color', ':hover'],\n    ['stroke', 'input_icons_stroke', 'color', ':hover'],\n    '}',\n    '.bp3-icon_text-widget:active svg,& .bp3-icon_text-widget:active path',\n    ['fill', 'input_icons_fill', 'color', '.active'],\n    ['stroke', 'input_icons_stroke', 'color', '.active'],\n    '}',\n    '.bp3-icon_text-widget img',\n    ['width', 'input_icons_size', 'slider'],\n    ['height', 'input_icons_size', 'slider'],\n    '}',\n    //</editor-fold>\n    //<editor-fold description=\"стили тэгов\">\n    '.bp3-tag',\n    ['margin', 'tags_ma', 'dimensions'],\n    ['background-color', 'tags_bg', 'color'],\n    ['', 'tags_t', 'typographic'],\n    ['color', 'tags_color', 'color'],\n    '}',\n    '.bp3-tag:hover',\n    ['background-color', 'tags_bg', 'color', ':hover'],\n    ['', 'tags_t', 'typographic', ':hover'],\n    ['color', 'tags_color', 'color', ':hover'],\n    '}',\n    '.bp3-tag svg',\n    ['margin', 'delete_ma', 'dimensions'],\n    ['width', 'delete_s', 'slider'],\n    ['height', 'delete_s', 'slider'],\n    '}',\n    '.bp3-tag path',\n    ['fill', 'tags_delete_color', 'color'],\n    '}',\n    //</editor-fold>\n    //<editor-fold description=\"стили кнопки очистить\">\n    '.altrp-clear',\n    ['background-color', 'clear_bg', 'clear_bg'],\n    ['margin', 'clear_ma', 'dimensions'],\n    ['padding', 'clear_pa', 'dimensions'],\n    '}',\n    '.altrp-clear:hover',\n    ['background-color', 'clear_bg', 'clear_bg', ':hover'],\n    '}',\n    '.altrp-clear:active',\n    ['background-color', 'clear_bg', 'clear_bg', '.active'],\n    '}',\n    '.altrp-clear svg',\n    ['width', 'clear_s', 'slider'],\n    ['height', 'clear_s', 'slider'],\n    ['fill', 'clear_color', 'color'],\n    '}',\n    '.altrp-clear:hover svg',\n    ['fill', 'clear_color', 'color',':hover'],\n    '}',\n    '.altrp-clear:active svg',\n    ['fill', 'clear_color', 'color','.active'],\n    '}',\n    //</editor-fold>\n    //<editor-fold description=\"стили кнопки\">\n    ()=>{\n      const alignment = getResponsiveSetting(settings, 'alignment')\n      switch (alignment){\n        case 'flex-start':{\n          return '& .bp3-popover-target.bp3-popover-target{flex-grow:0}'\n        }\n        case 'flex-end':{\n          return '& .bp3-popover-target.bp3-popover-target{flex-grow:0}& .bp3-popover-wrapper{justify-content:flex-end;}'\n        }\n        case 'center':{\n          return '& .bp3-popover-target.bp3-popover-target{flex-grow:0}& .bp3-popover-wrapper{justify-content:center;}'\n        }\n      }\n    },\n    '.bp3-popover-target',\n    ['width', 'field_width', 'slider'],\n    ['margin', 'position_margin', 'dimensions'],\n    '}',\n    '.bp3-tag-input-values.bp3-tag-input-values',\n    ['height', 'field_height', 'slider'],\n    ['text-align', 'placeholder_and_value_alignment_position_section', ],\n    ['padding', 'position_padding', 'dimensions'],\n    ['', 'field_font_typographic', 'typographic'],\n    ['color', 'field_font_color', 'color'],\n    ['opacity', 'background_section_opacity', 'slider'],\n    '}',\n    '.bp3-tag-input',\n    ['background-color', 'input_bg', 'color'],\n    ['align-items', 'clear_align', ''],\n    ['border-style', 'border_type',],\n    ['border-width', 'border_width', 'dimensions'],\n    ['border-color', 'border_color', 'color'],\n    ['border-radius', 'border_radius', 'dimensions'],\n    ['', 'box_shadow', 'shadow'],\n    '}',\n    '.bp3-tag-input:hover',\n    ['background-color', 'input_bg', 'color', ':hover'],\n    ['', 'box_shadow', 'shadow',':hover'],\n    '}',\n    '.bp3-tag-input.bp3-active',\n    ['background-color', 'input_bg', 'color', ':focus'],\n    ['', 'box_shadow', 'shadow',':focus'],\n    '}',\n    '.bp3-tag-input-values.bp3-tag-input-values:hover',\n    ['', 'field_font_typographic', 'typographic', ':hover'],\n    ['color', 'field_font_color', 'color', ':hover'],\n    ['border-color', 'border_color', 'color',':hover'],\n    ['border-radius', 'border_radius', 'dimensions',':hover'],\n    '.bp3-icon svg',\n    ['height', 'i_size', 'slider',':hover'],\n    ['width', 'i_size', 'slider',':hover'],\n    ['margin', 'i_margin', 'dimensions',':hover'],\n    '}',\n    '.bp3-icon path',\n    ['fill', 'i_color', 'color',':hover'],\n    '}',\n    '.bp3-icon img',\n    ['height', 'i_size', 'slider',':hover'],\n    ['width', 'i_size', 'slider',':hover'],\n    ['margin', 'i_margin', 'dimensions',':hover'],\n    '}',\n    '}',\n    //</editor-fold>\n    //<editor-fold description=\"стили иконок\">\n    '.bp3-icon svg',\n    ['height', 'i_size', 'slider'],\n    ['width', 'i_size', 'slider'],\n    ['margin', 'i_margin', 'dimensions'],\n    '}',\n    '.bp3-icon path',\n    ['fill', 'i_color', 'color'],\n    '}',\n    '.bp3-icon img',\n    ['height', 'i_size', 'slider'],\n    ['width', 'i_size', 'slider'],\n    ['margin', 'i_margin', 'dimensions'],\n    '}',\n    //</editor-fold>\n\n  ];\n  return styledString(styles, settings)\n}\n\nexport function getInputMultiSelectPopoverStyles(settings, elementId){\n  let styles = [\n  //<editor-fold description=\"стили поповера\">\n    `.altrp-portal${elementId}`,\n    '.bp3-menu',\n    ['background-color', 'menu_bg', 'color'],\n    '}',\n    '.bp3-menu-item',\n    ['background-color', 'background_style_background_color', 'color'],\n    ['color', 'items_font_color', 'color'],\n    ['', 'field_font_typographic', 'typographic',],\n    '}',\n    '.bp3-menu-item:hover',\n    ['color', 'items_font_color', 'color', ':hover'],\n    ['background-color', 'background_style_background_color', 'color',':hover'],\n    ['', 'field_font_typographic', 'typographic', ':hover'],\n    '}',\n    '.bp3-menu-item.bp3-active.bp3-active',\n    ['color', 'items_font_color', 'color', '.active'],\n    ['background-color', 'background_style_background_color', 'color','.active'],\n    ['', 'field_font_typographic', 'typographic', '.active'],\n    '}',\n\n    '.bp3-icon-add svg',\n    ['height', 'a_size', 'slider'],\n    ['width', 'a_size', 'slider'],\n    ['margin', 'a_margin', 'dimensions'],\n    '}',\n    '.bp3-icon-add path',\n    ['fill', 'a_color', 'color'],\n    '}',\n    '.bp3-menu-item:hover .bp3-icon-add path',\n    ['fill', 'a_color', 'color', ':hover'],\n    '}',\n    '}',\n  //</editor-fold>\n  ];\n  return styledString(styles, settings)\n\n}\n","import {gradientStyled, styledString} from \"../../helpers/styles\";\r\nconst {getResponsiveSetting} = window.altrpHelpers;\r\n\r\n/**\r\n *\r\n * @param {{}} settings\r\n * @param {string} elementId\r\n */\r\nexport default function getInputSelectStyles(settings, elementId) {\r\n  let styles = [\r\n    //<editor-fold description=\"стили лэйбла\">\r\n    '.altrp-field-label-container',\r\n    ['background-color', 'label_background_color', 'color'],\r\n    ['padding', 'label_padding', 'dimensions'],\r\n    ['color', 'label_style_font_color', 'color'],\r\n    ['top', 'label_position_top', 'slider'],\r\n    ['left', 'label_position_left', 'slider'],\r\n    ['width', 'label_width', 'slider'],\r\n    '}',\r\n    '.altrp-field-label',\r\n    ['', 'label_style_font_typographic', 'typographic'],\r\n    '}',\r\n    '.altrp-label-icon',\r\n    ['padding', 'icon_padding', 'dimensions'],\r\n    // ['width', 'icon_size', 'slider'],\r\n    // ['height', 'icon_size', 'slider'],\r\n    '}',\r\n\r\n    '.altrp-label-icon svg',\r\n    ['width', 'icon_size', 'slider'],\r\n    ['height', 'icon_size', 'slider'],\r\n    ['background-color', 'icon_color_background', 'color'],\r\n    ['fill', 'icon_color', 'color'],\r\n    ['stroke', 'icon_color', 'color'],\r\n    '}',\r\n    '.altrp-label-icon svg path',\r\n    ['fill', 'icon_color', 'color'],\r\n    ['stroke', 'icon_color', 'color'],\r\n    '}',\r\n    '.altrp-label-icon img',\r\n    ['width', 'icon_size', 'slider'],\r\n    ['height', 'icon_size', 'slider'],\r\n    ['background-color', 'icon_color_background', 'color'],\r\n    '}',\r\n    //</editor-fold>\r\n    '.altrp-field-label--required::after',\r\n    ['', 'required_style_font_typographic', 'typographic'],\r\n    ['color', 'required_style_font_color', 'color'],\r\n    '}',\r\n    '.mask-mismatch-message',\r\n    ['margin', 'mismatch_message_margin', 'dimensions'],\r\n    ['padding', 'mismatch_message_padding', 'dimensions'],\r\n    ['color', 'mismatch_message_font_color', 'color'],\r\n    ['', 'mismatch_message_typographic', 'typographic'],\r\n    '}',\r\n    //<editor-fold description=\"стили иконок\">\r\n    '.bp3-icon_text-widget.bp3-icon_text-widget.bp3-icon_text-widget',\r\n    ['margin', 'input_icons_margin', 'dimensions'],\r\n    ['padding', 'input_icons_padding', 'dimensions'],\r\n    ['border-radius', 'input_icons_radius', 'dimensions'],\r\n    '}',\r\n    '.bp3-icon_text-widget',\r\n    ['background-color', 'input_icons_background', 'color', ],\r\n    '}',\r\n    '.bp3-icon_text-widget:hover',\r\n    ['background-color', 'input_icons_background', 'color', ':hover'],\r\n    '}',\r\n    '.bp3-icon_text-widget:active',\r\n    ['background-color', 'input_icons_background', 'color', '.active'],\r\n    '}',\r\n    '.bp3-icon_text-widget svg',\r\n    ['width', 'input_icons_size', 'slider'],\r\n    ['height', 'input_icons_size', 'slider'],\r\n    '}',\r\n    '.bp3-icon_text-widget svg,& .bp3-icon_text-widget path',\r\n    ['fill', 'input_icons_fill', 'color'],\r\n    ['stroke', 'input_icons_stroke', 'color'],\r\n    '}',\r\n    '.bp3-icon_text-widget:hover svg,& .bp3-icon_text-widget:hover path',\r\n    ['fill', 'input_icons_fill', 'color', ':hover'],\r\n    ['stroke', 'input_icons_stroke', 'color', ':hover'],\r\n    '}',\r\n    '.bp3-icon_text-widget:active svg,& .bp3-icon_text-widget:active path',\r\n    ['fill', 'input_icons_fill', 'color', '.active'],\r\n    ['stroke', 'input_icons_stroke', 'color', '.active'],\r\n    '}',\r\n    '.bp3-icon_text-widget img',\r\n    ['width', 'input_icons_size', 'slider'],\r\n    ['height', 'input_icons_size', 'slider'],\r\n    '}',\r\n    //</editor-fold>\r\n    //<editor-fold description=\"стили кнопки\">\r\n    ()=>{\r\n      const alignment = getResponsiveSetting(settings, 'alignment')\r\n      switch (alignment){\r\n        case 'flex-start':{\r\n          return '& .bp3-popover-target.bp3-popover-target{flex-grow:0}'\r\n        }\r\n        case 'flex-end':{\r\n          return '& .bp3-popover-target.bp3-popover-target{flex-grow:0}& .bp3-popover-wrapper{justify-content:flex-end;}'\r\n        }\r\n        case 'center':{\r\n          return '& .bp3-popover-target.bp3-popover-target{flex-grow:0}& .bp3-popover-wrapper{justify-content:center;}'\r\n        }\r\n      }\r\n    },\r\n    '.bp3-popover-target',\r\n    ['width', 'field_width', 'slider'],\r\n    ['margin', 'position_margin', 'dimensions'],\r\n    '}',\r\n    '.bp3-button.bp3-button',\r\n    ['height', 'field_height', 'slider'],\r\n    ['text-align', 'placeholder_and_value_alignment_position_section', ],\r\n    ['padding', 'position_padding', 'dimensions'],\r\n    ['', 'field_font_typographic', 'typographic'],\r\n    ['color', 'field_font_color', 'color'],\r\n    ['opacity', 'background_section_opacity', 'slider'],\r\n    ['border-style', 'border_type',],\r\n    ['border-width', 'border_width', 'dimensions'],\r\n    ['border-color', 'border_color', 'color'],\r\n    ['border-radius', 'border_radius', 'dimensions'],\r\n    ['', 'box_shadow', 'shadow'],\r\n    '}',\r\n    ()=>{\r\n      let styles = '.bp3-button.bp3-button{';\r\n      let button_gradient = getResponsiveSetting(settings, 'button_gradient')\r\n      if(button_gradient){\r\n        styles += gradientStyled(button_gradient)\r\n      }\r\n      styles += '}'\r\n      styles += '.bp3-button:hover{'\r\n      button_gradient = getResponsiveSetting(settings, 'button_gradient', ':hover')\r\n      if(button_gradient){\r\n        styles += gradientStyled(button_gradient)\r\n      }\r\n      styles += '}'\r\n      styles += '.bp3-button.bp3-button:active{'\r\n      button_gradient = getResponsiveSetting(settings, 'button_gradient', '.active')\r\n      if(button_gradient){\r\n        styles += gradientStyled(button_gradient)\r\n      }\r\n      styles += '}'\r\n      return styles;\r\n    },\r\n    '.bp3-button.bp3-button:hover',\r\n    ['', 'field_font_typographic', 'typographic', ':hover'],\r\n    ['color', 'field_font_color', 'color', ':hover'],\r\n    ['border-color', 'border_color', 'color',':hover'],\r\n    ['border-radius', 'border_radius', 'dimensions',':hover'],\r\n    '.bp3-icon svg',\r\n    ['height', 'i_size', 'slider',':hover'],\r\n    ['width', 'i_size', 'slider',':hover'],\r\n    ['margin', 'i_margin', 'dimensions',':hover'],\r\n    '}',\r\n    '.bp3-icon path',\r\n    ['fill', 'i_color', 'color',':hover'],\r\n    '}',\r\n    '.bp3-icon img',\r\n    ['height', 'i_size', 'slider',':hover'],\r\n    ['width', 'i_size', 'slider',':hover'],\r\n    ['margin', 'i_margin', 'dimensions',':hover'],\r\n    '}',\r\n    ['', 'box_shadow', 'shadow',':hover'],\r\n    '}',\r\n    '.bp3-button.bp3-button:active',\r\n    ['', 'field_font_typographic', 'typographic', '.active'],\r\n    ['color', 'field_font_color', 'color', '.active'],\r\n    ['border-color', 'border_color', 'color','.active'],\r\n    ['border-radius', 'border_radius', 'dimensions','.active'],\r\n    ['', 'box_shadow', 'shadow','.active'],\r\n\r\n    '.bp3-icon svg',\r\n    ['height', 'i_size', 'slider','.active'],\r\n    ['width', 'i_size', 'slider','.active'],\r\n    ['margin', 'i_margin', 'dimensions','.active'],\r\n    '}',\r\n    '.bp3-icon path',\r\n    ['fill', 'i_color', 'color','.active'],\r\n    '}',\r\n    '.bp3-icon img',\r\n    ['height', 'i_size', 'slider','.active'],\r\n    ['width', 'i_size', 'slider','.active'],\r\n    ['margin', 'i_margin', 'dimensions','.active'],\r\n    '}',\r\n    '}',\r\n    // '.bp3-input.bp3-input.bp3-input.bp3-input::placeholder',\r\n    // ['', 'placeholder_style_font_typographic', 'typographic'],\r\n    // ['color', 'placeholder_style_font_color', 'color'],\r\n    // '}',\r\n    // '.bp3-input.bp3-input.bp3-input.bp3-input:hover::placeholder',\r\n    // ['', 'placeholder_style_font_typographic', 'typographic',':hover'],\r\n    // ['color', 'placeholder_style_font_color', 'color', ':hover'],\r\n    // '}',\r\n    // '.bp3-input.bp3-input.bp3-input.bp3-input:focus::placeholder',\r\n    // ['', 'placeholder_style_font_typographic', 'typographic',':focus'],\r\n    // ['color', 'placeholder_style_font_color', 'color', ':focus'],\r\n    // '}',\r\n    //</editor-fold>\r\n    //<editor-fold description=\"стили иконок\">\r\n    '.bp3-icon svg',\r\n    ['height', 'i_size', 'slider'],\r\n    ['width', 'i_size', 'slider'],\r\n    ['margin', 'i_margin', 'dimensions'],\r\n    '}',\r\n    '.bp3-icon path',\r\n    ['fill', 'i_color', 'color'],\r\n    '}',\r\n    '.bp3-icon img',\r\n    ['height', 'i_size', 'slider'],\r\n    ['width', 'i_size', 'slider'],\r\n    ['margin', 'i_margin', 'dimensions'],\r\n    '}',\r\n    //</editor-fold>\r\n\r\n  ];\r\n  return styledString(styles, settings)\r\n}\r\n\r\nexport function getInputSelectPopoverStyles(settings, elementId){\r\n  let styles = [\r\n  //<editor-fold description=\"стили поповера\">\r\n    `.altrp-portal${elementId}`,\r\n    '.bp3-menu-item',\r\n    ['background-color', 'background_style_background_color', 'color'],\r\n    ['color', 'items_font_color', 'color'],\r\n    ['', 'field_font_typographic', 'typographic',],\r\n    '}',\r\n    '.bp3-menu-item:hover',\r\n    ['color', 'items_font_color', 'color', ':hover'],\r\n    ['background-color', 'background_style_background_color', 'color',':hover'],\r\n    ['', 'field_font_typographic', 'typographic', ':hover'],\r\n    '}',\r\n    '.bp3-menu-item.bp3-active.bp3-active',\r\n    ['color', 'items_font_color', 'color', '.active'],\r\n    ['background-color', 'background_style_background_color', 'color','.active'],\r\n    ['', 'field_font_typographic', 'typographic', '.active'],\r\n    '}',\r\n    '.bp3-input',\r\n    ['', 'field_font_typographic', 'typographic'],\r\n    ['height', 'si_size', 'slider'],\r\n    ['padding', 'si_padding', 'dimensions'],\r\n    ['color', 'si_color', 'color'],\r\n    ['background-color', 'si_bg_color', 'color'],\r\n    '}',\r\n    '.bp3-input:hover',\r\n    ['color', 'si_color', 'color', ':hover'],\r\n    ['background-color', 'si_bg_color', 'color', ':hover'],\r\n    '}',\r\n    '.bp3-input:focus',\r\n    ['color', 'si_color', 'color', ':focus'],\r\n    ['background-color', 'si_bg_color', 'color', ':focus'],\r\n    '}',\r\n    '.bp3-input-group .bp3-icon svg',\r\n      ['height', 'sii_size', 'slider'],\r\n      ['width', 'sii_size', 'slider'],\r\n      ['margin', 'sii_margin', 'dimensions'],\r\n    '}',\r\n    '.bp3-input-group .bp3-icon path',\r\n      ['fill', 'sii_color', 'color'],\r\n    '}',\r\n    '.bp3-icon-add svg',\r\n\r\n    ['height', 'a_size', 'slider'],\r\n    ['width', 'a_size', 'slider'],\r\n    ['margin', 'a_margin', 'dimensions'],\r\n    '}',\r\n    '.bp3-icon-add path',\r\n    ['fill', 'a_color', 'color'],\r\n    '}',\r\n    '.bp3-menu-item:hover .bp3-icon-add path',\r\n    ['fill', 'a_color', 'color', ':hover'],\r\n    '}',\r\n    '}',\r\n  //</editor-fold>\r\n  ];\r\n  return styledString(styles, settings)\r\n\r\n}\r\n","import {styledString} from \"../../helpers/styles\";\r\n\r\n/**\r\n *\r\n * @param {{}} settings\r\n * @param {string} elementId\r\n */\r\nexport default function getInputTextCommonStyles(settings, elementId) {\r\n  let styles = [\r\n    //<editor-fold description=\"стили лэйбла\">\r\n    '.altrp-field-label',\r\n    ['background-color', 'label_background_color', 'color'],\r\n    ['padding', 'label_padding', 'dimensions'],\r\n    ['color', 'label_style_font_color', 'color'],\r\n    ['', 'label_style_font_typographic', 'typographic'],\r\n    ['top', 'label_position_top', 'slider'],\r\n    ['left', 'label_position_left', 'slider'],\r\n    '}',\r\n    '.altrp-field-label-container',\r\n    ['width', 'label_width', 'slider'],\r\n    '}',\r\n    '.altrp-label-icon',\r\n    ['padding', 'icon_padding', 'dimensions'],\r\n    ['width', 'icon_size', 'slider'],\r\n    ['height', 'icon_size', 'slider'],\r\n    '}',\r\n\r\n    '.altrp-label-icon svg',\r\n    ['width', 'icon_size', 'slider'],\r\n    ['height', 'icon_size', 'slider'],\r\n    ['background-color', 'icon_color_background', 'color'],\r\n    ['fill', 'icon_color', 'color'],\r\n    ['stroke', 'icon_color', 'color'],\r\n    '}',\r\n    '.altrp-label-icon svg path',\r\n    ['fill', 'icon_color', 'color'],\r\n    ['stroke', 'icon_color', 'color'],\r\n    '}',\r\n    '.altrp-label-icon img',\r\n    ['width', 'icon_size', 'slider'],\r\n    ['height', 'icon_size', 'slider'],\r\n    ['background-color', 'icon_color_background', 'color'],\r\n    '}',\r\n    //</editor-fold>\r\n    //<editor-fold description=\"стили инпута\">\r\n    '.bp3-input-group',\r\n    ['width', 'field_width', 'slider'],\r\n    ['padding', 'position_margin', 'dimensions'],\r\n    '}',\r\n    '.bp3-input.bp3-input.bp3-input.bp3-input',\r\n    ['height', 'field_height', 'slider'],\r\n    ['text-align', 'placeholder_and_value_alignment_position_section', ],\r\n    ['padding', 'position_padding', 'dimensions'],\r\n    ['', 'field_font_typographic', 'typographic'],\r\n    ['color', 'field_font_color', 'color'],\r\n    ['background-color', 'background_style_background_color', 'color'],\r\n    ['opacity', 'background_section_opacity', 'slider'],\r\n    ['border-style', 'border_type',],\r\n    ['border-width', 'border_width', 'dimensions'],\r\n    ['border-color', 'border_color', 'color'],\r\n    ['border-radius', 'border_radius', 'dimensions'],\r\n    ['', 'box_shadow', 'shadow'],\r\n    '}',\r\n    '.bp3-input.bp3-input.bp3-input.bp3-input:hover',\r\n    ['', 'field_font_typographic', 'typographic', ':hover'],\r\n    ['color', 'field_font_color', 'color', ':hover'],\r\n    ['background-color', 'background_style_background_color', 'color',':hover'],\r\n    ['border-color', 'border_color', 'color',':hover'],\r\n    ['border-radius', 'border_radius', 'dimensions',':hover'],\r\n    ['', 'box_shadow', 'shadow',':hover'],\r\n    '}',\r\n    '.bp3-input.bp3-input.bp3-input.bp3-input:focus',\r\n    ['', 'field_font_typographic', 'typographic', ':focus'],\r\n    ['color', 'field_font_color', 'color', ':focus'],\r\n    ['background-color', 'background_style_background_color', 'color',':focus'],\r\n    ['border-color', 'border_color', 'color',':focus'],\r\n    ['border-radius', 'border_radius', 'dimensions',':focus'],\r\n    ['', 'box_shadow', 'shadow',':focus'],\r\n    '}',\r\n    '.bp3-input.bp3-input.bp3-input.bp3-input::placeholder',\r\n    ['', 'placeholder_style_font_typographic', 'typographic'],\r\n    ['color', 'placeholder_style_font_color', 'color'],\r\n    '}',\r\n    '.bp3-input.bp3-input.bp3-input.bp3-input:hover::placeholder',\r\n    ['', 'placeholder_style_font_typographic', 'typographic',':hover'],\r\n    ['color', 'placeholder_style_font_color', 'color', ':hover'],\r\n    '}',\r\n    '.bp3-input.bp3-input.bp3-input.bp3-input:focus::placeholder',\r\n    ['', 'placeholder_style_font_typographic', 'typographic',':focus'],\r\n    ['color', 'placeholder_style_font_color', 'color', ':focus'],\r\n    '}',\r\n    //</editor-fold>\r\n    '.altrp-field-label--required::after',\r\n    ['', 'required_style_font_typographic', 'typographic'],\r\n    ['color', 'required_style_font_color', 'color'],\r\n    '}',\r\n    '.mask-mismatch-message',\r\n    ['margin', 'mismatch_message_margin', 'dimensions'],\r\n    ['padding', 'mismatch_message_padding', 'dimensions'],\r\n    ['color', 'mismatch_message_font_color', 'color'],\r\n    ['', 'mismatch_message_typographic', 'typographic'],\r\n    '}',\r\n    '.bp3-icon_text-widget.bp3-icon_text-widget.bp3-icon_text-widget',\r\n    ['margin', 'input_icons_margin', 'dimensions'],\r\n    ['padding', 'input_icons_padding', 'dimensions'],\r\n    ['border-radius', 'input_icons_radius', 'dimensions'],\r\n    '}',\r\n    '.bp3-icon_text-widget',\r\n    ['background-color', 'input_icons_background', 'color', ],\r\n    '}',\r\n    '.bp3-icon_text-widget:hover',\r\n    ['background-color', 'input_icons_background', 'color', ':hover'],\r\n    '}',\r\n    '.bp3-icon_text-widget:active',\r\n    ['background-color', 'input_icons_background', 'color', '.active'],\r\n    '}',\r\n    '.bp3-icon_text-widget svg',\r\n    ['width', 'input_icons_size', 'slider'],\r\n    ['height', 'input_icons_size', 'slider'],\r\n    '}',\r\n    '.bp3-icon_text-widget svg,& .bp3-icon_text-widget path',\r\n    ['fill', 'input_icons_fill', 'color'],\r\n    ['stroke', 'input_icons_stroke', 'color'],\r\n    '}',\r\n    '.bp3-icon_text-widget:hover svg,& .bp3-icon_text-widget:hover path',\r\n    ['fill', 'input_icons_fill', 'color', ':hover'],\r\n    ['stroke', 'input_icons_stroke', 'color', ':hover'],\r\n    '}',\r\n    '.bp3-icon_text-widget:active svg,& .bp3-icon_text-widget:active path',\r\n    ['fill', 'input_icons_fill', 'color', '.active'],\r\n    ['stroke', 'input_icons_stroke', 'color', '.active'],\r\n    '}',\r\n    '.bp3-icon_text-widget img',\r\n    ['width', 'input_icons_size', 'slider'],\r\n    ['height', 'input_icons_size', 'slider'],\r\n    '}',\r\n  ];\r\n  return styledString(styles, settings)\r\n}\r\n","import {styledString} from \"../../helpers/styles\";\r\n\r\n/**\r\n *\r\n * @param {{}} settings\r\n * @param {string} elementId\r\n */\r\nexport default function getTemplateStyles(settings, elementId) {\r\n  let styles =[\r\n    '& > .altrp-posts > .altrp-post > .sections-wrapper',\r\n    ['width', 'width'],\r\n    '}'\r\n  ];\r\n\r\n  return styledString(styles, settings)\r\n}\r\n\r\n","import {getResponsiveSetting} from \"../../helpers\";\r\nimport { typographicControllerToStyles, colorPropertyStyled } from \"../../helpers/styles\";\r\n\r\nconst getBreadcrumbsStyles =(settings,id)=>{\r\n    const parentClass = `.altrp-element${id}`;\r\n\r\n  let styles = '';\r\n\r\n  styles = `${parentClass} .bp3-icon svg{\r\n    width:${getResponsiveSetting(settings, 'icon_width') || '20px'};\r\n    height:${getResponsiveSetting(settings, 'icon_height') || '20px'};`\r\n\r\n  const colorIcon = getResponsiveSetting(settings, 'icon_color');\r\n\r\n  if (colorIcon) {\r\n    styles += colorPropertyStyled(colorIcon, 'color');\r\n  }\r\n\r\n    styles += `} `;\r\n\r\n    styles += `${parentClass} .bp3-icon{`;\r\n    let icon_ml = getResponsiveSetting(settings, 'icon_ml');\r\n    if(icon_ml){\r\n      styles += `margin-left:${icon_ml};`;\r\n    }\r\n    let icon_mr = getResponsiveSetting(settings, 'icon_mr');\r\n    if(icon_mr){\r\n        styles += `margin-right:${icon_mr};`;\r\n    }\r\n    styles += `} `;\r\n\r\n    styles += `${parentClass} .altrp-menu-item__icon {display:flex;}`;\r\n    let height = getResponsiveSetting(settings, 'height');\r\n    if(height){\r\n        styles += `${parentClass} .bp3-breadcrumbs{height:${height};}`;\r\n    }\r\n    styles += `${parentClass} .bp3-breadcrumbs > li::after{`;\r\n    const delimiter = getResponsiveSetting(settings, 'delimiter');\r\n    if(delimiter && delimiter.url){\r\n        styles += `background:url(${delimiter.url}) no-repeat center;`\r\n        styles += `background-size:contain;`\r\n    }\r\n    const delimiter_width = getResponsiveSetting(settings, 'delimiter_width');\r\n    if(delimiter_width){\r\n        styles += `width:${delimiter_width};`\r\n    }\r\n    const delimiter_height = getResponsiveSetting(settings, 'delimiter_height');\r\n    if(delimiter_height){\r\n        styles += `height:${delimiter_height};`\r\n    }\r\n    const delimiter_ml = getResponsiveSetting(settings, 'delimiter_ml');\r\n    if(delimiter_ml){\r\n        styles += `margin-left:${delimiter_ml};`\r\n    }\r\n    const delimiter_mr = getResponsiveSetting(settings, 'delimiter_mr');\r\n    if(delimiter_mr){\r\n        styles += `margin-right:${delimiter_mr};`\r\n    }\r\n\r\n    styles += `} `;\r\n    styles += `${parentClass} .bp3-breadcrumb:not(.bp3-breadcrumb-current){`;\r\n\r\n    let color = getResponsiveSetting(settings, 'color');\r\n\r\n    if(color && color.color){\r\n        styles += `color:${color.color};`;\r\n        styles += `svg, path {fill: ${color.color};`;\r\n    }\r\n    let font = getResponsiveSetting(settings, 'font');\r\n    if(font){\r\n        styles += typographicControllerToStyles(font);\r\n    }\r\n    styles += `} `;\r\n\r\n    styles += `${parentClass} .bp3-breadcrumb:not(.bp3-breadcrumb-current):hover{`;\r\n\r\n    color = getResponsiveSetting(settings, 'color', ':hover');\r\n\r\n    if(color && color.color){\r\n        styles += `color:${color.color};`;\r\n        styles += `svg, path {fill: ${color.color};`;\r\n    }\r\n    font = getResponsiveSetting(settings, 'font', ':hover');\r\n\r\n    if(font){\r\n        styles += typographicControllerToStyles(font);\r\n    }\r\n    styles += `}`;\r\n\r\n  styles += `${parentClass} .bp3-breadcrumb.bp3-breadcrumb-current{`;\r\n\r\n    let current_color = getResponsiveSetting(settings, 'current_color');\r\n\r\n    if(current_color && current_color.color){\r\n        styles += `color:${current_color.color};`;\r\n        styles += `svg, path {fill: ${current_color.color};}`;\r\n    }\r\n\r\n    let current_font = getResponsiveSetting(settings, 'current_font');\r\n\r\n    if(current_font){\r\n        styles += typographicControllerToStyles(current_font);\r\n    }\r\n\r\n    styles += `} `;\r\n\r\n    return styles;\r\n}\r\n\r\nexport default getBreadcrumbsStyles;\r\n","import {\r\n  simplePropertyStyled,\r\n  borderWidthStyled,\r\n  colorPropertyStyled,\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  sizeStyled,\r\n  textShadowControllerToStyles,\r\n  opacityStyled,\r\n  gradientStyled,\r\n  backgroundImageControllerToStyles,\r\n  translateStyled\r\n} from \"../../helpers/styles\";\r\nimport { getResponsiveSetting } from \"../../helpers\";\r\n\r\n/**\r\n * Преобразует объект стилей, который задается в виджете Heading в строку css для вставки в GlobalStyles\r\n * @param {{}} settings\r\n * @param {string} id\r\n * @return {string}\r\n */\r\n\r\nexport function getHeadingTypeAnimatingStyles(settings, id) {\r\n  let styles = \"\";\r\n\r\n  if (settings === undefined) {\r\n    return styles;\r\n  }\r\n\r\n  const parentClass = `.altrp-element${id}`;\r\n\r\n  styles += `${parentClass} .altrp-heading-sub:hover {`;\r\n\r\n  const justifyContentHeaddingSubHover = getResponsiveSetting(\r\n    settings,\r\n    \"sub_heading_settings_alignment\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (justifyContentHeaddingSubHover) {\r\n    styles += simplePropertyStyled(\r\n      justifyContentHeaddingSubHover,\r\n      \"justify-content\"\r\n    );\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  //hover\r\n  styles += `${parentClass} .altrp-icon-header:hover {`;\r\n\r\n  const marginBottomForHorizontalHover = getResponsiveSetting(\r\n    settings,\r\n    \"horizontal_offset_advanced_heading_content\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginBottomForHorizontalHover) {\r\n    styles += sizeStyled(marginBottomForHorizontalHover, \"margin-bottom\");\r\n  }\r\n\r\n  const marginBottomForVerticalHover = getResponsiveSetting(\r\n    settings,\r\n    \"vertical_offset_advanced_heading_content\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginBottomForVerticalHover) {\r\n    styles += sizeStyled(marginBottomForVerticalHover, \"margin-bottom\");\r\n  }\r\n\r\n  const marginBottomForRotateHover = getResponsiveSetting(\r\n    settings,\r\n    \"rotate_offset_advanced_heading_content\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginBottomForRotateHover) {\r\n    styles += sizeStyled(marginBottomForRotateHover, \"margin-bottom\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading {`;\r\n\r\n  //fix display with <strong> and <b> tags\r\n  styles += \"display:block;\";\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-animating-text {`;\r\n\r\n  const typographicAnimating = getResponsiveSetting(\r\n    settings,\r\n    \"animated_text_headline_animating_style\"\r\n  );\r\n\r\n  if (typographicAnimating) {\r\n    styles += typographicControllerToStyles(typographicAnimating);\r\n  }\r\n\r\n  const colorAnimating = getResponsiveSetting(\r\n    settings,\r\n    \"animated_text_color_headline_animating_style\"\r\n  );\r\n\r\n  if (colorAnimating) {\r\n    styles += colorPropertyStyled(colorAnimating, \"color\");\r\n  }\r\n\r\n  styles += `} `;\r\n  //hover\r\n  styles += `${parentClass} .altrp-animating-text:hover {`;\r\n\r\n  const typographicAnimatingHover = getResponsiveSetting(\r\n    settings,\r\n    \"animated_text_headline_animating_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (typographicAnimatingHover) {\r\n    styles += typographicControllerToStyles(typographicAnimatingHover);\r\n  }\r\n\r\n  const colorAnimatingHover = getResponsiveSetting(\r\n    settings,\r\n    \"animated_text_color_headline_animating_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (colorAnimatingHover) {\r\n    styles += colorPropertyStyled(colorAnimatingHover, \"color\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-no-animating-text {`;\r\n\r\n  const typographicNoAnimating = getResponsiveSetting(\r\n    settings,\r\n    \"text_headline_animating_style\"\r\n  );\r\n\r\n  if (typographicNoAnimating) {\r\n    styles += typographicControllerToStyles(typographicNoAnimating);\r\n  }\r\n\r\n  const colorNoAnimating = getResponsiveSetting(\r\n    settings,\r\n    \"text_color_headline_animating_style\"\r\n  );\r\n\r\n  if (colorNoAnimating) {\r\n    styles += colorPropertyStyled(colorNoAnimating, \"color\");\r\n  }\r\n\r\n  styles += `} `;\r\n  //hover\r\n  styles += `${parentClass} .altrp-heading-no-animating-text:hover {`;\r\n\r\n  const typographicNoAnimatingHover = getResponsiveSetting(\r\n    settings,\r\n    \"text_headline_animating_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (typographicNoAnimatingHover) {\r\n    styles += typographicControllerToStyles(typographicNoAnimatingHover);\r\n  }\r\n\r\n  const colorNoAnimatingHover = getResponsiveSetting(\r\n    settings,\r\n    \"text_color_headline_animating_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (colorNoAnimatingHover) {\r\n    styles += colorPropertyStyled(colorNoAnimatingHover, \"color\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-animating-highlighted-svg svg path {`;\r\n\r\n  const strokeWidthAnimatingSvg = getResponsiveSetting(\r\n    settings,\r\n    \"width_shape_animating\"\r\n  );\r\n\r\n  if (strokeWidthAnimatingSvg) {\r\n    styles += sizeStyled(strokeWidthAnimatingSvg, \"stroke-width\");\r\n  }\r\n\r\n  const colorAnimatingSvg = getResponsiveSetting(\r\n    settings,\r\n    \"color_shape_animating\"\r\n  );\r\n\r\n  if (colorAnimatingSvg) {\r\n    styles += colorPropertyStyled(colorAnimatingSvg, \"stroke\");\r\n  }\r\n\r\n  styles += `} `;\r\n  //hover\r\n  styles += `${parentClass} .altrp-animating-highlighted-svg:hover svg path {`;\r\n\r\n  const strokeWidthAnimatingSvgHover = getResponsiveSetting(\r\n    settings,\r\n    \"width_shape_animating\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (strokeWidthAnimatingSvgHover) {\r\n    styles += sizeStyled(strokeWidthAnimatingSvgHover, \"stroke-width\");\r\n  }\r\n\r\n  const colorAnimatingSvgHover = getResponsiveSetting(\r\n    settings,\r\n    \"color_shape_animating\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (colorAnimatingSvgHover) {\r\n    styles += colorPropertyStyled(colorAnimatingSvgHover, \"stroke\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  return styles;\r\n}\r\n","import {\r\n  simplePropertyStyled,\r\n  borderWidthStyled,\r\n  colorPropertyStyled,\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  sizeStyled,\r\n  textShadowControllerToStyles,\r\n  opacityStyled,\r\n  gradientStyled,\r\n  backgroundImageControllerToStyles,\r\n  translateStyled\r\n} from \"../../helpers/styles\";\r\nimport { getResponsiveSetting } from \"../../helpers\";\r\n\r\n/**\r\n * Преобразует объект стилей, который задается в виджете Heading в строку css для вставки в GlobalStyles\r\n * @param {{}} settings\r\n * @param {string} id\r\n * @return {string}\r\n */\r\n\r\nexport function getHeadingTypeHeadingStyles(settings, id) {\r\n  let styles = \"\";\r\n\r\n  if (settings === undefined) {\r\n    return styles;\r\n  }\r\n\r\n  const parentClass = `.altrp-element${id}`;\r\n\r\n  styles += `${parentClass} .altrp-heading-wrapper {`;\r\n\r\n  const justifyContent = getResponsiveSetting(\r\n    settings,\r\n    \"heading_settings_alignment\"\r\n  );\r\n  if (justifyContent) {\r\n\r\n    styles += simplePropertyStyled(justifyContent, \"justify-content\");\r\n    switch (justifyContent){\r\n      case 'stretch':{\r\n        styles += `& .altrp-heading{text-align:justify}`\r\n      }break\r\n      case 'center':{\r\n        styles += `& .altrp-heading{text-align:center}`\r\n      }break\r\n      case 'flex-start':{\r\n        styles += `& .altrp-heading{text-align:left}`\r\n      }break\r\n      case 'flex-end':{\r\n        styles += `& .altrp-heading{text-align:right}`\r\n      }break\r\n    }\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-sub {`;\r\n\r\n  const justifyContentHeaddingSub = getResponsiveSetting(\r\n    settings,\r\n    \"sub_heading_settings_alignment\"\r\n  );\r\n\r\n  if (justifyContentHeaddingSub) {\r\n    styles += simplePropertyStyled(\r\n      justifyContentHeaddingSub,\r\n      \"justify-content\"\r\n    );\r\n  }\r\n\r\n  const textShadowHeaddingSub = getResponsiveSetting(\r\n    settings,\r\n    \"text_shadow_sub_heading\"\r\n  );\r\n\r\n  if (textShadowHeaddingSub) {\r\n    styles += textShadowControllerToStyles(textShadowHeaddingSub);\r\n  }\r\n\r\n  const typographicHeaddingSub = getResponsiveSetting(\r\n    settings,\r\n    \"typographic_sub_heading\"\r\n  );\r\n\r\n  if (typographicHeaddingSub) {\r\n    styles += typographicControllerToStyles(typographicHeaddingSub);\r\n  }\r\n\r\n  const paddingHeaddingSub = getResponsiveSetting(\r\n    settings,\r\n    \"padding_sub_heading\"\r\n  );\r\n\r\n  if (paddingHeaddingSub) {\r\n    styles += dimensionsControllerToStyles(paddingHeaddingSub);\r\n  }\r\n\r\n  const colorHeaddingSub = getResponsiveSetting(settings, \"color_sub_heading\");\r\n\r\n  if (colorHeaddingSub) {\r\n    styles += colorPropertyStyled(colorHeaddingSub, \"color\");\r\n  }\r\n\r\n  const backgroundColorHeaddingSub = getResponsiveSetting(\r\n    settings,\r\n    \"bg_sub_heading\"\r\n  );\r\n\r\n  if (backgroundColorHeaddingSub) {\r\n    styles += colorPropertyStyled(\r\n      backgroundColorHeaddingSub,\r\n      \"background-color\"\r\n    );\r\n  }\r\n\r\n  const widthHeadingSub = getResponsiveSetting(settings, \"width_sub_heading\");\r\n\r\n  if (widthHeadingSub) {\r\n    styles += sizeStyled(widthHeadingSub, \"width\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-sub:hover {`;\r\n\r\n  const justifyContentHeaddingSubHover = getResponsiveSetting(\r\n    settings,\r\n    \"sub_heading_settings_alignment\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (justifyContentHeaddingSubHover) {\r\n    styles += simplePropertyStyled(\r\n      justifyContentHeaddingSubHover,\r\n      \"justify-content\"\r\n    );\r\n  }\r\n\r\n  const textShadowHeaddingSubHover = getResponsiveSetting(\r\n    settings,\r\n    \"text_shadow_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (textShadowHeaddingSubHover) {\r\n    styles += textShadowControllerToStyles(textShadowHeaddingSubHover);\r\n  }\r\n\r\n  const typographicHeaddingSubHover = getResponsiveSetting(\r\n    settings,\r\n    \"typographic_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (typographicHeaddingSubHover) {\r\n    styles += typographicControllerToStyles(typographicHeaddingSubHover);\r\n  }\r\n\r\n  const paddingHeaddingSubHover = getResponsiveSetting(\r\n    settings,\r\n    \"padding_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (paddingHeaddingSubHover) {\r\n    styles += dimensionsControllerToStyles(paddingHeaddingSubHover);\r\n  }\r\n\r\n  const colorHeaddingSubHover = getResponsiveSetting(\r\n    settings,\r\n    \"color_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (colorHeaddingSubHover) {\r\n    styles += colorPropertyStyled(colorHeaddingSubHover, \"color\");\r\n  }\r\n\r\n  const backgroundColorHeaddingSubHover = getResponsiveSetting(\r\n    settings,\r\n    \"bg_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (backgroundColorHeaddingSubHover) {\r\n    styles += colorPropertyStyled(\r\n      backgroundColorHeaddingSubHover,\r\n      \"background-color\"\r\n    );\r\n  }\r\n\r\n  const widthHeadingSubHover = getResponsiveSetting(\r\n    settings,\r\n    \"width_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (widthHeadingSubHover) {\r\n    styles += sizeStyled(widthHeadingSubHover, \"width\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-wrapper-sub-bottom .altrp-heading-sub {`;\r\n\r\n  const marginTop = getResponsiveSetting(settings, \"spacing_sub_heading\");\r\n\r\n  if (marginTop) {\r\n    styles += sizeStyled(marginTop, \"margin-top\");\r\n  }\r\n\r\n  styles += `} `;\r\n  //hover\r\n  styles += `${parentClass} .altrp-heading-wrapper-sub-bottom .altrp-heading-sub:hover {`;\r\n\r\n  const marginTopHover = getResponsiveSetting(\r\n    settings,\r\n    \"spacing_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginTopHover) {\r\n    styles += sizeStyled(marginTopHover, \"margin-top\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-wrapper-sub-top .altrp-heading-sub {`;\r\n\r\n  const marginBottom = getResponsiveSetting(settings, \"spacing_sub_heading\");\r\n\r\n  if (marginBottom) {\r\n    styles += sizeStyled(marginBottom, \"margin-bottom\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-wrapper-sub-top .altrp-heading-sub:hover {`;\r\n\r\n  const marginBottomHover = getResponsiveSetting(\r\n    settings,\r\n    \"spacing_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginBottomHover) {\r\n    styles += sizeStyled(marginBottomHover, \"margin-bottom\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-wrapper-sub-left .altrp-heading-sub {`;\r\n\r\n  const marginRight = getResponsiveSetting(settings, \"spacing_sub_heading\");\r\n\r\n  if (marginRight) {\r\n    styles += sizeStyled(marginRight, \"margin-right\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-wrapper-sub-left .altrp-heading-sub:hover {`;\r\n\r\n  const marginRightHover = getResponsiveSetting(\r\n    settings,\r\n    \"spacing_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginRightHover) {\r\n    styles += sizeStyled(marginRightHover, \"margin-right\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-wrapper-sub-right .altrp-heading-sub {`;\r\n\r\n  const marginLeft = getResponsiveSetting(settings, \"spacing_sub_heading\");\r\n\r\n  if (marginLeft) {\r\n    styles += sizeStyled(marginLeft, \"margin-left\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-wrapper-sub-right .altrp-heading-sub:hover {`;\r\n\r\n  const marginLeftHover = getResponsiveSetting(\r\n    settings,\r\n    \"spacing_sub_heading\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginLeftHover) {\r\n    styles += sizeStyled(marginLeftHover, \"margin-left\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-advanced-wrapper {`;\r\n\r\n  const textAlignAdvancedWrapper = getResponsiveSetting(\r\n    settings,\r\n    \"alignment_advanced_heading_content\"\r\n  );\r\n\r\n  if (textAlignAdvancedWrapper) {\r\n    styles += simplePropertyStyled(textAlignAdvancedWrapper, \"text-align\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading-advanced {`;\r\n\r\n  const backgroundColorHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"background_color_advanced_heading_style\"\r\n  );\r\n\r\n  if (backgroundColorHeadingAdvanced) {\r\n    styles += colorPropertyStyled(\r\n      backgroundColorHeadingAdvanced,\r\n      \"background-color\"\r\n    );\r\n  }\r\n\r\n  const colorHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"color_advanced_heading_style\"\r\n  );\r\n\r\n  if (colorHeadingAdvanced) {\r\n    styles += colorPropertyStyled(colorHeadingAdvanced, \"color\");\r\n  }\r\n\r\n  const paddingHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"padding_advanced_heading_style\"\r\n  );\r\n\r\n  if (paddingHeadingAdvanced) {\r\n    styles += dimensionsControllerToStyles(paddingHeadingAdvanced);\r\n  }\r\n\r\n  const typographicHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"typography_advanced_heading_style\"\r\n  );\r\n\r\n  if (typographicHeadingAdvanced) {\r\n    styles += typographicControllerToStyles(typographicHeadingAdvanced);\r\n  }\r\n\r\n  const textShadowHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"text_shadow_advanced_heading_style\"\r\n  );\r\n\r\n  if (textShadowHeadingAdvanced) {\r\n    styles += textShadowControllerToStyles(textShadowHeadingAdvanced);\r\n  }\r\n\r\n  const borderTypeHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"border_type_advanced_heading_style\"\r\n  );\r\n\r\n  if (borderTypeHeadingAdvanced) {\r\n    styles += simplePropertyStyled(borderTypeHeadingAdvanced, \"border-style\");\r\n  }\r\n\r\n  const borderWidthHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"border_width_advanced_heading_style\"\r\n  );\r\n\r\n  if (borderWidthHeadingAdvanced) {\r\n    styles += borderWidthStyled(borderWidthHeadingAdvanced);\r\n  }\r\n\r\n  const borderColorHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"border_color_advanced_heading_style\"\r\n  );\r\n\r\n  if (borderColorHeadingAdvanced) {\r\n    styles += colorPropertyStyled(borderColorHeadingAdvanced, \"border-color\");\r\n  }\r\n\r\n  const borderRadiusHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"border_radius_advanced_heading_style\"\r\n  );\r\n\r\n  if (borderRadiusHeadingAdvanced) {\r\n    styles += dimensionsControllerToStyles(\r\n      borderRadiusHeadingAdvanced,\r\n      \"border-radius\"\r\n    );\r\n  }\r\n\r\n  const opacityHeadingAdvanced = getResponsiveSetting(\r\n    settings,\r\n    \"opacity_advanced_heading_style\"\r\n  );\r\n\r\n  if (opacityHeadingAdvanced) {\r\n    styles += opacityStyled(opacityHeadingAdvanced);\r\n  }\r\n\r\n  styles += `} `;\r\n  //hover\r\n  styles += `${parentClass} .altrp-heading-advanced:hover {`;\r\n\r\n  const backgroundColorHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"background_color_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (backgroundColorHeadingAdvancedHover) {\r\n    styles += colorPropertyStyled(\r\n      backgroundColorHeadingAdvancedHover,\r\n      \"background-color\"\r\n    );\r\n  }\r\n\r\n  const colorHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"color_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (colorHeadingAdvancedHover) {\r\n    styles += colorPropertyStyled(colorHeadingAdvancedHover, \"color\");\r\n  }\r\n\r\n  const paddingHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"padding_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (paddingHeadingAdvancedHover) {\r\n    styles += dimensionsControllerToStyles(paddingHeadingAdvancedHover);\r\n  }\r\n\r\n  const typographicHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"typography_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (typographicHeadingAdvancedHover) {\r\n    styles += typographicControllerToStyles(typographicHeadingAdvancedHover);\r\n  }\r\n\r\n  const textShadowHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"text_shadow_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (textShadowHeadingAdvancedHover) {\r\n    styles += textShadowControllerToStyles(textShadowHeadingAdvancedHover);\r\n  }\r\n\r\n  const borderTypeHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"border_type_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (borderTypeHeadingAdvancedHover) {\r\n    styles += simplePropertyStyled(\r\n      borderTypeHeadingAdvancedHover,\r\n      \"border-style\"\r\n    );\r\n  }\r\n\r\n  const borderWidthHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"border_width_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (borderWidthHeadingAdvancedHover) {\r\n    styles += borderWidthStyled(borderWidthHeadingAdvancedHover);\r\n  }\r\n\r\n  const borderColorHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"border_color_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (borderColorHeadingAdvancedHover) {\r\n    styles += colorPropertyStyled(\r\n      borderColorHeadingAdvancedHover,\r\n      \"border-color\"\r\n    );\r\n  }\r\n\r\n  const borderRadiusHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"border_radius_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (borderRadiusHeadingAdvancedHover) {\r\n    styles += dimensionsControllerToStyles(\r\n      borderRadiusHeadingAdvancedHover,\r\n      \"border-radius\"\r\n    );\r\n  }\r\n\r\n  const opacityHeadingAdvancedHover = getResponsiveSetting(\r\n    settings,\r\n    \"opacity_advanced_heading_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (opacityHeadingAdvancedHover) {\r\n    styles += opacityStyled(opacityHeadingAdvancedHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-icon-header {`;\r\n\r\n  const marginBottomForHorizontal = getResponsiveSetting(\r\n    settings,\r\n    \"horizontal_offset_advanced_heading_content\"\r\n  );\r\n\r\n  if (marginBottomForHorizontal) {\r\n    styles += sizeStyled(marginBottomForHorizontal, \"margin-bottom\");\r\n  }\r\n\r\n  const marginBottomForVertical = getResponsiveSetting(\r\n    settings,\r\n    \"vertical_offset_advanced_heading_content\"\r\n  );\r\n\r\n  if (marginBottomForVertical) {\r\n    styles += sizeStyled(marginBottomForVertical, \"margin-bottom\");\r\n  }\r\n\r\n  const marginBottomForRotate = getResponsiveSetting(\r\n    settings,\r\n    \"rotate_offset_advanced_heading_content\"\r\n  );\r\n\r\n  if (marginBottomForRotate) {\r\n    styles += sizeStyled(marginBottomForRotate, \"margin-bottom\");\r\n  }\r\n\r\n  styles += `} `;\r\n  //hover\r\n  styles += `${parentClass} .altrp-icon-header:hover {`;\r\n\r\n  const marginBottomForHorizontalHover = getResponsiveSetting(\r\n    settings,\r\n    \"horizontal_offset_advanced_heading_content\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginBottomForHorizontalHover) {\r\n    styles += sizeStyled(marginBottomForHorizontalHover, \"margin-bottom\");\r\n  }\r\n\r\n  const marginBottomForVerticalHover = getResponsiveSetting(\r\n    settings,\r\n    \"vertical_offset_advanced_heading_content\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginBottomForVerticalHover) {\r\n    styles += sizeStyled(marginBottomForVerticalHover, \"margin-bottom\");\r\n  }\r\n\r\n  const marginBottomForRotateHover = getResponsiveSetting(\r\n    settings,\r\n    \"rotate_offset_advanced_heading_content\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginBottomForRotateHover) {\r\n    styles += sizeStyled(marginBottomForRotateHover, \"margin-bottom\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading, ${parentClass} .altrp-heading a {`;\r\n\r\n  const color = getResponsiveSetting(settings, \"heading_style_color\");\r\n\r\n  if (color) {\r\n    styles += colorPropertyStyled(color, \"color\");\r\n  }\r\n\r\n  const typographic = getResponsiveSetting(\r\n    settings,\r\n    \"heading_style_typographic\"\r\n  );\r\n\r\n  if (typographic) {\r\n    styles += typographicControllerToStyles(typographic);\r\n  }\r\n\r\n  const textShadow = getResponsiveSetting(\r\n    settings,\r\n    \"heading_style_text_shadow\"\r\n  );\r\n\r\n  if (textShadow) {\r\n    styles += textShadowControllerToStyles(textShadow);\r\n  }\r\n\r\n  const margin = getResponsiveSetting(settings, \"style_position_margin\");\r\n\r\n  if (margin) {\r\n    styles += dimensionsControllerToStyles(margin, \"margin\");\r\n  }\r\n\r\n  const padding = getResponsiveSetting(settings, \"style_position_padding\");\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  const zIndex = getResponsiveSetting(settings, \"position_z_index\");\r\n\r\n  if (zIndex) {\r\n    styles += simplePropertyStyled(zIndex, \"z-index\");\r\n  }\r\n\r\n  const backgroundColor = getResponsiveSetting(\r\n    settings,\r\n    \"style_background_color\"\r\n  );\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, \"background-color\");\r\n  }\r\n\r\n  const opacity = getResponsiveSetting(settings, \"style_background_opacity\");\r\n\r\n  if (opacity) {\r\n    styles += opacityStyled(opacity);\r\n  }\r\n\r\n  const gradient = getResponsiveSetting(settings, \"gradient\");\r\n\r\n  if (gradient) {\r\n    styles += gradientStyled(gradient);\r\n  }\r\n\r\n  const transform = getResponsiveSetting(settings, \"transform_style\");\r\n\r\n  if (transform) {\r\n    styles += translateStyled(transform);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading, ${parentClass} .altrp-heading a:hover {`;\r\n\r\n  const colorLinkHover = getResponsiveSetting(settings, \"heading_style_color\", \":hover\");\r\n\r\n  if (colorLinkHover) {\r\n    styles += colorPropertyStyled(colorLinkHover, \"color\");\r\n    styles += \"text-decoration: none; \";\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading {`;\r\n\r\n  const borderType = getResponsiveSetting(settings, \"style_border_type\");\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, \"border-style\");\r\n  }\r\n\r\n  const borderWidth = getResponsiveSetting(settings, \"style_border_width\");\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  const borderColor = getResponsiveSetting(settings, \"style_border_color\");\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, \"border-color\");\r\n  }\r\n\r\n  const borderRadius = getResponsiveSetting(settings, \"style_border_radius\");\r\n\r\n  if (borderRadius) {\r\n    styles += sizeStyled(borderRadius, \"border-radius\");\r\n  }\r\n  //fix display with <strong> and <b> tags\r\n  styles += \"display:block;\";\r\n  styles += `} `;\r\n  //hover\r\n  styles += `${parentClass} .altrp-heading:hover {`;\r\n\r\n  const colorHover = getResponsiveSetting(\r\n    settings,\r\n    \"heading_style_color\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (colorHover) {\r\n    styles += colorPropertyStyled(colorHover, \"color\");\r\n  }\r\n\r\n  const typographicHover = getResponsiveSetting(\r\n    settings,\r\n    \"heading_style_typographic\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (typographicHover) {\r\n    styles += typographicControllerToStyles(typographicHover);\r\n  }\r\n\r\n  const textShadowHover = getResponsiveSetting(\r\n    settings,\r\n    \"heading_style_text_shadow\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (textShadowHover) {\r\n    styles += textShadowControllerToStyles(textShadowHover);\r\n  }\r\n\r\n  const marginHover = getResponsiveSetting(\r\n    settings,\r\n    \"style_position_margin\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (marginHover) {\r\n    styles += dimensionsControllerToStyles(marginHover, \"margin\");\r\n  }\r\n\r\n  const paddingHover = getResponsiveSetting(\r\n    settings,\r\n    \"style_position_padding\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (paddingHover) {\r\n    styles += dimensionsControllerToStyles(paddingHover);\r\n  }\r\n\r\n  const zIndexHover = getResponsiveSetting(\r\n    settings,\r\n    \"position_z_index\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (zIndexHover) {\r\n    styles += simplePropertyStyled(zIndexHover, \"z-index\");\r\n  }\r\n\r\n  const backgroundColorHover = getResponsiveSetting(\r\n    settings,\r\n    \"style_background_color\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (backgroundColorHover) {\r\n    styles += colorPropertyStyled(backgroundColorHover, \"background-color\");\r\n  }\r\n\r\n  const opacityHover = getResponsiveSetting(\r\n    settings,\r\n    \"style_background_opacity\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (opacityHover) {\r\n    styles += opacityStyled(opacityHover);\r\n  }\r\n\r\n  const gradientHover = getResponsiveSetting(settings, \"gradient\", \":hover\");\r\n\r\n  if (gradientHover) {\r\n    styles += gradientStyled(gradientHover);\r\n  }\r\n\r\n  const borderTypeHover = getResponsiveSetting(\r\n    settings,\r\n    \"style_border_type\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (borderTypeHover) {\r\n    styles += simplePropertyStyled(borderTypeHover, \"border-style\");\r\n  }\r\n\r\n  const borderWidthHover = getResponsiveSetting(\r\n    settings,\r\n    \"style_border_width\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (borderWidthHover) {\r\n    styles += borderWidthStyled(borderWidthHover);\r\n  }\r\n\r\n  const borderColorHover = getResponsiveSetting(\r\n    settings,\r\n    \"style_border_color\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (borderColorHover) {\r\n    styles += colorPropertyStyled(borderColorHover, \"border-color\");\r\n  }\r\n\r\n  const borderRadiusHover = getResponsiveSetting(\r\n    settings,\r\n    \"style_border_radius\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (borderRadiusHover) {\r\n    styles += sizeStyled(borderRadiusHover, \"border-radius\");\r\n  }\r\n\r\n  const transformHover = getResponsiveSetting(\r\n    settings,\r\n    \"transform_style\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (transformHover) {\r\n    styles += translateStyled(transformHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading.altrp-background-image {`;\r\n\r\n  const backgroundImage = getResponsiveSetting(settings, \"background_image\");\r\n\r\n  if (backgroundImage) {\r\n    styles += backgroundImageControllerToStyles(backgroundImage);\r\n  }\r\n\r\n  const backgroundPosition = getResponsiveSetting(\r\n    settings,\r\n    \"background_position\"\r\n  );\r\n\r\n  if (backgroundPosition) {\r\n    styles += simplePropertyStyled(backgroundPosition, \"background-position\");\r\n  }\r\n\r\n  const backgroundAttachment = getResponsiveSetting(\r\n    settings,\r\n    \"background_attachment\"\r\n  );\r\n\r\n  if (backgroundAttachment) {\r\n    styles += simplePropertyStyled(\r\n      backgroundAttachment,\r\n      \"background-attachment\"\r\n    );\r\n  }\r\n\r\n  const backgroundRepeat = getResponsiveSetting(settings, \"background_repeat\");\r\n\r\n  if (backgroundRepeat) {\r\n    styles += simplePropertyStyled(backgroundRepeat, \"background-repeat\");\r\n  }\r\n\r\n  const backgroundSizeInUnits = getResponsiveSetting(\r\n    settings,\r\n    \"background_image_width\"\r\n  );\r\n\r\n  if (backgroundSizeInUnits) {\r\n    styles += sizeStyled(backgroundSizeInUnits, \"background-size\");\r\n  }\r\n\r\n  const backgroundSize = getResponsiveSetting(settings, \"background_size\");\r\n\r\n  if (backgroundSize) {\r\n    styles += simplePropertyStyled(backgroundSize, \"background-size\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-heading.altrp-background-image:hover {`;\r\n\r\n  const backgroundImageHover = getResponsiveSetting(\r\n    settings,\r\n    \"background_image\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (backgroundImageHover) {\r\n    styles += backgroundImageControllerToStyles(backgroundImageHover);\r\n  }\r\n\r\n  const backgroundPositionHover = getResponsiveSetting(\r\n    settings,\r\n    \"background_position\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (backgroundPositionHover) {\r\n    styles += simplePropertyStyled(\r\n      backgroundPositionHover,\r\n      \"background-position\"\r\n    );\r\n  }\r\n\r\n  const backgroundAttachmentHover = getResponsiveSetting(\r\n    settings,\r\n    \"background_attachment\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (backgroundAttachmentHover) {\r\n    styles += simplePropertyStyled(\r\n      backgroundAttachmentHover,\r\n      \"background-attachment\"\r\n    );\r\n  }\r\n\r\n  const backgroundRepeatHover = getResponsiveSetting(\r\n    settings,\r\n    \"background_repeat\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (backgroundRepeatHover) {\r\n    styles += simplePropertyStyled(backgroundRepeatHover, \"background-repeat\");\r\n  }\r\n\r\n  const backgroundSizeInUnitsHover = getResponsiveSetting(\r\n    settings,\r\n    \"background_image_width\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (backgroundSizeInUnitsHover) {\r\n    styles += sizeStyled(backgroundSizeInUnitsHover, \"background-size\");\r\n  }\r\n\r\n  const backgroundSizeHover = getResponsiveSetting(\r\n    settings,\r\n    \"background_size\",\r\n    \":hover\"\r\n  );\r\n\r\n  if (backgroundSizeHover) {\r\n    styles += simplePropertyStyled(backgroundSizeHover, \"background-size\");\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  return styles;\r\n}\r\n","import { getResponsiveSetting } from '../../helpers';\r\nimport {\r\n    dimensionsControllerToStyles,\r\n    gradientStyled,\r\n    filtersControllerToStyles,\r\n    simplePropertyStyled,\r\n    colorPropertyStyled,\r\n    sizeStyled,\r\n    opacityStyled,\r\n    borderWidthStyled,\r\n    backgroundImageControllerToStyles,\r\n  } from \"../../helpers/styles\";\r\n\r\n\r\nconst getImageStyles = (settings,id)=>{\r\n    let styles = '';\r\n\r\n    let objectFit, height, width, margin, padding, zIndex, opacity, borderType, filters;\r\n    let borderWidth, borderColor, borderRadius, transitionDuration, animationDuration, backgroundColor, backgroundColorHover, gradient;\r\n    let justifyContent;\r\n    let backgroundImage, backgroundPosition, backgroundAttachment, backgroundRepeat,backgroundSizeInUnit, backgroundSize;\r\n\r\n    const parentClass = `.altrp-element${id}`;\r\n\r\n    styles += `${parentClass} .altrp-image {`;\r\n\r\n     //Получаем значения object-fit из контроллера, обрабатываем и добавляем в styles\r\n\r\n     if (settings !== undefined) {\r\n        objectFit = getResponsiveSetting(settings, 'image_fit_size');\r\n      }\r\n\r\n      if (objectFit) {\r\n        styles += simplePropertyStyled(objectFit, 'object-fit');\r\n      }\r\n\r\n      //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundColor = getResponsiveSetting(settings, 'background_color');\r\n      }\r\n\r\n      if (backgroundColor) {\r\n        styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n      }\r\n\r\n      //Получаем значения gradient из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        gradient = getResponsiveSetting(settings, 'gradient');\r\n      }\r\n\r\n      if (gradient) {\r\n        styles += gradientStyled(gradient);\r\n      }\r\n\r\n      //Получаем значения filters из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        filters = getResponsiveSetting(settings, 'image_style_text_shadow');\r\n      }\r\n\r\n      if (filters) {\r\n        styles += filtersControllerToStyles(filters);\r\n      }\r\n\r\n      //Получаем значения height из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        height = getResponsiveSetting(settings, 'height_size');\r\n      }\r\n\r\n      if (height) {\r\n        if(height.size !== \"0\") {\r\n          styles += sizeStyled(height, 'height');\r\n        } else {\r\n\r\n        }\r\n      }\r\n\r\n      //Получаем значения margin из контроллера, обрабатываем и добавляем в styles\r\n      //Свойство margin было убрано из Контроллера у виджета Image. Перенес сюда на всякий случай, так как были активные rules в Image.js\r\n\r\n      if (settings !== undefined) {\r\n        margin = getResponsiveSetting(settings, 'position_margin');\r\n      }\r\n\r\n      if (margin) {\r\n        styles += dimensionsControllerToStyles(margin, 'margin');\r\n      }\r\n\r\n      //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        padding = getResponsiveSetting(settings, 'position_padding');\r\n      }\r\n\r\n      if (padding) {\r\n        styles += dimensionsControllerToStyles(padding);\r\n      }\r\n\r\n      //Получаем значения z-index из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        zIndex = getResponsiveSetting(settings, 'position_z_index');\r\n      }\r\n\r\n      if (zIndex) {\r\n        styles += simplePropertyStyled(zIndex, 'z-index');\r\n      }\r\n\r\n      //Получаем значения opacity из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        opacity = getResponsiveSetting(settings, 'opacity_overlay');\r\n      }\r\n\r\n      if (opacity) {\r\n        styles += opacityStyled(opacity);\r\n      }\r\n\r\n      //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        borderType = getResponsiveSetting(settings, 'border_type');\r\n      }\r\n\r\n      if (borderType) {\r\n        styles += simplePropertyStyled(borderType, 'border-style');\r\n      }\r\n\r\n      //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        borderWidth = getResponsiveSetting(settings, 'border_width');\r\n      }\r\n\r\n      if (borderWidth) {\r\n        styles += borderWidthStyled(borderWidth);\r\n      }\r\n\r\n      //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        borderColor = getResponsiveSetting(settings, 'border_color');\r\n      }\r\n\r\n      if (borderColor) {\r\n        styles += colorPropertyStyled(borderColor, 'border-color');\r\n      }\r\n\r\n      //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        borderRadius = getResponsiveSetting(settings, 'border_radius');\r\n      }\r\n\r\n      if (borderRadius) {\r\n        styles += sizeStyled(borderRadius, 'border-radius');\r\n      }\r\n\r\n      //Получаем значения transition-duration в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        transitionDuration = getResponsiveSetting(settings, 'creative_hover_controller');\r\n      }\r\n\r\n      if (transitionDuration) {\r\n        styles += sizeStyled(transitionDuration, 'transition-duration');\r\n      }\r\n\r\n      //Получаем значения animation-duration в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        animationDuration = getResponsiveSetting(settings, 'creative_hover_controller');\r\n      }\r\n\r\n      if (animationDuration) {\r\n        styles += sizeStyled(animationDuration, 'animation-duration');\r\n      }\r\n\r\n      styles += `} `;\r\n\r\n      styles += `${parentClass} .altrp-image:hover {`;\r\n\r\n      //Получаем значения object-fit из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        objectFit = getResponsiveSetting(settings, 'image_fit_size', ':hover');\r\n      }\r\n\r\n      if (objectFit) {\r\n        styles += simplePropertyStyled(objectFit, 'object-fit');\r\n      }\r\n\r\n      //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundColor = getResponsiveSetting(settings, 'background_color', ':hover');\r\n      }\r\n\r\n      if (backgroundColor) {\r\n        styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n      }\r\n\r\n      //Получаем значения gradient из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        gradient = getResponsiveSetting(settings, 'gradient', ':hover');\r\n      }\r\n\r\n      if (gradient) {\r\n        styles += gradientStyled(gradient);\r\n      }\r\n\r\n      //Получаем значения filters из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        filters = getResponsiveSetting(settings, 'image_style_text_shadow', ':hover');\r\n      }\r\n\r\n      if (filters) {\r\n        styles += filtersControllerToStyles(filters);\r\n      }\r\n\r\n      //Получаем значения height из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        height = getResponsiveSetting(settings, 'height_size', ':hover');\r\n      }\r\n\r\n      if (height) {\r\n        if(height.size !== \"0\") {\r\n          styles += sizeStyled(height, 'height');\r\n        }\r\n      }\r\n\r\n      //Получаем значения margin из контроллера, обрабатываем и добавляем в styles\r\n      //Свойство margin было убрано из Контроллера у виджета Image. Перенес сюда на всякий случай, так как были активные rules в Image.js\r\n\r\n      if (settings !== undefined) {\r\n        margin = getResponsiveSetting(settings, 'position_margin', ':hover');\r\n      }\r\n\r\n      if (margin) {\r\n        styles += dimensionsControllerToStyles(margin, 'margin');\r\n      }\r\n\r\n      //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        padding = getResponsiveSetting(settings, 'position_padding', ':hover');\r\n      }\r\n\r\n      if (padding) {\r\n        styles += dimensionsControllerToStyles(padding);\r\n      }\r\n\r\n      //Получаем значения z-index из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        zIndex = getResponsiveSetting(settings, 'position_z_index', ':hover');\r\n      }\r\n\r\n      if (zIndex) {\r\n        styles += simplePropertyStyled(zIndex, 'z-index');\r\n      }\r\n\r\n      //Получаем значения opacity из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        opacity = getResponsiveSetting(settings, 'opacity_overlay', ':hover');\r\n      }\r\n\r\n      if (opacity) {\r\n        styles += opacityStyled(opacity);\r\n      }\r\n\r\n      //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        borderType = getResponsiveSetting(settings, 'border_type', ':hover');\r\n      }\r\n\r\n      if (borderType) {\r\n        styles += simplePropertyStyled(borderType, 'border-style');\r\n      }\r\n\r\n      //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        borderWidth = getResponsiveSetting(settings, 'border_width', ':hover');\r\n      }\r\n\r\n      if (borderWidth) {\r\n        styles += borderWidthStyled(borderWidth);\r\n      }\r\n\r\n      //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        borderColor = getResponsiveSetting(settings, 'border_color', ':hover');\r\n      }\r\n\r\n      if (borderColor) {\r\n        styles += colorPropertyStyled(borderColor, 'border-color');\r\n      }\r\n\r\n      //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        borderRadius = getResponsiveSetting(settings, 'border_radius', ':hover');\r\n      }\r\n\r\n      if (borderRadius) {\r\n        styles += sizeStyled(borderRadius, 'border-radius');\r\n      }\r\n\r\n      //Получаем значения transition-duration в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        transitionDuration = getResponsiveSetting(settings, 'creative_hover_controller', ':hover');\r\n      }\r\n\r\n      if (transitionDuration) {\r\n        styles += sizeStyled(transitionDuration, 'transition-duration');\r\n      }\r\n\r\n      //Получаем значения animation-duration в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        animationDuration = getResponsiveSetting(settings, 'creative_hover_controller', ':hover');\r\n      }\r\n\r\n      if (animationDuration) {\r\n        styles += sizeStyled(animationDuration, 'animation-duration');\r\n      }\r\n\r\n      styles+=\"} \";\r\n\r\n      styles+=`${parentClass} .altrp-image-container,${parentClass} .altrp-image-container a {`;\r\n\r\n      //Получаем значения justify-content из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        justifyContent = getResponsiveSetting(settings, 'image_style_alignment');\r\n      }\r\n\r\n      if (justifyContent) {\r\n        styles += 'display:flex;'\r\n        styles += simplePropertyStyled(justifyContent, 'justify-content');\r\n      }\r\n\r\n      styles+=\"} \";\r\n\r\n\r\n      styles+=`${parentClass} .altrp-background-image {`;\r\n\r\n      //Получаем значения background-image из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundImage = getResponsiveSetting(settings, 'background_image');\r\n      }\r\n\r\n      if (backgroundImage) {\r\n        styles += backgroundImageControllerToStyles(backgroundImage);\r\n      }\r\n\r\n      //Получаем значения background-position из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundPosition = getResponsiveSetting(settings, 'background_position');\r\n      }\r\n\r\n      if (backgroundPosition) {\r\n        styles += simplePropertyStyled(backgroundPosition, 'background-position');\r\n      }\r\n\r\n      //Получаем значения background-attachment из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundAttachment = getResponsiveSetting(settings, 'background_attachment');\r\n      }\r\n\r\n      if (backgroundAttachment) {\r\n        styles += simplePropertyStyled(backgroundAttachment, 'background-attachment');\r\n      }\r\n\r\n      //Получаем значения background-repeat из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundRepeat = getResponsiveSetting(settings, 'background_repeat');\r\n      }\r\n\r\n      if (backgroundRepeat) {\r\n        styles += simplePropertyStyled(backgroundRepeat, 'background-repeat');\r\n      }\r\n\r\n      //Получаем значения background-size в конкретных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundSizeInUnit = getResponsiveSetting(settings, 'background_image_width');\r\n      }\r\n\r\n      if (backgroundSizeInUnit) {\r\n        styles += sizeStyled(backgroundSizeInUnit, 'background-size');\r\n      }\r\n\r\n      //Получаем значения background-size из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundSize = getResponsiveSetting(settings, 'background_size');\r\n      }\r\n\r\n      if (backgroundSize) {\r\n        styles += simplePropertyStyled(backgroundSize, 'background-size');\r\n      }\r\n\r\n      styles+=\"} \";\r\n\r\n      styles+=`${parentClass} .altrp-background-image:hover {`;\r\n\r\n      //Получаем значения background-image из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundImage = getResponsiveSetting(settings, 'background_image', ':hover');\r\n      }\r\n\r\n      if (backgroundImage) {\r\n        styles += backgroundImageControllerToStyles(backgroundImage);\r\n      }\r\n\r\n      //Получаем значения background-position из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundPosition = getResponsiveSetting(settings, 'background_position', ':hover');\r\n      }\r\n\r\n      if (backgroundPosition) {\r\n        styles += simplePropertyStyled(backgroundPosition, 'background-position');\r\n      }\r\n\r\n      //Получаем значения background-attachment из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundAttachment = getResponsiveSetting(settings, 'background_attachment', ':hover');\r\n      }\r\n\r\n      if (backgroundAttachment) {\r\n        styles += simplePropertyStyled(backgroundAttachment, 'background-attachment');\r\n      }\r\n\r\n      //Получаем значения background-repeat из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundRepeat = getResponsiveSetting(settings, 'background_repeat', ':hover');\r\n      }\r\n\r\n      if (backgroundRepeat) {\r\n        styles += simplePropertyStyled(backgroundRepeat, 'background-repeat');\r\n      }\r\n\r\n      //Получаем значения background-size в конкретных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundSizeInUnit = getResponsiveSetting(settings, 'background_image_width', ':hover');\r\n      }\r\n\r\n      if (backgroundSizeInUnit) {\r\n        styles += sizeStyled(backgroundSizeInUnit, 'background-size');\r\n      }\r\n\r\n      //Получаем значения background-size из контроллера, обрабатываем и добавляем в styles\r\n\r\n      if (settings !== undefined) {\r\n        backgroundSize = getResponsiveSetting(settings, 'background_size', ':hover');\r\n      }\r\n\r\n      if (backgroundSize) {\r\n        styles += simplePropertyStyled(backgroundSize, 'background-size');\r\n      }\r\n\r\n      styles+=\"} \";\r\n\r\n      let aspect_ratio_size;\r\n\r\n      if (settings !== undefined) {\r\n        aspect_ratio_size = getResponsiveSetting(settings, 'aspect_ratio_size');\r\n        if(Number(aspect_ratio_size) !== 0) {\r\n            styles+= 'padding:0;';\r\n        }\r\n        else{\r\n            padding = getResponsiveSetting(settings, 'position_padding');\r\n            styles +=dimensionsControllerToStyles(padding);\r\n        }\r\n      }\r\n\r\n      return styles;\r\n}\r\n\r\nexport default getImageStyles;\r\n","import { getResponsiveSetting } from '../../helpers';\r\nimport {dimensionsControllerToStyles} from \"../../helpers/styles\";\r\n\r\nconst getMenuStyles = (settings,id)=>{\r\n\r\n    const parentClass = `.altrp-element${id}`;\r\n\r\n    let styles = `${parentClass} .altrp-menu{`;\r\n\r\n    if (getResponsiveSetting(settings, 'type') === 'horizontal') {\r\n      styles += 'display: flex;';\r\n      styles += '.bp3-submenu{flex-grow:1}';\r\n      styles += '.bp3-icon-caret-right{transform: rotate(90deg);}';\r\n    }\r\n\r\n    styles += '} ';\r\n    /**\r\n     * Стили поповера\r\n     * @type {string}\r\n     */\r\n    let renderButton = getResponsiveSetting(settings, 'button');\r\n    if (renderButton) {\r\n      styles += `${parentClass} .altrp-popover{display:flex;`;\r\n      let alignment = getResponsiveSetting(settings, 'alignment')\r\n      styles += `justify-content:${alignment};`;\r\n      if (alignment === 'stretch') {\r\n        styles += `${parentClass} .altrp-menu-toggle{flex-grow:1;}`;\r\n      }\r\n      styles += '} ';\r\n    }\r\n    /**\r\n     * Стили кнопки\r\n     * @type {string}\r\n     */\r\n    if (renderButton) {\r\n      styles += `${parentClass} .altrp-menu-toggle{`;\r\n      let buttonBg = getResponsiveSetting(settings, 'button_bg')\r\n      if (buttonBg && buttonBg.color) {\r\n        styles += `background-color:${buttonBg.color};background-image:none;`;\r\n      }\r\n      let buttonColor = getResponsiveSetting(settings, 'button_color')\r\n      if (buttonColor && buttonColor.color) {\r\n        styles += `svg, path{fill:${buttonColor.color};}`;\r\n      }\r\n      let buttonPadding = getResponsiveSetting(settings, 'button_padding')\r\n      if (buttonPadding) {\r\n        styles += dimensionsControllerToStyles(buttonPadding);\r\n      }\r\n      let border = getResponsiveSetting(settings, 'border');\r\n      if(border){\r\n        styles += `border-style:${border};`;\r\n        styles += dimensionsControllerToStyles(getResponsiveSetting(settings, 'border_width'), 'border-width');\r\n        let borderColor = getResponsiveSetting(settings, 'border_color')\r\n        if(borderColor && borderColor.color){\r\n          styles += `border-color:${borderColor.color};`;\r\n        }\r\n      }\r\n      let borderRadius = getResponsiveSetting(settings, 'button_radius');\r\n      if(borderRadius){\r\n        styles += dimensionsControllerToStyles(borderRadius, 'border-radius');\r\n      }\r\n      styles += '} ';\r\n\r\n      styles += `${parentClass} .altrp-menu-toggle:hover{`;\r\n      buttonBg = getResponsiveSetting(settings, 'button_bg', ':hover')\r\n      if (buttonBg && buttonBg.color) {\r\n        styles += `background-color:${buttonBg.color};background-image:none;`;\r\n      }\r\n      buttonColor = getResponsiveSetting(settings, 'button_color', ':hover')\r\n      if (buttonColor && buttonColor.color) {\r\n        styles += `svg, path{fill:${buttonColor.color};}`;\r\n      }\r\n      border = getResponsiveSetting(settings, 'border', ':hover');\r\n      if(border){\r\n        styles += `border-style:${border};`;\r\n        styles += dimensionsControllerToStyles(getResponsiveSetting(settings, 'border_width', ':hover'), 'border-width');\r\n        let borderColor = getResponsiveSetting(settings, 'border_color', ':hover')\r\n        if(borderColor && borderColor.color){\r\n          styles += `border-color:${borderColor.color};`;\r\n        }\r\n      }\r\n      borderRadius = getResponsiveSetting(settings, 'button_radius', ':hover');\r\n      if(borderRadius){\r\n        styles += dimensionsControllerToStyles(borderRadius, 'border-radius');\r\n      }\r\n      styles += '}';\r\n    }\r\n\r\n    return styles;\r\n}\r\n\r\nexport default getMenuStyles;","import {\r\n  simplePropertyStyled,\r\n  borderWidthStyled,\r\n  colorPropertyStyled,\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  sizeStyled,\r\n  heightCalcStyled,\r\n  transformRotateStyled,\r\n  iconSizeStyled,\r\n  shadowControllerToStyles,\r\n} from '../../helpers/styles';\r\nimport { getResponsiveSetting } from '../../helpers';\r\n\r\n/**\r\n * Преобразует объект стилей, который задается в виджете Cards в строку css для вставки в GlobalStyles\r\n * @param {{}} settings \r\n * @param {string} id \r\n * @return {string}\r\n */\r\n\r\nexport function getPostsStyles(settings, id) {\r\n  let styles = '';\r\n\r\n  if (settings === undefined) {\r\n    return styles;\r\n  }\r\n\r\n  const parentClass = `.altrp-element${id}`;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous {`;\r\n\r\n  const flexDirectionPaginPrev = getResponsiveSetting(settings, 'prev_icon_position');\r\n\r\n  if (flexDirectionPaginPrev && flexDirectionPaginPrev !== 'default') {\r\n    styles += simplePropertyStyled(flexDirectionPaginPrev, 'flex-direction');\r\n  }\r\n\r\n  const marginPaginPrev = getResponsiveSetting(settings, 'posts_prev_margin');\r\n\r\n  if (marginPaginPrev) {\r\n    styles += dimensionsControllerToStyles(marginPaginPrev, 'margin');\r\n  }\r\n\r\n  const paddingPaginPrev = getResponsiveSetting(settings, 'posts_prev_padding');\r\n\r\n  if (paddingPaginPrev) {\r\n    styles += dimensionsControllerToStyles(paddingPaginPrev);\r\n  }\r\n\r\n  const colorPaginPrev = getResponsiveSetting(settings, 'posts_prev_color');\r\n\r\n  if (colorPaginPrev) {\r\n    styles += colorPropertyStyled(colorPaginPrev, 'color');\r\n  }\r\n\r\n  const typographicPaginPrev = getResponsiveSetting(settings, 'posts_prev_typographic');\r\n\r\n  if (typographicPaginPrev) {\r\n    styles += typographicControllerToStyles(typographicPaginPrev);\r\n  }\r\n\r\n  const borderTypePaginPrev = getResponsiveSetting(settings, 'posts_prev_border_type');\r\n\r\n  if (borderTypePaginPrev) {\r\n    styles += simplePropertyStyled(borderTypePaginPrev, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginPrev = getResponsiveSetting(settings, 'posts_prev_border_width');\r\n\r\n  if (borderWidthPaginPrev) {\r\n    styles += borderWidthStyled(borderWidthPaginPrev);\r\n  }\r\n\r\n  const borderColorPaginPrev = getResponsiveSetting(settings, 'posts_prev_border_color');\r\n\r\n  if (borderColorPaginPrev) {\r\n    styles += colorPropertyStyled(borderColorPaginPrev, 'border-color');\r\n  }\r\n\r\n  const borderRadiusPaginPrev = getResponsiveSetting(settings, 'border_prev_radius');\r\n\r\n  if (borderRadiusPaginPrev) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginPrev, 'border-radius');\r\n  }\r\n\r\n  const boxShadowPaginPrev = getResponsiveSetting(settings, 'style_prev_background_shadow');\r\n\r\n  if (boxShadowPaginPrev) {\r\n    styles += shadowControllerToStyles(boxShadowPaginPrev);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover {`;\r\n\r\n  const flexDirectionPaginPrevHover = getResponsiveSetting(settings, 'prev_icon_position', ':hover');\r\n\r\n  if (flexDirectionPaginPrevHover && flexDirectionPaginPrevHover !== 'default') {\r\n    styles += simplePropertyStyled(flexDirectionPaginPrevHover, 'flex-direction');\r\n  }\r\n\r\n  const marginPaginPrevHover = getResponsiveSetting(settings, 'posts_prev_margin', ':hover');\r\n\r\n  if (marginPaginPrevHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginPrevHover, 'margin');\r\n  }\r\n\r\n  const paddingPaginPrevHover = getResponsiveSetting(settings, 'posts_prev_padding', ':hover');\r\n\r\n  if (paddingPaginPrevHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginPrevHover);\r\n  }\r\n\r\n  const colorPaginPrevHover = getResponsiveSetting(settings, 'posts_prev_color', ':hover');\r\n\r\n  if (colorPaginPrevHover) {\r\n    styles += colorPropertyStyled(colorPaginPrevHover, 'color');\r\n  }\r\n\r\n  const typographicPaginPrevHover = getResponsiveSetting(settings, 'posts_prev_typographic', ':hover');\r\n\r\n  if (typographicPaginPrevHover) {\r\n    styles += typographicControllerToStyles(typographicPaginPrevHover);\r\n  }\r\n\r\n  const borderTypePaginPrevHover = getResponsiveSetting(settings, 'posts_prev_border_type', ':hover');\r\n\r\n  if (borderTypePaginPrevHover) {\r\n    styles += simplePropertyStyled(borderTypePaginPrevHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginPrevHover = getResponsiveSetting(settings, 'posts_prev_border_width', ':hover');\r\n\r\n  if (borderWidthPaginPrevHover) {\r\n    styles += borderWidthStyled(borderWidthPaginPrevHover);\r\n  }\r\n\r\n  const borderColorPaginPrevHover = getResponsiveSetting(settings, 'posts_prev_border_color', ':hover');\r\n\r\n  if (borderColorPaginPrevHover) {\r\n    styles += colorPropertyStyled(borderColorPaginPrevHover, 'border-color');\r\n  }\r\n\r\n  const borderRadiusPaginPrevHover = getResponsiveSetting(settings, 'border_prev_radius', ':hover');\r\n\r\n  if (borderRadiusPaginPrevHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginPrevHover, 'border-radius');\r\n  }\r\n\r\n  const boxShadowPaginPrevHover = getResponsiveSetting(settings, 'style_prev_background_shadow', ':hover');\r\n\r\n  if (boxShadowPaginPrevHover) {\r\n    styles += shadowControllerToStyles(boxShadowPaginPrevHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous svg, ${parentClass} .altrp-pagination__previous img {`;\r\n\r\n  const marginPaginPrevSvgImg = getResponsiveSetting(settings, 'prev_icon_padding');\r\n\r\n  if (marginPaginPrevSvgImg) {\r\n    styles += dimensionsControllerToStyles(marginPaginPrevSvgImg, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover svg, ${parentClass} .altrp-pagination__previous:hover img {`;\r\n\r\n  const marginPaginPrevSvgImgHover = getResponsiveSetting(settings, 'prev_icon_padding', ':hover');\r\n\r\n  if (marginPaginPrevSvgImgHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginPrevSvgImgHover, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous svg {`;\r\n\r\n  const sizePaginPrevSvg = getResponsiveSetting(settings, 'prev_icon_size');\r\n\r\n  if (sizePaginPrevSvg) {\r\n    styles += iconSizeStyled(sizePaginPrevSvg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover svg {`;\r\n\r\n  const sizePaginPrevSvgHover = getResponsiveSetting(settings, 'prev_icon_size', ':hover');\r\n\r\n  if (sizePaginPrevSvgHover) {\r\n    styles += iconSizeStyled(sizePaginPrevSvgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous img {`;\r\n\r\n  const heightPaginPrevImg = getResponsiveSetting(settings, 'prev_icon_size');\r\n\r\n  if (heightPaginPrevImg) {\r\n    styles += sizeStyled(heightPaginPrevImg, 'height');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover img {`;\r\n\r\n  const heightPaginPrevImgHover = getResponsiveSetting(settings, 'prev_icon_size', ':hover');\r\n\r\n  if (heightPaginPrevImgHover) {\r\n    styles += sizeStyled(heightPaginPrevImgHover, 'height');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous path {`;\r\n\r\n  const fillPaginPrevPath = getResponsiveSetting(settings, 'prev_icon_color');\r\n\r\n  if (fillPaginPrevPath) {\r\n    styles += colorPropertyStyled(fillPaginPrevPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover path {`;\r\n\r\n  const fillPaginPrevPathHover = getResponsiveSetting(settings, 'prev_icon_color', ':hover');\r\n\r\n  if (fillPaginPrevPathHover) {\r\n    styles += colorPropertyStyled(fillPaginPrevPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next {`;\r\n\r\n  const flexDirectionPaginNext = getResponsiveSetting(settings, 'next_icon_position');\r\n\r\n  if (flexDirectionPaginNext && flexDirectionPaginNext !== 'default') {\r\n    styles += simplePropertyStyled(flexDirectionPaginNext, 'flex-direction');\r\n  }\r\n\r\n  const marginPaginNext = getResponsiveSetting(settings, 'posts_next_margin');\r\n\r\n  if (marginPaginNext) {\r\n    styles += dimensionsControllerToStyles(marginPaginNext, 'margin');\r\n  }\r\n\r\n  const paddingPaginNext = getResponsiveSetting(settings, 'posts_next_padding');\r\n\r\n  if (paddingPaginNext) {\r\n    styles += dimensionsControllerToStyles(paddingPaginNext);\r\n  }\r\n\r\n  const colorPaginNext = getResponsiveSetting(settings, 'posts_next_color');\r\n\r\n  if (colorPaginNext) {\r\n    styles += colorPropertyStyled(colorPaginNext, 'color');\r\n  }\r\n\r\n  const typographicPaginNext = getResponsiveSetting(settings, 'posts_next_typographic');\r\n\r\n  if (typographicPaginNext) {\r\n    styles += typographicControllerToStyles(typographicPaginNext);\r\n  }\r\n\r\n  const borderTypePaginNext = getResponsiveSetting(settings, 'posts_next_border_type');\r\n\r\n  if (borderTypePaginNext) {\r\n    styles += simplePropertyStyled(borderTypePaginNext, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginNext = getResponsiveSetting(settings, 'posts_next_border_width');\r\n\r\n  if (borderWidthPaginNext) {\r\n    styles += borderWidthStyled(borderWidthPaginNext);\r\n  }\r\n\r\n  const borderColorPaginNext = getResponsiveSetting(settings, 'posts_next_border_color');\r\n\r\n  if (borderColorPaginNext) {\r\n    styles += colorPropertyStyled(borderColorPaginNext, 'border-color');\r\n  }\r\n\r\n  const borderRadiusPaginNext = getResponsiveSetting(settings, 'border_next_radius');\r\n\r\n  if (borderRadiusPaginNext) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginNext, 'border-radius');\r\n  }\r\n\r\n  const boxShadowPaginNext = getResponsiveSetting(settings, 'style_next_background_shadow');\r\n\r\n  if (boxShadowPaginNext) {\r\n    styles += shadowControllerToStyles(boxShadowPaginNext);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover {`;\r\n\r\n  const flexDirectionPaginNextHover = getResponsiveSetting(settings, 'next_icon_position', ':hover');\r\n\r\n  if (flexDirectionPaginNextHover && flexDirectionPaginNextHover !== 'default') {\r\n    styles += simplePropertyStyled(flexDirectionPaginNextHover, 'flex-direction');\r\n  }\r\n\r\n  const marginPaginNextHover = getResponsiveSetting(settings, 'posts_next_margin', ':hover');\r\n\r\n  if (marginPaginNextHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginNextHover, 'margin');\r\n  }\r\n\r\n  const paddingPaginNextHover = getResponsiveSetting(settings, 'posts_next_padding', ':hover');\r\n\r\n  if (paddingPaginNextHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginNextHover);\r\n  }\r\n\r\n  const colorPaginNextHover = getResponsiveSetting(settings, 'posts_next_color', ':hover');\r\n\r\n  if (colorPaginNextHover) {\r\n    styles += colorPropertyStyled(colorPaginNextHover, 'color');\r\n  }\r\n\r\n  const typographicPaginNextHover = getResponsiveSetting(settings, 'posts_next_typographic', ':hover');\r\n\r\n  if (typographicPaginNextHover) {\r\n    styles += typographicControllerToStyles(typographicPaginNextHover);\r\n  }\r\n\r\n  const borderTypePaginNextHover = getResponsiveSetting(settings, 'posts_next_border_type', ':hover');\r\n\r\n  if (borderTypePaginNextHover) {\r\n    styles += simplePropertyStyled(borderTypePaginNextHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginNextHover = getResponsiveSetting(settings, 'posts_next_border_width', ':hover');\r\n\r\n  if (borderWidthPaginNextHover) {\r\n    styles += borderWidthStyled(borderWidthPaginNextHover);\r\n  }\r\n\r\n  const borderColorPaginNextHover = getResponsiveSetting(settings, 'posts_next_border_color', ':hover');\r\n\r\n  if (borderColorPaginNextHover) {\r\n    styles += colorPropertyStyled(borderColorPaginNextHover, 'border-color');\r\n  }\r\n\r\n  const borderRadiusPaginNextHover = getResponsiveSetting(settings, 'border_next_radius', ':hover');\r\n\r\n  if (borderRadiusPaginNextHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginNextHover, 'border-radius');\r\n  }\r\n\r\n  const boxShadowPaginNextHover = getResponsiveSetting(settings, 'style_next_background_shadow', ':hover');\r\n\r\n  if (boxShadowPaginNextHover) {\r\n    styles += shadowControllerToStyles(boxShadowPaginNextHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next svg, ${parentClass} .altrp-pagination__next img {`;\r\n\r\n  const marginPaginNextSvgImg = getResponsiveSetting(settings, 'next_icon_margin');\r\n\r\n  if (marginPaginNextSvgImg) {\r\n    styles += dimensionsControllerToStyles(marginPaginNextSvgImg, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover svg, ${parentClass} .altrp-pagination__next:hover img {`;\r\n\r\n  const marginPaginNextSvgImgHover = getResponsiveSetting(settings, 'next_icon_margin', ':hover');\r\n\r\n  if (marginPaginNextSvgImgHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginNextSvgImgHover, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next svg {`;\r\n\r\n  const sizePaginNextSvg = getResponsiveSetting(settings, 'next_icon_size');\r\n\r\n  if (sizePaginNextSvg) {\r\n    styles += iconSizeStyled(sizePaginNextSvg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover svg {`;\r\n\r\n  const sizePaginNextSvgHover = getResponsiveSetting(settings, 'next_icon_size', ':hover');\r\n\r\n  if (sizePaginNextSvgHover) {\r\n    styles += iconSizeStyled(sizePaginNextSvgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next img {`;\r\n\r\n  const heightPaginNextImg = getResponsiveSetting(settings, 'next_icon_size');\r\n\r\n  if (heightPaginNextImg) {\r\n    styles += sizeStyled(heightPaginNextImg, 'height');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover img {`;\r\n\r\n  const heightPaginNextImgHover = getResponsiveSetting(settings, 'next_icon_size', ':hover');\r\n\r\n  if (heightPaginNextImgHover) {\r\n    styles += sizeStyled(heightPaginNextImgHover, 'height');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next path {`;\r\n\r\n  const fillPaginNextPath = getResponsiveSetting(settings, 'next_icon_color');\r\n\r\n  if (fillPaginNextPath) {\r\n    styles += colorPropertyStyled(fillPaginNextPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover path {`;\r\n\r\n  const fillPaginNextPathHover = getResponsiveSetting(settings, 'next_icon_color', ':hover');\r\n\r\n  if (fillPaginNextPathHover) {\r\n    styles += colorPropertyStyled(fillPaginNextPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__count {`;\r\n\r\n  const marginPaginCount = getResponsiveSetting(settings, 'count_buttons_margin');\r\n\r\n  if (marginPaginCount) {\r\n    styles += dimensionsControllerToStyles(marginPaginCount, 'margin');\r\n  }\r\n\r\n  const backgroundColorPaginCount = getResponsiveSetting(settings, 'table_style_pagination_count_background_color');\r\n\r\n  if (backgroundColorPaginCount) {\r\n    styles += colorPropertyStyled(backgroundColorPaginCount, 'background-color');\r\n  }\r\n\r\n  const paddingPaginCount = getResponsiveSetting(settings, 'table_style_pagination_padding_count');\r\n\r\n  if (paddingPaginCount) {\r\n    styles += dimensionsControllerToStyles(paddingPaginCount);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__count:hover {`;\r\n\r\n  const marginPaginCountHover = getResponsiveSetting(settings, 'count_buttons_margin', ':hover');\r\n\r\n  if (marginPaginCountHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginCountHover, 'margin');\r\n  }\r\n\r\n  const backgroundColorPaginCountHover = getResponsiveSetting(settings, 'table_style_pagination_count_background_color', ':hover');\r\n\r\n  if (backgroundColorPaginCountHover) {\r\n    styles += colorPropertyStyled(backgroundColorPaginCountHover, 'background-color');\r\n  }\r\n\r\n  const paddingPaginCountHover = getResponsiveSetting(settings, 'table_style_pagination_padding_count', ':hover');\r\n\r\n  if (paddingPaginCountHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginCountHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__count, ${parentClass} .altrp-pagination-pages__item {`;\r\n\r\n  const colorPaginCountPagesItem = getResponsiveSetting(settings, 'table_style_pagination_count_text_color');\r\n\r\n  if (colorPaginCountPagesItem) {\r\n    styles += colorPropertyStyled(colorPaginCountPagesItem, 'color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__count:hover, ${parentClass} .altrp-pagination-pages__item:hover {`;\r\n\r\n  const colorPaginCountPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_count_text_color', ':hover');\r\n\r\n  if (colorPaginCountPagesItemHover) {\r\n    styles += colorPropertyStyled(colorPaginCountPagesItemHover, 'color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination-pages__item {`;\r\n\r\n  const marginPaginPagesItem = getResponsiveSetting(settings, 'count_button_item_margin');\r\n\r\n  if (marginPaginPagesItem) {\r\n    styles += dimensionsControllerToStyles(marginPaginPagesItem, 'margin');\r\n  }\r\n\r\n  const backgroundColorPaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_count_item_background_color');\r\n\r\n  if (backgroundColorPaginPagesItem) {\r\n    styles += colorPropertyStyled(backgroundColorPaginPagesItem, 'background-color');\r\n  }\r\n\r\n  const borderTypePaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_type');\r\n\r\n  if (borderTypePaginPagesItem) {\r\n    styles += simplePropertyStyled(borderTypePaginPagesItem, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_width');\r\n\r\n  if (borderWidthPaginPagesItem) {\r\n    styles += borderWidthStyled(borderWidthPaginPagesItem);\r\n  }\r\n\r\n  const borderRadiusPaginPagesItem = getResponsiveSetting(settings, 'table_style_count_item_border_radius');\r\n\r\n  if (borderRadiusPaginPagesItem) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginPagesItem, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_color');\r\n\r\n  if (borderColorPaginPagesItem) {\r\n    styles += colorPropertyStyled(borderColorPaginPagesItem, 'border-color', '!important');\r\n  }\r\n\r\n  const boxShadowPaginPagesItem = getResponsiveSetting(settings, 'pagination_count_item_shadow');\r\n\r\n  if (boxShadowPaginPagesItem) {\r\n    styles += shadowControllerToStyles(boxShadowPaginPagesItem);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination-pages__item:hover {`;\r\n\r\n  const marginPaginPagesItemHover = getResponsiveSetting(settings, 'count_button_item_margin', ':hover');\r\n\r\n  if (marginPaginPagesItemHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginPagesItemHover, 'margin');\r\n  }\r\n\r\n  const backgroundColorPaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_count_item_background_color', ':hover');\r\n\r\n  if (backgroundColorPaginPagesItemHover) {\r\n    styles += colorPropertyStyled(backgroundColorPaginPagesItemHover, 'background-color');\r\n  }\r\n\r\n  const borderTypePaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_type', ':hover');\r\n\r\n  if (borderTypePaginPagesItemHover) {\r\n    styles += simplePropertyStyled(borderTypePaginPagesItemHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_width', ':hover');\r\n\r\n  if (borderWidthPaginPagesItemHover) {\r\n    styles += borderWidthStyled(borderWidthPaginPagesItemHover);\r\n  }\r\n\r\n  const borderRadiusPaginPagesItemHover = getResponsiveSetting(settings, 'table_style_count_item_border_radius', ':hover');\r\n\r\n  if (borderRadiusPaginPagesItemHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginPagesItemHover, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_color', ':hover');\r\n\r\n  if (borderColorPaginPagesItemHover) {\r\n    styles += colorPropertyStyled(borderColorPaginPagesItemHover, 'border-color', '!important');\r\n  }\r\n\r\n  const boxShadowPaginPagesItemHover = getResponsiveSetting(settings, 'pagination_count_item_shadow', ':hover');\r\n\r\n  if (boxShadowPaginPagesItemHover) {\r\n    styles += shadowControllerToStyles(boxShadowPaginPagesItemHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .active.altrp-pagination-pages__item {`;\r\n\r\n  const colorActivePaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_active_count_text_color');\r\n\r\n  if (colorActivePaginPagesItem) {\r\n    styles += colorPropertyStyled(colorActivePaginPagesItem, 'color');\r\n  }\r\n\r\n  const backgroundColorActivePaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_active_count_item_background_color');\r\n\r\n  if (backgroundColorActivePaginPagesItem) {\r\n    styles += colorPropertyStyled(backgroundColorActivePaginPagesItem, 'background');\r\n  }\r\n\r\n  const borderColorActivePaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_active_count_item_border_color');\r\n\r\n  if (borderColorActivePaginPagesItem) {\r\n    styles += colorPropertyStyled(borderColorActivePaginPagesItem, 'border-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .active.altrp-pagination-pages__item:hover {`;\r\n\r\n  const colorActivePaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_active_count_text_color', ':hover');\r\n\r\n  if (colorActivePaginPagesItemHover) {\r\n    styles += colorPropertyStyled(colorActivePaginPagesItemHover, 'color');\r\n  }\r\n\r\n  const backgroundColorActivePaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_active_count_item_background_color', ':hover');\r\n\r\n  if (backgroundColorActivePaginPagesItemHover) {\r\n    styles += colorPropertyStyled(backgroundColorActivePaginPagesItemHover, 'background');\r\n  }\r\n\r\n  const borderColorActivePaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_active_count_item_border_color', ':hover');\r\n\r\n  if (borderColorActivePaginPagesItemHover) {\r\n    styles += colorPropertyStyled(borderColorActivePaginPagesItemHover, 'border-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination-pages__item {`;\r\n\r\n  const typographicPaginPaginPagesItem = getResponsiveSetting(settings, 'table_style_item_count_pagination_typographic');\r\n\r\n  if (typographicPaginPaginPagesItem) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginPagesItem);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination-pages__item:hover {`;\r\n\r\n  const typographicPaginPaginPagesItemHover = getResponsiveSetting(settings, 'table_style_item_count_pagination_typographic', ':hover');\r\n\r\n  if (typographicPaginPaginPagesItemHover) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginPagesItemHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__ellipsis {`;\r\n\r\n  const marginPaginEllipsis = getResponsiveSetting(settings, 'ellipsis_margin');\r\n\r\n  if (marginPaginEllipsis) {\r\n    styles += dimensionsControllerToStyles(marginPaginEllipsis, 'margin');\r\n  }\r\n\r\n  const colorPaginEllipsis = getResponsiveSetting(settings, 'ellipsis_color');\r\n\r\n  if (colorPaginEllipsis) {\r\n    styles += colorPropertyStyled(colorPaginEllipsis, 'color');\r\n  }\r\n\r\n  const typographicPaginEllipsis = getResponsiveSetting(settings, 'ellipsis_typographic');\r\n\r\n  if (typographicPaginEllipsis) {\r\n    styles += typographicControllerToStyles(typographicPaginEllipsis);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__ellipsis:hover {`;\r\n\r\n  const marginPaginEllipsisHover = getResponsiveSetting(settings, 'ellipsis_margin', ':hover');\r\n\r\n  if (marginPaginEllipsisHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginEllipsisHover, 'margin');\r\n  }\r\n\r\n  const colorPaginEllipsisHover = getResponsiveSetting(settings, 'ellipsis_color', ':hover');\r\n\r\n  if (colorPaginEllipsisHover) {\r\n    styles += colorPropertyStyled(colorPaginEllipsisHover, 'color');\r\n  }\r\n\r\n  const typographicPaginEllipsisHover = getResponsiveSetting(settings, 'ellipsis_typographic', ':hover');\r\n\r\n  if (typographicPaginEllipsisHover) {\r\n    styles += typographicControllerToStyles(typographicPaginEllipsisHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__goto-page {`;\r\n\r\n  const marginPaginGotoPage = getResponsiveSetting(settings, 'goto-page_margin');\r\n\r\n  if (marginPaginGotoPage) {\r\n    styles += dimensionsControllerToStyles(marginPaginGotoPage, 'margin');\r\n  }\r\n\r\n  const paddingPaginGotoPage = getResponsiveSetting(settings, 'page_input_padding');\r\n\r\n  if (paddingPaginGotoPage) {\r\n    styles += dimensionsControllerToStyles(paddingPaginGotoPage);\r\n  }\r\n\r\n  const colorPaginGotoPage = getResponsiveSetting(settings, 'page_input_text_color');\r\n\r\n  if (colorPaginGotoPage) {\r\n    styles += colorPropertyStyled(colorPaginGotoPage, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginGotoPage = getResponsiveSetting(settings, 'page_input_background_color');\r\n\r\n  if (backgroundColorPaginGotoPage) {\r\n    styles += colorPropertyStyled(backgroundColorPaginGotoPage, 'background-color');\r\n  }\r\n\r\n  const borderTypePaginGotoPage = getResponsiveSetting(settings, 'page_input_border_type');\r\n\r\n  if (borderTypePaginGotoPage) {\r\n    styles += simplePropertyStyled(borderTypePaginGotoPage, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginGotoPage = getResponsiveSetting(settings, 'page_input_border_width');\r\n\r\n  if (borderWidthPaginGotoPage) {\r\n    styles += borderWidthStyled(borderWidthPaginGotoPage);\r\n  }\r\n\r\n  const borderColorPaginGotoPage = getResponsiveSetting(settings, 'page_input_border_color');\r\n\r\n  if (borderColorPaginGotoPage) {\r\n    styles += colorPropertyStyled(borderColorPaginGotoPage, 'border-color');\r\n  }\r\n\r\n  const borderRadiusPaginGotoPage = getResponsiveSetting(settings, 'page_input_border_radius');\r\n\r\n  if (borderRadiusPaginGotoPage) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginGotoPage, 'border-radius');\r\n  }\r\n\r\n  const boxShadowPaginGotoPage = getResponsiveSetting(settings, 'page_input_shadow');\r\n\r\n  if (boxShadowPaginGotoPage) {\r\n    styles += shadowControllerToStyles(boxShadowPaginGotoPage);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__goto-page:hover {`;\r\n\r\n  const marginPaginGotoPageHover = getResponsiveSetting(settings, 'goto-page_margin', ':hover');\r\n\r\n  if (marginPaginGotoPageHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginGotoPageHover, 'margin');\r\n  }\r\n\r\n  const paddingPaginGotoPageHover = getResponsiveSetting(settings, 'page_input_padding', ':hover');\r\n\r\n  if (paddingPaginGotoPageHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginGotoPageHover);\r\n  }\r\n\r\n  const colorPaginGotoPageHover = getResponsiveSetting(settings, 'page_input_text_color', ':hover');\r\n\r\n  if (colorPaginGotoPageHover) {\r\n    styles += colorPropertyStyled(colorPaginGotoPageHover, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginGotoPageHover = getResponsiveSetting(settings, 'page_input_background_color', ':hover');\r\n\r\n  if (backgroundColorPaginGotoPageHover) {\r\n    styles += colorPropertyStyled(backgroundColorPaginGotoPageHover, 'background-color');\r\n  }\r\n\r\n  const borderTypePaginGotoPageHover = getResponsiveSetting(settings, 'page_input_border_type', ':hover');\r\n\r\n  if (borderTypePaginGotoPageHover) {\r\n    styles += simplePropertyStyled(borderTypePaginGotoPageHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginGotoPageHover = getResponsiveSetting(settings, 'page_input_border_width', ':hover');\r\n\r\n  if (borderWidthPaginGotoPageHover) {\r\n    styles += borderWidthStyled(borderWidthPaginGotoPageHover);\r\n  }\r\n\r\n  const borderColorPaginGotoPageHover = getResponsiveSetting(settings, 'page_input_border_color', ':hover');\r\n\r\n  if (borderColorPaginGotoPageHover) {\r\n    styles += colorPropertyStyled(borderColorPaginGotoPageHover, 'border-color');\r\n  }\r\n\r\n  const borderRadiusPaginGotoPageHover = getResponsiveSetting(settings, 'page_input_border_radius', ':hover');\r\n\r\n  if (borderRadiusPaginGotoPageHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginGotoPageHover, 'border-radius');\r\n  }\r\n\r\n  const boxShadowPaginGotoPageHover = getResponsiveSetting(settings, 'page_input_shadow', ':hover');\r\n\r\n  if (boxShadowPaginGotoPageHover) {\r\n    styles += shadowControllerToStyles(boxShadowPaginGotoPageHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-posts {`;\r\n\r\n  const paddingPosts = getResponsiveSetting(settings, 'position_padding');\r\n\r\n  if (paddingPosts) {\r\n    styles += dimensionsControllerToStyles(paddingPosts);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-posts:hover {`;\r\n\r\n  const paddingPostsHover = getResponsiveSetting(settings, 'position_padding', ':hover');\r\n\r\n  if (paddingPostsHover) {\r\n    styles += dimensionsControllerToStyles(paddingPostsHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} > .altrp-pagination-pages {`;\r\n\r\n  const paddingPaginPages = getResponsiveSetting(settings, 'posts_pagination_padding');\r\n\r\n  if (paddingPaginPages) {\r\n    styles += dimensionsControllerToStyles(paddingPaginPages);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} > .altrp-pagination-pages:hover {`;\r\n\r\n  const paddingPaginPagesHover = getResponsiveSetting(settings, 'posts_pagination_padding', ':hover');\r\n\r\n  if (paddingPaginPagesHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginPagesHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__goto-page {`;\r\n\r\n  const typographicPaginPaginGotoPages = getResponsiveSetting(settings, '.altrp-pagination .altrp-pagination__goto-page');\r\n\r\n  if (typographicPaginPaginGotoPages) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginGotoPages);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__goto-page:hover {`;\r\n\r\n  const typographicPaginPaginGotoPagesHover = getResponsiveSetting(settings, '.altrp-pagination .altrp-pagination__goto-page', ':hover');\r\n\r\n  if (typographicPaginPaginGotoPagesHover) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginGotoPagesHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next, ${parentClass} .altrp-pagination-pages__item, ${parentClass} .altrp-pagination__count, ${parentClass} .altrp-pagination__previous {`;\r\n\r\n  const typographicPaginPaginPagesItemCountPrev = getResponsiveSetting(settings, 'table_style_pagination_typographic');\r\n\r\n  if (typographicPaginPaginPagesItemCountPrev) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginPagesItemCountPrev);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover, ${parentClass} .altrp-pagination-pages__item:hover, ${parentClass} .altrp-pagination__count:hover, ${parentClass} .altrp-pagination__previous:hover {`;\r\n\r\n  const typographicPaginPaginPagesItemCountPrevHover = getResponsiveSetting(settings, 'table_style_pagination_typographic', ':hover');\r\n\r\n  if (typographicPaginPaginPagesItemCountPrevHover) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginPagesItemCountPrevHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size {`;\r\n\r\n  const marginPaginSelectSize = getResponsiveSetting(settings, 'pagination_select_margin');\r\n\r\n  if (marginPaginSelectSize) {\r\n    styles += dimensionsControllerToStyles(marginPaginSelectSize, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size:hover {`;\r\n\r\n  const marginPaginSelectSizeHover = getResponsiveSetting(settings, 'pagination_select_margin', ':hover');\r\n\r\n  if (marginPaginSelectSizeHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginSelectSizeHover, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size .altrp-field-select2__control {`;\r\n\r\n  const paddingPaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_padding');\r\n\r\n  if (paddingPaginSelectSizeControl) {\r\n    styles += dimensionsControllerToStyles(paddingPaginSelectSizeControl);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size .altrp-field-select2__control:hover {`;\r\n\r\n  const paddingPaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_padding', ':hover');\r\n\r\n  if (paddingPaginSelectSizeControlHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginSelectSizeControlHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__select-size {`;\r\n\r\n  const typographicPaginPaginSelectSize = getResponsiveSetting(settings, 'table_style_pagination_select__pagination_typographic');\r\n\r\n  if (typographicPaginPaginSelectSize) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginSelectSize);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__select-size:hover {`;\r\n\r\n  const typographicPaginPaginSelectSizeHover = getResponsiveSetting(settings, 'table_style_pagination_select__pagination_typographic', ':hover');\r\n\r\n  if (typographicPaginPaginSelectSizeHover) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginSelectSizeHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size .altrp-field-select2__control {`;\r\n\r\n  const borderTypePaginSelect2Control = getResponsiveSetting(settings, 'pagination_select_border_type');\r\n\r\n  if (borderTypePaginSelect2Control) {\r\n    styles += simplePropertyStyled(borderTypePaginSelect2Control, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginSelect2Control = getResponsiveSetting(settings, 'pagination_select_border_width');\r\n\r\n  if (borderWidthPaginSelect2Control) {\r\n    styles += borderWidthStyled(borderWidthPaginSelect2Control);\r\n  }\r\n\r\n  const borderRadiusPaginSelect2Control = getResponsiveSetting(settings, 'pagination_select_border_radius');\r\n\r\n  if (borderRadiusPaginSelect2Control) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginSelect2Control, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginSelect2Control = getResponsiveSetting(settings, 'pagination_select_border_color');\r\n\r\n  if (borderColorPaginSelect2Control) {\r\n    styles += colorPropertyStyled(borderColorPaginSelect2Control, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginSelect2Control = getResponsiveSetting(settings, 'pagination_select_shadow');\r\n\r\n  if (boxShadowPaginSelect2Control) {\r\n    styles += shadowControllerToStyles(boxShadowPaginSelect2Control);\r\n  }\r\n\r\n  const colorPaginSelect2Control = getResponsiveSetting(settings, 'pagination_select_text_color');\r\n\r\n  if (colorPaginSelect2Control) {\r\n    styles += colorPropertyStyled(colorPaginSelect2Control, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginSelect2Control = getResponsiveSetting(settings, 'pagination_select_background_color');\r\n\r\n  if (backgroundColorPaginSelect2Control) {\r\n    styles += colorPropertyStyled(backgroundColorPaginSelect2Control, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size .altrp-field-select2__control:hover {`;\r\n\r\n  const borderTypePaginSelect2ControlHover = getResponsiveSetting(settings, 'pagination_select_border_type', ':hover');\r\n\r\n  if (borderTypePaginSelect2ControlHover) {\r\n    styles += simplePropertyStyled(borderTypePaginSelect2ControlHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginSelect2ControlHover = getResponsiveSetting(settings, 'pagination_select_border_width', ':hover');\r\n\r\n  if (borderWidthPaginSelect2ControlHover) {\r\n    styles += borderWidthStyled(borderWidthPaginSelect2ControlHover);\r\n  }\r\n\r\n  const borderRadiusPaginSelect2ControlHover = getResponsiveSetting(settings, 'pagination_select_border_radius', ':hover');\r\n\r\n  if (borderRadiusPaginSelect2ControlHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginSelect2ControlHover, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginSelect2ControlHover = getResponsiveSetting(settings, 'pagination_select_border_color', ':hover');\r\n\r\n  if (borderColorPaginSelect2ControlHover) {\r\n    styles += colorPropertyStyled(borderColorPaginSelect2ControlHover, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginSelect2ControlHover = getResponsiveSetting(settings, 'pagination_select_shadow', ':hover');\r\n\r\n  if (boxShadowPaginSelect2ControlHover) {\r\n    styles += shadowControllerToStyles(boxShadowPaginSelect2ControlHover);\r\n  }\r\n\r\n  const colorPaginSelect2ControlHover = getResponsiveSetting(settings, 'pagination_select_text_color', ':hover');\r\n\r\n  if (colorPaginSelect2ControlHover) {\r\n    styles += colorPropertyStyled(colorPaginSelect2ControlHover, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginSelect2ControlHover = getResponsiveSetting(settings, 'pagination_select_background_color', ':hover');\r\n\r\n  if (backgroundColorPaginSelect2ControlHover) {\r\n    styles += colorPropertyStyled(backgroundColorPaginSelect2ControlHover, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  return styles;\r\n}","import {\r\n  simplePropertyStyled,\r\n  borderWidthStyled,\r\n  colorPropertyStyled,\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  filtersControllerToStyles,\r\n  marginTopLeftStyled,\r\n  iconSizeStyled,\r\n  sizeStyled,\r\n  shadowControllerToStyles,\r\n} from '../../helpers/styles';\r\nimport { getResponsiveSetting } from '../../helpers';\r\n\r\n/**\r\n * Преобразует объект стилей, который задается в виджете Table в строку css для вставки в GlobalStyles\r\n * @param {{}} settings\r\n * @param {string} id\r\n * @return {string}\r\n */\r\n\r\nexport function getTableStyles(settings, id) {\r\n  let styles = '';\r\n\r\n  if (settings === undefined) {\r\n    return styles;\r\n  }\r\n\r\n  const parentClass = `.altrp-element${id}`;\r\n\r\n  styles += `${parentClass} .altrp-table {`;\r\n\r\n  const borderType = getResponsiveSetting(settings, 'table_style_table_border_type');\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, 'border-style', '!important');\r\n  }\r\n\r\n  const borderWidth = getResponsiveSetting(settings, 'table_style_table_border_width');\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth, '!important');\r\n  }\r\n\r\n  const borderColor = getResponsiveSetting(settings, 'table_style_table_border_color');\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color', '!important');\r\n  }\r\n\r\n  styles += `} `;\r\n  //hover\r\n  styles += `${parentClass} .altrp-table:hover {`;\r\n\r\n  const borderTypeHover = getResponsiveSetting(settings, 'table_style_table_border_type', ':hover');\r\n\r\n  if (borderTypeHover) {\r\n    styles += simplePropertyStyled(borderTypeHover, 'border-style', '!important');\r\n  }\r\n\r\n  const borderWidthHover = getResponsiveSetting(settings, 'table_style_table_border_width', ':hover');\r\n\r\n  if (borderWidthHover) {\r\n    styles += borderWidthStyled(borderWidthHover, '!important');\r\n  }\r\n\r\n  const borderColorHover = getResponsiveSetting(settings, 'table_style_table_border_color', ':hover');\r\n\r\n  if (borderColorHover) {\r\n    styles += colorPropertyStyled(borderColorHover, 'border-color', '!important');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next {`;\r\n\r\n  const flexDirection = getResponsiveSetting(settings, 'next_icon_position');\r\n\r\n  if (flexDirection && flexDirection !== 'default') {\r\n    styles += simplePropertyStyled(flexDirection, 'flex-direction');\r\n  }\r\n\r\n  const margin = getResponsiveSetting(settings, 'next_page_button_margin');\r\n\r\n  if (margin) {\r\n    styles += dimensionsControllerToStyles(margin, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover {`;\r\n\r\n  const flexDirectionHover = getResponsiveSetting(settings, 'next_icon_position', ':hover');\r\n\r\n  if (flexDirectionHover && flexDirectionHover !== 'default') {\r\n    styles += simplePropertyStyled(flexDirectionHover, 'flex-direction');\r\n  }\r\n\r\n  const marginHover = getResponsiveSetting(settings, 'next_page_button_margin', ':hover');\r\n\r\n  if (marginHover) {\r\n    styles += dimensionsControllerToStyles(marginHover, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next svg {`;\r\n\r\n  const marginPaginationSvg = getResponsiveSetting(settings, 'next_icon_margin');\r\n\r\n  if (marginPaginationSvg) {\r\n    styles += dimensionsControllerToStyles(marginPaginationSvg, 'margin');\r\n  }\r\n\r\n  const iconSize = getResponsiveSetting(settings, 'next_icon_size');\r\n\r\n  if (iconSize) {\r\n    styles += iconSizeStyled(iconSize);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover svg {`;\r\n\r\n  const marginPaginationSvgHover = getResponsiveSetting(settings, 'next_icon_margin', ':hover');\r\n\r\n  if (marginPaginationSvgHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginationSvgHover, 'margin');\r\n  }\r\n\r\n  const iconSizeHover = getResponsiveSetting(settings, 'next_icon_size', ':hover');\r\n\r\n  if (iconSizeHover) {\r\n    styles += iconSizeStyled(iconSizeHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next img {`;\r\n\r\n  const iconSizeNextImg = getResponsiveSetting(settings, 'next_icon_size');\r\n\r\n  if (iconSizeNextImg) {\r\n    styles += sizeStyled(iconSizeNextImg, 'width');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover img {`;\r\n\r\n  const iconSizeNextImgHover = getResponsiveSetting(settings, 'next_icon_size', ':hover');\r\n\r\n  if (iconSizeNextImgHover) {\r\n    styles += sizeStyled(iconSizeNextImgHover, 'width');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next path {`;\r\n\r\n  const iconFillNextPath = getResponsiveSetting(settings, 'next_icon_color');\r\n\r\n  if (iconFillNextPath) {\r\n    styles += colorPropertyStyled(iconFillNextPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover path {`;\r\n\r\n  const iconFillNextPathHover = getResponsiveSetting(settings, 'next_icon_color', ':hover');\r\n\r\n  if (iconFillNextPathHover) {\r\n    styles += colorPropertyStyled(iconFillNextPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous {`;\r\n\r\n  const flexDirectionPaginationPrev = getResponsiveSetting(settings, 'prev_icon_position');\r\n\r\n  if (flexDirectionPaginationPrev && flexDirectionPaginationPrev !== 'default') {\r\n    styles += simplePropertyStyled(flexDirectionPaginationPrev, 'flex-direction');\r\n  }\r\n\r\n  const marginPaginationPrev = getResponsiveSetting(settings, 'prev_page_button_margin');\r\n\r\n  if (marginPaginationPrev) {\r\n    styles += dimensionsControllerToStyles(marginPaginationPrev, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover {`;\r\n\r\n  const flexDirectionPaginationPrevHover = getResponsiveSetting(settings, 'prev_icon_position', ':hover');\r\n\r\n  if (flexDirectionPaginationPrevHover && flexDirectionPaginationPrevHover !== 'default') {\r\n    styles += simplePropertyStyled(flexDirectionPaginationPrevHover, 'flex-direction');\r\n  }\r\n\r\n  const marginPaginationPrevHover = getResponsiveSetting(settings, 'prev_page_button_margin', ':hover');\r\n\r\n  if (marginPaginationPrevHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginationPrevHover, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous svg {`;\r\n\r\n  const marginPrevSvg = getResponsiveSetting(settings, 'prev_icon_padding');\r\n\r\n  if (marginPrevSvg) {\r\n    styles += dimensionsControllerToStyles(marginPrevSvg, 'margin');\r\n  }\r\n\r\n  const iconSizePrevSvg = getResponsiveSetting(settings, 'prev_icon_size');\r\n\r\n  if (iconSizePrevSvg) {\r\n    styles += iconSizeStyled(iconSizePrevSvg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover svg {`;\r\n\r\n  const marginPrevSvgHover = getResponsiveSetting(settings, 'prev_icon_padding', ':hover');\r\n\r\n  if (marginPrevSvgHover) {\r\n    styles += dimensionsControllerToStyles(marginPrevSvgHover, 'margin');\r\n  }\r\n\r\n  const iconSizePrevSvgHover = getResponsiveSetting(settings, 'prev_icon_size', ':hover');\r\n\r\n  if (iconSizePrevSvgHover) {\r\n    styles += iconSizeStyled(iconSizePrevSvgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous img {`;\r\n\r\n  const iconSizePrevImg = getResponsiveSetting(settings, 'prev_icon_size');\r\n\r\n  if (iconSizePrevImg) {\r\n    styles += sizeStyled(iconSizePrevImg, 'width');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover img {`;\r\n\r\n  const iconSizePrevImgHover = getResponsiveSetting(settings, 'prev_icon_size', ':hover');\r\n\r\n  if (iconSizePrevImgHover) {\r\n    styles += sizeStyled(iconSizePrevImgHover, 'width');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous path {`;\r\n\r\n  const iconFillPrevPath = getResponsiveSetting(settings, 'prev_icon_color');\r\n\r\n  if (iconFillPrevPath) {\r\n    styles += colorPropertyStyled(iconFillPrevPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover path {`;\r\n\r\n  const iconFillPrevPathHover = getResponsiveSetting(settings, 'prev_icon_color', ':hover');\r\n\r\n  if (iconFillPrevPathHover) {\r\n    styles += colorPropertyStyled(iconFillPrevPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .replace-text {`;\r\n\r\n  const colorReplaceText = getResponsiveSetting(settings, 'replace_text_color');\r\n\r\n  if (colorReplaceText) {\r\n    styles += colorPropertyStyled(colorReplaceText, 'color');\r\n  }\r\n\r\n  const typographicReplaceText = getResponsiveSetting(settings, 'replace_text_typographic');\r\n\r\n  if (typographicReplaceText) {\r\n    styles += typographicControllerToStyles(typographicReplaceText);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .replace-text:hover {`;\r\n\r\n  const colorReplaceTextHover = getResponsiveSetting(settings, 'replace_text_color', ':hover');\r\n\r\n  if (colorReplaceTextHover) {\r\n    styles += colorPropertyStyled(colorReplaceTextHover, 'color');\r\n  }\r\n\r\n  const typographicReplaceTextHover = getResponsiveSetting(settings, 'replace_text_typographic', ':hover');\r\n\r\n  if (typographicReplaceTextHover) {\r\n    styles += typographicControllerToStyles(typographicReplaceTextHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .replace-picture {`;\r\n\r\n  const widthPictureReplacePicture = getResponsiveSetting(settings, 'replace_image_width');\r\n\r\n  if (widthPictureReplacePicture) {\r\n    styles += sizeStyled(widthPictureReplacePicture, 'width');\r\n  }\r\n\r\n  const heightReplacePicture = getResponsiveSetting(settings, 'replace_image_height');\r\n\r\n  if (heightReplacePicture) {\r\n    styles += sizeStyled(heightReplacePicture, 'height');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th .grouped-column {`;\r\n\r\n  const paddingGroupedColumn = getResponsiveSetting(settings, 'grouped_column_icon_padding');\r\n\r\n  if (paddingGroupedColumn) {\r\n    styles += dimensionsControllerToStyles(paddingGroupedColumn);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th:hover .grouped-column {`;\r\n\r\n  const paddingGroupedColumnHover = getResponsiveSetting(settings, 'grouped_column_icon_padding', ':hover');\r\n\r\n  if (paddingGroupedColumnHover) {\r\n    styles += dimensionsControllerToStyles(paddingGroupedColumnHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th path {`;\r\n\r\n  const iconFillTableThPath = getResponsiveSetting(settings, 'grouped_column_icon_color');\r\n\r\n  if (iconFillTableThPath) {\r\n    styles += colorPropertyStyled(iconFillTableThPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th:hover path {`;\r\n\r\n  const iconFillTableThPathHover = getResponsiveSetting(settings, 'grouped_column_icon_color', ':hover');\r\n\r\n  if (iconFillTableThPathHover) {\r\n    styles += colorPropertyStyled(iconFillTableThPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th .grouped-column, ${parentClass} .altrp-table-th svg, ${parentClass} .altrp-table-th img {`;\r\n\r\n  const iconSizeGroupedColumnSvgImg = getResponsiveSetting(settings, 'grouped_column_icon_size');\r\n\r\n  if (iconSizeGroupedColumnSvgImg) {\r\n    styles += iconSizeStyled(iconSizeGroupedColumnSvgImg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th:hover .grouped-column, ${parentClass} .altrp-table-th:hover svg, ${parentClass} .altrp-table-th:hover img {`;\r\n\r\n  const iconSizeGroupedColumnSvgImgHover = getResponsiveSetting(settings, 'grouped_column_icon_size', ':hover');\r\n\r\n  if (iconSizeGroupedColumnSvgImgHover) {\r\n    styles += iconSizeStyled(iconSizeGroupedColumnSvgImgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th .not-grouped-column {`;\r\n\r\n  const paddingNotGroupedColumn = getResponsiveSetting(settings, 'not_grouped_column_icon_padding');\r\n\r\n  if (paddingNotGroupedColumn) {\r\n    styles += dimensionsControllerToStyles(paddingNotGroupedColumn);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th:hover .not-grouped-column {`;\r\n\r\n  const paddingNotGroupedColumnHover = getResponsiveSetting(settings, 'not_grouped_column_icon_padding', ':hover');\r\n\r\n  if (paddingNotGroupedColumnHover) {\r\n    styles += dimensionsControllerToStyles(paddingNotGroupedColumnHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th .not-grouped-column path {`;\r\n\r\n  const iconFillNotGroupedColumnPath = getResponsiveSetting(settings, 'not_grouped_column_icon_color');\r\n\r\n  if (iconFillNotGroupedColumnPath) {\r\n    styles += colorPropertyStyled(iconFillNotGroupedColumnPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th:hover .not-grouped-column path {`;\r\n\r\n  const iconFillNotGroupedColumnPathHover = getResponsiveSetting(settings, 'not_grouped_column_icon_color', ':hover');\r\n\r\n  if (iconFillNotGroupedColumnPathHover) {\r\n    styles += colorPropertyStyled(iconFillNotGroupedColumnPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th .not-grouped-column, ${parentClass} .altrp-table-th .not-grouped-column svg, ${parentClass} .altrp-table-th .not-grouped-column img {`;\r\n\r\n  const iconSizeNotGroupedColumnSvgImg = getResponsiveSetting(settings, 'not_grouped_column_icon_size');\r\n\r\n  if (iconSizeNotGroupedColumnSvgImg) {\r\n    styles += iconSizeStyled(iconSizeNotGroupedColumnSvgImg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th:hover .not-grouped-column, ${parentClass} .altrp-table-th:hover .not-grouped-column svg, ${parentClass} .altrp-table-th:hover .not-grouped-column img {`;\r\n\r\n  const iconSizeNotGroupedColumnSvgImgHover = getResponsiveSetting(settings, 'not_grouped_column_icon_size', ':hover');\r\n\r\n  if (iconSizeNotGroupedColumnSvgImgHover) {\r\n    styles += iconSizeStyled(iconSizeNotGroupedColumnSvgImgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .expanded-row {`;\r\n\r\n  const paddingExpandedRow = getResponsiveSetting(settings, 'expanded_row_icon_padding');\r\n\r\n  if (paddingExpandedRow) {\r\n    styles += dimensionsControllerToStyles(paddingExpandedRow);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .expanded-row:hover {`;\r\n\r\n  const paddingExpandedRowHover = getResponsiveSetting(settings, 'expanded_row_icon_padding', ':hover');\r\n\r\n  if (paddingExpandedRowHover) {\r\n    styles += dimensionsControllerToStyles(paddingExpandedRowHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .expanded-row path {`;\r\n\r\n  const iconFillExpandedRowPath = getResponsiveSetting(settings, 'expanded_row_icon_color');\r\n\r\n  if (iconFillExpandedRowPath) {\r\n    styles += colorPropertyStyled(iconFillExpandedRowPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .expanded-row:hover path {`;\r\n\r\n  const iconFillExpandedRowPathHover = getResponsiveSetting(settings, 'expanded_row_icon_color', ':hover');\r\n\r\n  if (iconFillExpandedRowPathHover) {\r\n    styles += colorPropertyStyled(iconFillExpandedRowPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .expanded-row, ${parentClass} .expanded-row svg, ${parentClass}  .expanded-row img {`;\r\n\r\n  const iconSizeExpandedRowSvgImg = getResponsiveSetting(settings, 'expanded_row_icon_size');\r\n\r\n  if (iconSizeExpandedRowSvgImg) {\r\n    styles += iconSizeStyled(iconSizeExpandedRowSvgImg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .expanded-row:hover, ${parentClass} .expanded-row svg:hover, ${parentClass}  .expanded-row img:hover {`;\r\n\r\n  const iconSizeExpandedRowSvgImgHover = getResponsiveSetting(settings, 'expanded_row_icon_size', ':hover');\r\n\r\n  if (iconSizeExpandedRowSvgImgHover) {\r\n    styles += iconSizeStyled(iconSizeExpandedRowSvgImgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .not-expanded-row {`;\r\n\r\n  const paddingNotExpandedRow = getResponsiveSetting(settings, 'not_expanded_row_icon_padding');\r\n\r\n  if (paddingNotExpandedRow) {\r\n    styles += dimensionsControllerToStyles(paddingNotExpandedRow);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .not-expanded-row:hover {`;\r\n\r\n  const paddingNotExpandedRowHover = getResponsiveSetting(settings, 'not_expanded_row_icon_padding', ':hover');\r\n\r\n  if (paddingNotExpandedRowHover) {\r\n    styles += dimensionsControllerToStyles(paddingNotExpandedRowHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .not-expanded-row path {`;\r\n\r\n  const iconFillNotExpandedRowPath = getResponsiveSetting(settings, 'not_expanded_row_icon_color');\r\n\r\n  if (iconFillNotExpandedRowPath) {\r\n    styles += colorPropertyStyled(iconFillNotExpandedRowPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .not-expanded-row:hover path {`;\r\n\r\n  const iconFillNotExpandedRowPathHover = getResponsiveSetting(settings, 'not_expanded_row_icon_color', ':hover');\r\n\r\n  if (iconFillNotExpandedRowPathHover) {\r\n    styles += colorPropertyStyled(iconFillNotExpandedRowPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .not-expanded-row, ${parentClass} .not-expanded-row svg, ${parentClass} .not-expanded-row img {`;\r\n\r\n  const iconSizeNotExpandedRowSvgImg = getResponsiveSetting(settings, 'not_expanded_row_icon_size');\r\n\r\n  if (iconSizeNotExpandedRowSvgImg) {\r\n    styles += iconSizeStyled(iconSizeNotExpandedRowSvgImg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .not-expanded-row:hover, ${parentClass} .not-expanded-row svg:hover, ${parentClass} .not-expanded-row img:hover {`;\r\n\r\n  const iconSizeNotExpandedRowSvgImgHover = getResponsiveSetting(settings, 'not_expanded_row_icon_size', ':hover');\r\n\r\n  if (iconSizeNotExpandedRowSvgImgHover) {\r\n    styles += iconSizeStyled(iconSizeNotExpandedRowSvgImgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-tbody--striped tr:nth-child(2n), ${parentClass} .altrp-table-tbody--striped .altrp-table-tr:nth-child(2n) {`;\r\n\r\n  const colorThNthChild = getResponsiveSetting(settings, 'table_style_table_stripe_color');\r\n\r\n  if (colorThNthChild) {\r\n    styles += colorPropertyStyled(colorThNthChild, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-tbody--striped tr:nth-child(2n):hover, ${parentClass} .altrp-table-tbody--striped .altrp-table-tr:nth-child(2n):hover {`;\r\n\r\n  const colorThNthChildHover = getResponsiveSetting(settings, 'table_style_table_stripe_color');\r\n\r\n  if (colorThNthChildHover) {\r\n    styles += colorPropertyStyled(colorThNthChildHover, 'background-color', ':hover');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-field, ${parentClass} .altrp-table__filter-select>.altrp-field-select2__control, ${parentClass} .altrp-label_slider>.altrp-btn {`;\r\n\r\n  const colorFieldSelect2ControlBtn = getResponsiveSetting(settings, 'filter_style_table_text_color');\r\n\r\n  if (colorFieldSelect2ControlBtn) {\r\n    styles += colorPropertyStyled(colorFieldSelect2ControlBtn, 'color', '!important');\r\n  }\r\n\r\n  const backgroundColorFieldSelect2ControlBtn = getResponsiveSetting(settings, 'filter_style_table_background_color');\r\n\r\n  if (backgroundColorFieldSelect2ControlBtn) {\r\n    styles += colorPropertyStyled(backgroundColorFieldSelect2ControlBtn, 'background-color', '!important');\r\n  }\r\n\r\n  const inputPaddingFieldSelect2ControlBtn = getResponsiveSetting(settings, 'filter_padding');\r\n\r\n  if (inputPaddingFieldSelect2ControlBtn) {\r\n    styles += dimensionsControllerToStyles(inputPaddingFieldSelect2ControlBtn);\r\n  }\r\n\r\n  const typographicFieldSelect2ControlBtn = getResponsiveSetting(settings, 'filter_style_typographic');\r\n\r\n  if (typographicFieldSelect2ControlBtn) {\r\n    styles += typographicControllerToStyles(typographicFieldSelect2ControlBtn);\r\n  }\r\n\r\n  const borderTypeFieldSelect2ControlBtn = getResponsiveSetting(settings, 'filter_style_table_border_type');\r\n\r\n  if (borderTypeFieldSelect2ControlBtn) {\r\n    styles += simplePropertyStyled(borderTypeFieldSelect2ControlBtn, 'border-style', '!important');\r\n  }\r\n\r\n  const borderWidthFieldSelect2ControlBtn = getResponsiveSetting(settings, 'filter_style_table_border_width');\r\n\r\n  if (borderWidthFieldSelect2ControlBtn) {\r\n    styles += borderWidthStyled(borderWidthFieldSelect2ControlBtn, '!important');\r\n  }\r\n\r\n  const borderColorFieldSelect2ControlBtn = getResponsiveSetting(settings, 'filter_style_table_border_color');\r\n\r\n  if (borderColorFieldSelect2ControlBtn) {\r\n    styles += colorPropertyStyled(borderColorFieldSelect2ControlBtn, 'border-color', '!important');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-field:hover, ${parentClass} .altrp-table__filter-select:hover>.altrp-field-select2__control, ${parentClass} .altrp-label_slider>.altrp-btn {`;\r\n\r\n  const colorFieldSelect2ControlBtnHover = getResponsiveSetting(settings, 'filter_style_table_text_color', ':hover');\r\n\r\n  if (colorFieldSelect2ControlBtnHover) {\r\n    styles += colorPropertyStyled(colorFieldSelect2ControlBtnHover, 'color', '!important');\r\n  }\r\n\r\n  const backgroundColorFieldSelect2ControlBtnHover = getResponsiveSetting(settings, 'filter_style_table_background_color', ':hover');\r\n\r\n  if (backgroundColorFieldSelect2ControlBtnHover) {\r\n    styles += colorPropertyStyled(backgroundColorFieldSelect2ControlBtnHover, 'background-color', '!important');\r\n  }\r\n\r\n  const inputPaddingFieldSelect2ControlBtnHover = getResponsiveSetting(settings, 'filter_padding', ':hover');\r\n\r\n  if (inputPaddingFieldSelect2ControlBtnHover) {\r\n    styles += dimensionsControllerToStyles(inputPaddingFieldSelect2ControlBtnHover);\r\n  }\r\n\r\n  const typographicFieldSelect2ControlBtnHover = getResponsiveSetting(settings, 'filter_style_typographic', ':hover');\r\n\r\n  if (typographicFieldSelect2ControlBtnHover) {\r\n    styles += typographicControllerToStyles(typographicFieldSelect2ControlBtnHover);\r\n  }\r\n\r\n  const borderTypeFieldSelect2ControlBtnHover = getResponsiveSetting(settings, 'filter_style_table_border_type', ':hover');\r\n\r\n  if (borderTypeFieldSelect2ControlBtnHover) {\r\n    styles += simplePropertyStyled(borderTypeFieldSelect2ControlBtnHover, 'border-style', '!important');\r\n  }\r\n\r\n  const borderWidthFieldSelect2ControlBtnHover = getResponsiveSetting(settings, 'filter_style_table_border_width', ':hover');\r\n\r\n  if (borderWidthFieldSelect2ControlBtnHover) {\r\n    styles += borderWidthStyled(borderWidthFieldSelect2ControlBtnHover, '!important');\r\n  }\r\n\r\n  const borderColorFieldSelect2ControlBtnHover = getResponsiveSetting(settings, 'filter_style_table_border_color', ':hover');\r\n\r\n  if (borderColorFieldSelect2ControlBtnHover) {\r\n    styles += colorPropertyStyled(borderColorFieldSelect2ControlBtnHover, 'border-color', '!important');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-label {`;\r\n\r\n  const labelPaddingLabel = getResponsiveSetting(settings, 'label_padding');\r\n\r\n  if (labelPaddingLabel) {\r\n    styles += dimensionsControllerToStyles(labelPaddingLabel);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-label:hover {`;\r\n\r\n  const labelPaddingLabelHover = getResponsiveSetting(settings, 'label_padding', ':hover');\r\n\r\n  if (labelPaddingLabelHover) {\r\n    styles += dimensionsControllerToStyles(labelPaddingLabelHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th {`;\r\n\r\n  const textAlignTableTh = getResponsiveSetting(settings, 'table_table_header_alignment');\r\n\r\n  if (textAlignTableTh) {\r\n    styles += simplePropertyStyled(textAlignTableTh, 'text-align');\r\n  }\r\n\r\n  const typographicTableTh = getResponsiveSetting(settings, 'table_style_header_font');\r\n\r\n  if (typographicTableTh) {\r\n    styles += typographicControllerToStyles(typographicTableTh);\r\n  }\r\n\r\n  const colorTableTh = getResponsiveSetting(settings, 'table_style_header_text_color');\r\n\r\n  if (colorTableTh) {\r\n    styles += colorPropertyStyled(colorTableTh, 'color');\r\n  }\r\n\r\n  const paddingTableTh = getResponsiveSetting(settings, 'table_style_header_padding');\r\n\r\n  if (paddingTableTh) {\r\n    styles += dimensionsControllerToStyles(paddingTableTh);\r\n  }\r\n\r\n  const borderTypeTableTh = getResponsiveSetting(settings, 'table_style_header_border_type');\r\n\r\n  if (borderTypeTableTh) {\r\n    styles += simplePropertyStyled(borderTypeTableTh, 'border-style');\r\n  }\r\n\r\n  const borderColorTableTh = getResponsiveSetting(settings, 'table_style_header_border_color');\r\n\r\n  if (borderColorTableTh) {\r\n    styles += colorPropertyStyled(borderColorTableTh, 'border-color');\r\n  }\r\n\r\n  const borderWidthTableTh = getResponsiveSetting(settings, 'table_style_header_border_width');\r\n\r\n  if (borderWidthTableTh) {\r\n    styles += borderWidthStyled(borderWidthTableTh);\r\n  }\r\n\r\n  const backgroundColorTableTh = getResponsiveSetting(settings, 'table_style_header_background');\r\n\r\n  if (backgroundColorTableTh) {\r\n    styles += `background-color: ${backgroundColorTableTh.color}: `;\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-th:hover {`;\r\n\r\n  const textAlignTableThHover = getResponsiveSetting(settings, 'table_table_header_alignment', ':hover');\r\n\r\n  if (textAlignTableThHover) {\r\n    styles += simplePropertyStyled(textAlignTableThHover, 'text-align');\r\n  }\r\n\r\n  const typographicTableThHover = getResponsiveSetting(settings, 'table_style_header_font', ':hover');\r\n\r\n  if (typographicTableThHover) {\r\n    styles += typographicControllerToStyles(typographicTableThHover);\r\n  }\r\n\r\n  const colorTableThHover = getResponsiveSetting(settings, 'table_style_header_text_color', ':hover');\r\n\r\n  if (colorTableThHover) {\r\n    styles += colorPropertyStyled(colorTableThHover, 'color');\r\n  }\r\n\r\n  const paddingTableThHover = getResponsiveSetting(settings, 'table_style_header_padding', ':hover');\r\n\r\n  if (paddingTableThHover) {\r\n    styles += dimensionsControllerToStyles(paddingTableThHover);\r\n  }\r\n\r\n  const borderTypeTableThHover = getResponsiveSetting(settings, 'table_style_header_border_type', ':hover');\r\n\r\n  if (borderTypeTableThHover) {\r\n    styles += simplePropertyStyled(borderTypeTableThHover, 'border-style');\r\n  }\r\n\r\n  const borderColorTableThHover = getResponsiveSetting(settings, 'table_style_header_border_color', ':hover');\r\n\r\n  if (borderColorTableThHover) {\r\n    styles += colorPropertyStyled(borderColorTableThHover, 'border-color');\r\n  }\r\n\r\n  const borderWidthTableThHover = getResponsiveSetting(settings, 'table_style_header_border_width', ':hover');\r\n\r\n  if (borderWidthTableThHover) {\r\n    styles += borderWidthStyled(borderWidthTableThHover);\r\n  }\r\n\r\n  const backgroundColorTableThHover = getResponsiveSetting(settings, 'table_style_header_background', ':hover');\r\n\r\n  if (backgroundColorTableThHover) {\r\n    styles += colorPropertyStyled(backgroundColorTableThHover, 'background');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-head {`;\r\n\r\n  const backgroundColorTableHead = getResponsiveSetting(settings, 'table_style_header_background');\r\n\r\n  if (backgroundColorTableHead) {\r\n    styles += `background-color: ${backgroundColorTableHead.color}; `;\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-head:hover {`;\r\n\r\n  const backgroundColorTableHeadHover = getResponsiveSetting(settings, 'table_style_header_background', ':hover');\r\n\r\n  if (backgroundColorTableHeadHover) {\r\n    styles += colorPropertyStyled(backgroundColorTableHeadHover, 'background');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-transpose_true .altrp-table-th:not(:first-child) {`;\r\n\r\n  const borderWidthTableThNotFirstChild = getResponsiveSetting(settings, 'table_style_header_border_width');\r\n\r\n  if (borderWidthTableThNotFirstChild) {\r\n    styles += marginTopLeftStyled(borderWidthTableThNotFirstChild, 'top'); //здесь вернется строка вида: \"margin-top: -10px\"\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-transpose_true .altrp-table-th:not(:first-child):hover {`;\r\n\r\n  const borderWidthTableThNotFirstChildHover = getResponsiveSetting(settings, 'table_style_header_border_width', ':hover');\r\n\r\n  if (borderWidthTableThNotFirstChildHover) {\r\n    styles += marginTopLeftStyled(borderWidthTableThNotFirstChildHover, 'top'); //здесь вернется строка вида: \"margin-top: -10px\"\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-transpose_true .altrp-table-tr:not(:first-child) .altrp-table-th {`;\r\n\r\n  const borderWidthTableTrNotFirstChild = getResponsiveSetting(settings, 'table_style_header_border_width');\r\n\r\n  if (borderWidthTableTrNotFirstChild) {\r\n    styles += marginTopLeftStyled(borderWidthTableTrNotFirstChild, 'left'); //здесь вернется строка вида: \"margin-left: -10px\"\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-transpose_true .altrp-table-tr:not(:first-child) .altrp-table-th:hover {`;\r\n\r\n  const borderWidthTableTrNotFirstChildHover = getResponsiveSetting(settings, 'table_style_header_border_width', ':hover');\r\n\r\n  if (borderWidthTableTrNotFirstChildHover) {\r\n    styles += marginTopLeftStyled(borderWidthTableTrNotFirstChildHover, 'left'); //здесь вернется строка вида: \"margin-left: -10px\"\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} div:not(.altrp-element) .altrp-table-th {`;\r\n\r\n  const verticalAlignDivNotAltrpElement = getResponsiveSetting(settings, 'header_cell_vertical_alignment');\r\n\r\n  if (verticalAlignDivNotAltrpElement) {\r\n    styles += simplePropertyStyled(verticalAlignDivNotAltrpElement, 'vertical-align');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} div:not(.altrp-element) .altrp-table-th:hover {`;\r\n\r\n  const verticalAlignDivNotAltrpElementHover = getResponsiveSetting(settings, 'header_cell_vertical_alignment', ':hover');\r\n\r\n  if (verticalAlignDivNotAltrpElementHover) {\r\n    styles += simplePropertyStyled(verticalAlignDivNotAltrpElementHover, 'vertical-align');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td {`;\r\n\r\n  const textAlignTableTd = getResponsiveSetting(settings, 'table_table_body_alignment');\r\n\r\n  if (textAlignTableTd) {\r\n    styles += simplePropertyStyled(textAlignTableTd, 'text-align');\r\n  }\r\n\r\n  const paddingTableTd = getResponsiveSetting(settings, 'table_style_body_cell_padding');\r\n\r\n  if (paddingTableTd) {\r\n    styles += dimensionsControllerToStyles(paddingTableTd);\r\n  }\r\n\r\n  const borderTypeTableTd = getResponsiveSetting(settings, 'table_style_body_border_type');\r\n\r\n  if (borderTypeTableTd) {\r\n    styles += simplePropertyStyled(borderTypeTableTd, 'border-style');\r\n  }\r\n\r\n  const borderColorTableTd = getResponsiveSetting(settings, 'table_style_body_border_color_');\r\n\r\n  if (borderColorTableTd) {\r\n    styles += colorPropertyStyled(borderColorTableTd, 'border-color');\r\n  }\r\n\r\n  const colorTableTd = getResponsiveSetting(settings, 'table_style_body_border_text_color');\r\n\r\n  if (colorTableTd) {\r\n    styles += colorPropertyStyled(colorTableTd, 'color');\r\n  }\r\n\r\n  const typographicTableTd = getResponsiveSetting(settings, 'table_style_body_font');\r\n\r\n  if (typographicTableTd) {\r\n    styles += typographicControllerToStyles(typographicTableTd);\r\n  }\r\n\r\n  const borderWidthTableTd = getResponsiveSetting(settings, 'table_style_body_border_width');\r\n\r\n  if (borderWidthTableTd) {\r\n    styles += borderWidthStyled(borderWidthTableTd);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td:hover {`;\r\n\r\n  const textAlignTableTdHover = getResponsiveSetting(settings, 'table_table_body_alignment', ':hover');\r\n\r\n  if (textAlignTableTdHover) {\r\n    styles += simplePropertyStyled(textAlignTableTdHover, 'text-align');\r\n  }\r\n\r\n  const paddingTableTdHover = getResponsiveSetting(settings, 'table_style_body_cell_padding', ':hover');\r\n\r\n  if (paddingTableTdHover) {\r\n    styles += dimensionsControllerToStyles(paddingTableTdHover);\r\n  }\r\n\r\n  const borderTypeTableTdHover = getResponsiveSetting(settings, 'table_style_body_border_type', ':hover');\r\n\r\n  if (borderTypeTableTdHover) {\r\n    styles += simplePropertyStyled(borderTypeTableTdHover, 'border-style');\r\n  }\r\n\r\n  const borderColorTableTdHover = getResponsiveSetting(settings, 'table_style_body_border_color_', ':hover');\r\n\r\n  if (borderColorTableTdHover) {\r\n    styles += colorPropertyStyled(borderColorTableTdHover, 'border-color');\r\n  }\r\n\r\n  const colorTableTdHover = getResponsiveSetting(settings, 'table_style_body_border_text_color', ':hover');\r\n\r\n  if (colorTableTdHover) {\r\n    styles += colorPropertyStyled(colorTableTdHover, 'color');\r\n  }\r\n\r\n  const typographicTableTdHover = getResponsiveSetting(settings, 'table_style_body_font', ':hover');\r\n\r\n  if (typographicTableTdHover) {\r\n    styles += typographicControllerToStyles(typographicTableTdHover);\r\n  }\r\n\r\n  const borderWidthTableTdHover = getResponsiveSetting(settings, 'table_style_body_border_width', ':hover');\r\n\r\n  if (borderWidthTableTdHover) {\r\n    styles += borderWidthStyled(borderWidthTableTdHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td a {`;\r\n\r\n  const colorTableTdA = getResponsiveSetting(settings, 'table_link_color');\r\n\r\n  if (colorTableTdA) {\r\n    styles += colorPropertyStyled(colorTableTdA, 'color');\r\n  }\r\n\r\n  const typographicTableTdA = getResponsiveSetting(settings, 'table_link_font');\r\n\r\n  if (typographicTableTdA) {\r\n    styles += typographicControllerToStyles(typographicTableTdA);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td a:hover {`;\r\n\r\n  const colorTableTdAHover = getResponsiveSetting(settings, 'table_link_color', ':hover');\r\n\r\n  if (colorTableTdAHover) {\r\n    styles += colorPropertyStyled(colorTableTdAHover, 'color');\r\n  }\r\n\r\n  const typographicTableTdAHover = getResponsiveSetting(settings, 'table_link_font', ':hover');\r\n\r\n  if (typographicTableTdAHover) {\r\n    styles += typographicControllerToStyles(typographicTableTdAHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-tbody {`;\r\n\r\n  const backgroundColorTbodyBackground = getResponsiveSetting(settings, 'table_style_body_border_background');\r\n\r\n  if (backgroundColorTbodyBackground) {\r\n    styles += colorPropertyStyled(backgroundColorTbodyBackground, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-tbody:hover {`;\r\n\r\n  const backgroundColorTbodyBackgroundHover = getResponsiveSetting(settings, 'table_style_body_border_background', ':hover');\r\n\r\n  if (backgroundColorTbodyBackgroundHover) {\r\n    styles += colorPropertyStyled(backgroundColorTbodyBackgroundHover, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-transpose_true .altrp-table-td:not(:first-child) {`;\r\n\r\n  const borderWidthTransposeTableTdNot = getResponsiveSetting(settings, 'table_style_body_border_width');\r\n\r\n  if (borderWidthTransposeTableTdNot) {\r\n    styles += marginTopLeftStyled(borderWidthTransposeTableTdNot, 'top'); //здесь вернется строка вида: \"margin-top: -10px\"\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-transpose_true .altrp-table-td:not(:first-child):hover {`;\r\n\r\n  const borderWidthTransposeTableTdNotHover = getResponsiveSetting(settings, 'table_style_body_border_width', ':hover');\r\n\r\n  if (borderWidthTransposeTableTdNotHover) {\r\n    styles += marginTopLeftStyled(borderWidthTransposeTableTdNotHover, 'top'); //здесь вернется строка вида: \"margin-top: -10px\"\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-transpose_true .altrp-table-tr:not(:first-child) .altrp-table-td {`;\r\n\r\n  const borderWidthTransposeTableTdNotTd = getResponsiveSetting(settings, 'table_style_body_border_width');\r\n\r\n  if (borderWidthTransposeTableTdNotTd) {\r\n    styles += marginTopLeftStyled(borderWidthTransposeTableTdNotTd, 'left'); //здесь вернется строка вида: \"margin-left: -10px\"\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-transpose_true .altrp-table-tr:not(:first-child) .altrp-table-td:hover {`;\r\n\r\n  const borderWidthTransposeTableTdNotTdHover = getResponsiveSetting(settings, 'table_style_body_border_width', ':hover');\r\n\r\n  if (borderWidthTransposeTableTdNotTdHover) {\r\n    styles += marginTopLeftStyled(borderWidthTransposeTableTdNotTdHover, 'left'); //здесь вернется строка вида: \"margin-left: -10px\"\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td__grouping {`;\r\n\r\n  const colorTdGrouping = getResponsiveSetting(settings, 'table_style_group_border_text_color');\r\n\r\n  if (colorTdGrouping) {\r\n    styles += colorPropertyStyled(colorTdGrouping, 'color');\r\n  }\r\n\r\n  const typographicTdGrouping = getResponsiveSetting(settings, 'table_style_group_font');\r\n\r\n  if (typographicTdGrouping) {\r\n    styles += typographicControllerToStyles(typographicTdGrouping);\r\n  }\r\n\r\n  const paddingTdGrouping = getResponsiveSetting(settings, 'table_style_group_cell_padding');\r\n\r\n  if (paddingTdGrouping) {\r\n    styles += dimensionsControllerToStyles(paddingTdGrouping);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td__grouping:hover {`;\r\n\r\n  const colorTdGroupingHover = getResponsiveSetting(settings, 'table_style_group_border_text_color', ':hover');\r\n\r\n  if (colorTdGroupingHover) {\r\n    styles += colorPropertyStyled(colorTdGroupingHover, 'color');\r\n  }\r\n\r\n  const typographicTdGroupingHover = getResponsiveSetting(settings, 'table_style_group_font', ':hover');\r\n\r\n  if (typographicTdGroupingHover) {\r\n    styles += typographicControllerToStyles(typographicTdGroupingHover);\r\n  }\r\n\r\n  const paddingTdGroupingHover = getResponsiveSetting(settings, 'table_style_group_cell_padding', ':hover');\r\n\r\n  if (paddingTdGroupingHover) {\r\n    styles += dimensionsControllerToStyles(paddingTdGroupingHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-tbody .altrp-table-td__grouping {`;\r\n\r\n  const backgroundColorTbodyTdGrouping = getResponsiveSetting(settings, 'table_style_group_border_background');\r\n\r\n  if (backgroundColorTbodyTdGrouping) {\r\n    styles += colorPropertyStyled(backgroundColorTbodyTdGrouping, 'background-color');\r\n  }\r\n\r\n  const textAlignTbodyTdGrouping = getResponsiveSetting(settings, 'table_style_group_cell_alignment');\r\n\r\n  if (textAlignTbodyTdGrouping) {\r\n    styles += simplePropertyStyled(textAlignTbodyTdGrouping, 'text-align');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-tbody .altrp-table-td__grouping:hover {`;\r\n\r\n  const backgroundColorTbodyTdGroupingHover = getResponsiveSetting(settings, 'table_style_group_border_background', ':hover');\r\n\r\n  if (backgroundColorTbodyTdGroupingHover) {\r\n    styles += colorPropertyStyled(backgroundColorTbodyTdGroupingHover, 'background-color');\r\n  }\r\n\r\n  const textAlignTbodyTdGroupingHover = getResponsiveSetting(settings, 'table_style_group_cell_alignment', ':hover');\r\n\r\n  if (textAlignTbodyTdGroupingHover) {\r\n    styles += simplePropertyStyled(textAlignTbodyTdGroupingHover, 'text-align');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} div:not(.altrp-element) .altrp-table-td {`;\r\n\r\n  const verticalAlignDivNotAltrpElTd = getResponsiveSetting(settings, 'cell_vertical_alignment');\r\n\r\n  if (verticalAlignDivNotAltrpElTd) {\r\n    styles += simplePropertyStyled(verticalAlignDivNotAltrpElTd, 'vertical-align');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} div:not(.altrp-element) .altrp-table-td:hover {`;\r\n\r\n  const verticalAlignDivNotAltrpElTdHover = getResponsiveSetting(settings, 'cell_vertical_alignment', ':hover');\r\n\r\n  if (verticalAlignDivNotAltrpElTdHover) {\r\n    styles += simplePropertyStyled(verticalAlignDivNotAltrpElTdHover, 'vertical-align');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td__grouping .altrp-table__collapse-icon svg {`;\r\n\r\n  const iconSizeTdGroupingIconSvg = getResponsiveSetting(settings, 'table_style_group_icon_size');\r\n\r\n  if (iconSizeTdGroupingIconSvg) {\r\n    styles += iconSizeStyled(iconSizeTdGroupingIconSvg);\r\n  }\r\n\r\n  const iconLeftSpaceTdGroupingIconSvg = getResponsiveSetting(settings, 'table_style_group_icon_left_space');\r\n\r\n  if (iconLeftSpaceTdGroupingIconSvg) {\r\n    styles += sizeStyled(iconLeftSpaceTdGroupingIconSvg, 'margin-left');\r\n  }\r\n\r\n  const iconRightSpaceTdGroupingIconSvg = getResponsiveSetting(settings, 'table_style_group_icon_right_space');\r\n\r\n  if (iconRightSpaceTdGroupingIconSvg) {\r\n    styles += sizeStyled(iconRightSpaceTdGroupingIconSvg, 'margin-right');\r\n  }\r\n\r\n  const iconTopTranslateTdGroupingIconSvg = getResponsiveSetting(settings, 'table_style_group_icon_top');\r\n\r\n  if (iconTopTranslateTdGroupingIconSvg) {\r\n    styles += sizeStyled(iconTopTranslateTdGroupingIconSvg, 'top');\r\n  }\r\n\r\n  const iconLeftTranslateTdGroupingIconSvg = getResponsiveSetting(settings, 'table_style_group_icon_left');\r\n\r\n  if (iconLeftTranslateTdGroupingIconSvg) {\r\n    styles += sizeStyled(iconLeftTranslateTdGroupingIconSvg, 'left');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td__grouping:hover .altrp-table__collapse-icon svg {`;\r\n\r\n  const iconSizeTdGroupingIconSvgHover = getResponsiveSetting(settings, 'table_style_group_icon_size', ':hover');\r\n\r\n  if (iconSizeTdGroupingIconSvgHover) {\r\n    styles += iconSizeStyled(iconSizeTdGroupingIconSvgHover);\r\n  }\r\n\r\n  const iconLeftSpaceTdGroupingIconSvgHover = getResponsiveSetting(settings, 'table_style_group_icon_left_space', ':hover');\r\n\r\n  if (iconLeftSpaceTdGroupingIconSvgHover) {\r\n    styles += sizeStyled(iconLeftSpaceTdGroupingIconSvgHover, 'margin-left');\r\n  }\r\n\r\n  const iconRightSpaceTdGroupingIconSvgHover = getResponsiveSetting(settings, 'table_style_group_icon_right_space', ':hover');\r\n\r\n  if (iconRightSpaceTdGroupingIconSvgHover) {\r\n    styles += sizeStyled(iconRightSpaceTdGroupingIconSvgHover, 'margin-right');\r\n  }\r\n\r\n  const iconTopTranslateTdGroupingIconSvgHover = getResponsiveSetting(settings, 'table_style_group_icon_top', ':hover');\r\n\r\n  if (iconTopTranslateTdGroupingIconSvgHover) {\r\n    styles += sizeStyled(iconTopTranslateTdGroupingIconSvgHover, 'top');\r\n  }\r\n\r\n  const iconLeftTranslateTdGroupingIconSvgHover = getResponsiveSetting(settings, 'table_style_group_icon_left', ':hover');\r\n\r\n  if (iconLeftTranslateTdGroupingIconSvgHover) {\r\n    styles += sizeStyled(iconLeftTranslateTdGroupingIconSvgHover, 'left');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td__grouping .altrp-table__collapse-icon svg, ${parentClass} .altrp-table-td__grouping .altrp-table__collapse-icon path {`;\r\n\r\n  const iconFillTdGroupingIconSvgPath = getResponsiveSetting(settings, 'table_style_group_icon_color');\r\n\r\n  if (iconFillTdGroupingIconSvgPath) {\r\n    styles += colorPropertyStyled(iconFillTdGroupingIconSvgPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-td__grouping:hover .altrp-table__collapse-icon svg, ${parentClass} .altrp-table-td__grouping:hover .altrp-table__collapse-icon path {`;\r\n\r\n  const iconFillTdGroupingIconSvgPathHover = getResponsiveSetting(settings, 'table_style_group_icon_color', ':hover');\r\n\r\n  if (iconFillTdGroupingIconSvgPathHover) {\r\n    styles += colorPropertyStyled(iconFillTdGroupingIconSvgPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-foot .altrp-table-td {`;\r\n\r\n  const paddingTableFootTd = getResponsiveSetting(settings, 'table_style_footer_cell_padding');\r\n\r\n  if (paddingTableFootTd) {\r\n    styles += dimensionsControllerToStyles(paddingTableFootTd);\r\n  }\r\n\r\n  const textAlignTableFootTd = getResponsiveSetting(settings, 'table_style_footer_cell_alignment');\r\n\r\n  if (textAlignTableFootTd) {\r\n    styles += simplePropertyStyled(textAlignTableFootTd, 'text-align');\r\n  }\r\n\r\n  const backgroundColorTableFootTd = getResponsiveSetting(settings, 'table_style_footer_border_background');\r\n\r\n  if (backgroundColorTableFootTd) {\r\n    styles += colorPropertyStyled(backgroundColorTableFootTd, 'background-color');\r\n  }\r\n\r\n  const colorTableFootTd = getResponsiveSetting(settings, 'table_style_footer_border_text_color');\r\n\r\n  if (colorTableFootTd) {\r\n    styles += colorPropertyStyled(colorTableFootTd, 'color');\r\n  }\r\n\r\n  const typographicTableFootTd = getResponsiveSetting(settings, 'table_style_footer_font');\r\n\r\n  if (typographicTableFootTd) {\r\n    styles += typographicControllerToStyles(typographicTableFootTd);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-foot .altrp-table-td:hover {`;\r\n\r\n  const paddingTableFootTdHover = getResponsiveSetting(settings, 'table_style_footer_cell_padding', ':hover');\r\n\r\n  if (paddingTableFootTdHover) {\r\n    styles += dimensionsControllerToStyles(paddingTableFootTdHover);\r\n  }\r\n\r\n  const textAlignTableFootTdHover = getResponsiveSetting(settings, 'table_style_footer_cell_alignment', ':hover');\r\n\r\n  if (textAlignTableFootTdHover) {\r\n    styles += simplePropertyStyled(textAlignTableFootTdHover, 'text-align');\r\n  }\r\n\r\n  const backgroundColorTableFootTdHover = getResponsiveSetting(settings, 'table_style_footer_border_background', ':hover');\r\n\r\n  if (backgroundColorTableFootTdHover) {\r\n    styles += colorPropertyStyled(backgroundColorTableFootTdHover, 'background-color');\r\n  }\r\n\r\n  const colorTableFootTdHover = getResponsiveSetting(settings, 'table_style_footer_border_text_color', ':hover');\r\n\r\n  if (colorTableFootTdHover) {\r\n    styles += colorPropertyStyled(colorTableFootTdHover, 'color');\r\n  }\r\n\r\n  const typographicTableFootTdHover = getResponsiveSetting(settings, 'table_style_footer_font', ':hover');\r\n\r\n  if (typographicTableFootTdHover) {\r\n    styles += typographicControllerToStyles(typographicTableFootTdHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-global-filter label {`;\r\n\r\n  const paddingGlobalFilterLabel = getResponsiveSetting(settings, 'global_filter_label_padding');\r\n\r\n  if (paddingGlobalFilterLabel) {\r\n    styles += dimensionsControllerToStyles(paddingGlobalFilterLabel);\r\n  }\r\n\r\n  const colorGlobalFilterLabel = getResponsiveSetting(settings, 'global_filter_label_color');\r\n\r\n  if (colorGlobalFilterLabel) {\r\n    styles += colorPropertyStyled(colorGlobalFilterLabel, 'color');\r\n  }\r\n\r\n  const typographicGlobalFilterLabel = getResponsiveSetting(settings, 'global_filter_label_typographic');\r\n\r\n  if (typographicGlobalFilterLabel) {\r\n    styles += typographicControllerToStyles(typographicGlobalFilterLabel);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-global-filter label:hover {`;\r\n\r\n  const paddingGlobalFilterLabelHover = getResponsiveSetting(settings, 'global_filter_label_padding', ':hover');\r\n\r\n  if (paddingGlobalFilterLabelHover) {\r\n    styles += dimensionsControllerToStyles(paddingGlobalFilterLabelHover);\r\n  }\r\n\r\n  const colorGlobalFilterLabelHover = getResponsiveSetting(settings, 'global_filter_label_color', ':hover');\r\n\r\n  if (colorGlobalFilterLabelHover) {\r\n    styles += colorPropertyStyled(colorGlobalFilterLabelHover, 'color');\r\n  }\r\n\r\n  const typographicGlobalFilterLabelHover = getResponsiveSetting(settings, 'global_filter_label_typographic', ':hover');\r\n\r\n  if (typographicGlobalFilterLabelHover) {\r\n    styles += typographicControllerToStyles(typographicGlobalFilterLabelHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-global-filter input {`;\r\n\r\n  const paddingGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_padding');\r\n\r\n  if (paddingGlobalFilterInput) {\r\n    styles += dimensionsControllerToStyles(paddingGlobalFilterInput);\r\n  }\r\n\r\n  const widthGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_width');\r\n\r\n  if (widthGlobalFilterInput) {\r\n    styles += sizeStyled(widthGlobalFilterInput, 'width');\r\n  }\r\n\r\n  const marginLeftGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_margin_left');\r\n\r\n  if (marginLeftGlobalFilterInput) {\r\n    styles += sizeStyled(marginLeftGlobalFilterInput, 'margin-left');\r\n  }\r\n\r\n  const colorGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_color');\r\n\r\n  if (colorGlobalFilterInput) {\r\n    styles += colorPropertyStyled(colorGlobalFilterInput, 'color');\r\n  }\r\n\r\n  const backgroundColorGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_background_color');\r\n\r\n  if (backgroundColorGlobalFilterInput) {\r\n    styles += colorPropertyStyled(backgroundColorGlobalFilterInput, 'background');\r\n  }\r\n\r\n  const typographicGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_typographic');\r\n\r\n  if (typographicGlobalFilterInput) {\r\n    styles += typographicControllerToStyles(typographicGlobalFilterInput);\r\n  }\r\n\r\n  const borderTypeGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_border_type');\r\n\r\n  if (borderTypeGlobalFilterInput) {\r\n    styles += simplePropertyStyled(borderTypeGlobalFilterInput, 'border-style');\r\n  }\r\n\r\n  const borderWidthGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_border_width');\r\n\r\n  if (borderWidthGlobalFilterInput) {\r\n    styles += borderWidthStyled(borderWidthGlobalFilterInput);\r\n  }\r\n\r\n  const borderRadiusGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_border_radius');\r\n\r\n  if (borderRadiusGlobalFilterInput) {\r\n    styles += dimensionsControllerToStyles(borderRadiusGlobalFilterInput, 'border-radius');\r\n  }\r\n\r\n  const borderColorGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_border_color');\r\n\r\n  if (borderColorGlobalFilterInput) {\r\n    styles += colorPropertyStyled(borderColorGlobalFilterInput, 'border-color');\r\n  }\r\n\r\n  const boxShadowGlobalFilterInput = getResponsiveSetting(settings, 'global_filter_input_shadow');\r\n\r\n  if (boxShadowGlobalFilterInput) {\r\n    styles += shadowControllerToStyles(boxShadowGlobalFilterInput);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table-global-filter input:hover {`;\r\n\r\n  const paddingGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_padding', ':hover');\r\n\r\n  if (paddingGlobalFilterInputHover) {\r\n    styles += dimensionsControllerToStyles(paddingGlobalFilterInputHover);\r\n  }\r\n\r\n  const widthGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_width', ':hover');\r\n\r\n  if (widthGlobalFilterInputHover) {\r\n    styles += sizeStyled(widthGlobalFilterInputHover, 'width');\r\n  }\r\n\r\n  const marginLeftGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_margin_left', ':hover');\r\n\r\n  if (marginLeftGlobalFilterInputHover) {\r\n    styles += sizeStyled(marginLeftGlobalFilterInputHover, 'margin-left');\r\n  }\r\n\r\n  const colorGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_color', ':hover');\r\n\r\n  if (colorGlobalFilterInputHover) {\r\n    styles += colorPropertyStyled(colorGlobalFilterInputHover, 'color');\r\n  }\r\n\r\n  const backgroundColorGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_background_color', ':hover');\r\n\r\n  if (backgroundColorGlobalFilterInputHover) {\r\n    styles += colorPropertyStyled(backgroundColorGlobalFilterInputHover, 'background');\r\n  }\r\n\r\n  const typographicGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_typographic', ':hover');\r\n\r\n  if (typographicGlobalFilterInputHover) {\r\n    styles += typographicControllerToStyles(typographicGlobalFilterInputHover);\r\n  }\r\n\r\n  const borderTypeGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_border_type', ':hover');\r\n\r\n  if (borderTypeGlobalFilterInputHover) {\r\n    styles += simplePropertyStyled(borderTypeGlobalFilterInputHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_border_width', ':hover');\r\n\r\n  if (borderWidthGlobalFilterInputHover) {\r\n    styles += borderWidthStyled(borderWidthGlobalFilterInputHover);\r\n  }\r\n\r\n  const borderRadiusGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_border_radius', ':hover');\r\n\r\n  if (borderRadiusGlobalFilterInputHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusGlobalFilterInputHover, 'border-radius');\r\n  }\r\n\r\n  const borderColorGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_border_color', ':hover');\r\n\r\n  if (borderColorGlobalFilterInputHover) {\r\n    styles += colorPropertyStyled(borderColorGlobalFilterInputHover, 'border-color');\r\n  }\r\n\r\n  const boxShadowGlobalFilterInputHover = getResponsiveSetting(settings, 'global_filter_input_shadow', ':hover');\r\n\r\n  if (boxShadowGlobalFilterInputHover) {\r\n    styles += shadowControllerToStyles(boxShadowGlobalFilterInputHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination {`;\r\n\r\n  const paddingPagination = getResponsiveSetting(settings, 'table_style_pagination_padding');\r\n\r\n  if (paddingPagination) {\r\n    styles += dimensionsControllerToStyles(paddingPagination);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination:hover {`;\r\n\r\n  const paddingPaginationHover = getResponsiveSetting(settings, 'table_style_pagination_padding', ':hover');\r\n\r\n  if (paddingPaginationHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginationHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__previous {`;\r\n\r\n  const typographicPaginationPrev = getResponsiveSetting(settings, 'table_style_prev_btn_pagination_typographic');\r\n\r\n  if (typographicPaginationPrev) {\r\n    styles += typographicControllerToStyles(typographicPaginationPrev);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__previous:hover {`;\r\n\r\n  const typographicPaginationPrevHover = getResponsiveSetting(settings, 'table_style_prev_btn_pagination_typographic', ':hover');\r\n\r\n  if (typographicPaginationPrevHover) {\r\n    styles += typographicControllerToStyles(typographicPaginationPrevHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} altrp-pagination .altrp-pagination__next {`;\r\n\r\n  const typographicPaginationNext = getResponsiveSetting(settings, 'table_style_next_btn_pagination_typographic');\r\n\r\n  if (typographicPaginationNext) {\r\n    styles += typographicControllerToStyles(typographicPaginationNext);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} altrp-pagination .altrp-pagination__next:hover {`;\r\n\r\n  const typographicPaginationNextHover = getResponsiveSetting(settings, 'table_style_next_btn_pagination_typographic', ':hover');\r\n\r\n  if (typographicPaginationNextHover) {\r\n    styles += typographicControllerToStyles(typographicPaginationNextHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination-pages__item {`;\r\n\r\n  const typographicPaginationPagesItem = getResponsiveSetting(settings, 'table_style_item_count_pagination_typographic');\r\n\r\n  if (typographicPaginationPagesItem) {\r\n    styles += typographicControllerToStyles(typographicPaginationPagesItem);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination-pages__item:hover {`;\r\n\r\n  const typographicPaginationPagesItemHover = getResponsiveSetting(settings, 'table_style_item_count_pagination_typographic', ':hover');\r\n\r\n  if (typographicPaginationPagesItemHover) {\r\n    styles += typographicControllerToStyles(typographicPaginationPagesItemHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous, ${parentClass} .altrp-pagination__next {`;\r\n\r\n  const colorPaginationPrevNext = getResponsiveSetting(settings, 'table_style_pagination_buttons_text_color');\r\n\r\n  if (colorPaginationPrevNext) {\r\n    styles += colorPropertyStyled(colorPaginationPrevNext, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginationPrevNext = getResponsiveSetting(settings, 'table_style_pagination_buttons_background_color');\r\n\r\n  if (backgroundColorPaginationPrevNext) {\r\n    styles += colorPropertyStyled(backgroundColorPaginationPrevNext, 'background-color');\r\n  }\r\n\r\n  const paddingPaginationPrevNext = getResponsiveSetting(settings, 'table_style_pagination_padding_buttons');\r\n\r\n  if (paddingPaginationPrevNext) {\r\n    styles += dimensionsControllerToStyles(paddingPaginationPrevNext);\r\n  }\r\n\r\n  const borderTypePaginationPrevNext = getResponsiveSetting(settings, 'table_style_pagination_border_type');\r\n\r\n  if (borderTypePaginationPrevNext) {\r\n    styles += simplePropertyStyled(borderTypePaginationPrevNext, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginationPrevNext = getResponsiveSetting(settings, 'table_style_pagination_border_width');\r\n\r\n  if (borderWidthPaginationPrevNext) {\r\n    styles += borderWidthStyled(borderWidthPaginationPrevNext);\r\n  }\r\n\r\n  const borderRadiusPaginationPrevNext = getResponsiveSetting(settings, 'table_style_pagination_border_radius');\r\n\r\n  if (borderRadiusPaginationPrevNext) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginationPrevNext, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginationPrevNext = getResponsiveSetting(settings, 'table_style_pagination_border_color');\r\n\r\n  if (borderColorPaginationPrevNext) {\r\n    styles += colorPropertyStyled(borderColorPaginationPrevNext, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginationPrevNext = getResponsiveSetting(settings, 'pagination_buttons_shadow');\r\n\r\n  if (boxShadowPaginationPrevNext) {\r\n    styles += shadowControllerToStyles(boxShadowPaginationPrevNext);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__previous:hover, ${parentClass} .altrp-pagination__next:hover {`;\r\n\r\n  const colorPaginationPrevNextHover = getResponsiveSetting(settings, 'table_style_pagination_buttons_text_color', ':hover');\r\n\r\n  if (colorPaginationPrevNextHover) {\r\n    styles += colorPropertyStyled(colorPaginationPrevNextHover, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginationPrevNextHover = getResponsiveSetting(settings, 'table_style_pagination_buttons_background_color', ':hover');\r\n\r\n  if (backgroundColorPaginationPrevNextHover) {\r\n    styles += colorPropertyStyled(backgroundColorPaginationPrevNextHover, 'background-color');\r\n  }\r\n\r\n  const paddingPaginationPrevNextHover = getResponsiveSetting(settings, 'table_style_pagination_padding_buttons', ':hover');\r\n\r\n  if (paddingPaginationPrevNextHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginationPrevNextHover);\r\n  }\r\n\r\n  const borderTypePaginationPrevNextHover = getResponsiveSetting(settings, 'table_style_pagination_border_type', ':hover');\r\n\r\n  if (borderTypePaginationPrevNextHover) {\r\n    styles += simplePropertyStyled(borderTypePaginationPrevNextHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginationPrevNextHover = getResponsiveSetting(settings, 'table_style_pagination_border_width', ':hover');\r\n\r\n  if (borderWidthPaginationPrevNextHover) {\r\n    styles += borderWidthStyled(borderWidthPaginationPrevNextHover);\r\n  }\r\n\r\n  const borderRadiusPaginationPrevNextHover = getResponsiveSetting(settings, 'table_style_pagination_border_radius', ':hover');\r\n\r\n  if (borderRadiusPaginationPrevNextHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginationPrevNextHover, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginationPrevNextHover = getResponsiveSetting(settings, 'table_style_pagination_border_color', ':hover');\r\n\r\n  if (borderColorPaginationPrevNextHover) {\r\n    styles += colorPropertyStyled(borderColorPaginationPrevNextHover, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginationPrevNextHover = getResponsiveSetting(settings, 'pagination_buttons_shadow', ':hover');\r\n\r\n  if (boxShadowPaginationPrevNextHover) {\r\n    styles += shadowControllerToStyles(boxShadowPaginationPrevNextHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next, ${parentClass} .altrp-pagination-pages__item, ${parentClass} .altrp-pagination__count, ${parentClass} .altrp-pagination__previous, ${parentClass} .altrp-pagination__goto-page, ${parentClass} .altrp-pagination__select-size  {`;\r\n\r\n  const typographicNextItemCountPrevGotoSelect = getResponsiveSetting(settings, 'table_style_pagination_typographic');\r\n\r\n  if (typographicNextItemCountPrevGotoSelect) {\r\n    styles += typographicControllerToStyles(typographicNextItemCountPrevGotoSelect);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__next:hover, ${parentClass} .altrp-pagination-pages__item:hover, ${parentClass} .altrp-pagination__count:hover, ${parentClass} .altrp-pagination__previous:hover, ${parentClass} .altrp-pagination__goto-page:hover, ${parentClass} .altrp-pagination__select-size:hover  {`;\r\n\r\n  const typographicNextItemCountPrevGotoSelectHover = getResponsiveSetting(settings, 'table_style_pagination_typographic', ':hover');\r\n\r\n  if (typographicNextItemCountPrevGotoSelectHover) {\r\n    styles += typographicControllerToStyles(typographicNextItemCountPrevGotoSelectHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__count {`;\r\n\r\n  const marginPaginationCount = getResponsiveSetting(settings, 'count_buttons_margin');\r\n\r\n  if (marginPaginationCount) {\r\n    styles += dimensionsControllerToStyles(marginPaginationCount, 'margin');\r\n  }\r\n\r\n  const colorPaginationCount = getResponsiveSetting(settings, 'table_style_pagination_count_text_color');\r\n\r\n  if (colorPaginationCount) {\r\n    styles += colorPropertyStyled(colorPaginationCount, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginationCount = getResponsiveSetting(settings, 'table_style_pagination_count_background_color');\r\n\r\n  if (backgroundColorPaginationCount) {\r\n    styles += colorPropertyStyled(backgroundColorPaginationCount, 'background-color');\r\n  }\r\n\r\n  const paddingPaginationCount = getResponsiveSetting(settings, 'table_style_pagination_padding_count');\r\n\r\n  if (paddingPaginationCount) {\r\n    styles += dimensionsControllerToStyles(paddingPaginationCount);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__count:hover {`;\r\n\r\n  const marginPaginationCountHover = getResponsiveSetting(settings, 'count_buttons_margin', ':hover');\r\n\r\n  if (marginPaginationCountHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginationCountHover, 'margin');\r\n  }\r\n\r\n  const colorPaginationCountHover = getResponsiveSetting(settings, 'table_style_pagination_count_text_color', ':hover');\r\n\r\n  if (colorPaginationCountHover) {\r\n    styles += colorPropertyStyled(colorPaginationCountHover, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginationCountHover = getResponsiveSetting(settings, 'table_style_pagination_count_background_color', ':hover');\r\n\r\n  if (backgroundColorPaginationCountHover) {\r\n    styles += colorPropertyStyled(backgroundColorPaginationCountHover, 'background-color');\r\n  }\r\n\r\n  const paddingPaginationCountHover = getResponsiveSetting(settings, 'table_style_pagination_padding_count', ':hover');\r\n\r\n  if (paddingPaginationCountHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginationCountHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination-pages__item {`;\r\n\r\n  const marginPaginPagesItem = getResponsiveSetting(settings, 'count_button_item_margin');\r\n\r\n  if (marginPaginPagesItem) {\r\n    styles += dimensionsControllerToStyles(marginPaginPagesItem, 'margin');\r\n  }\r\n\r\n  const backgroundColorPaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_count_item_background_color');\r\n\r\n  if (backgroundColorPaginPagesItem) {\r\n    styles += colorPropertyStyled(backgroundColorPaginPagesItem, 'background-color');\r\n  }\r\n\r\n  const borderTypePaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_type');\r\n\r\n  if (borderTypePaginPagesItem) {\r\n    styles += simplePropertyStyled(borderTypePaginPagesItem, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_width');\r\n\r\n  if (borderWidthPaginPagesItem) {\r\n    styles += borderWidthStyled(borderWidthPaginPagesItem);\r\n  }\r\n\r\n  const borderRadiusPaginPagesItem = getResponsiveSetting(settings, 'table_style_count_item_border_radius');\r\n\r\n  if (borderRadiusPaginPagesItem) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginPagesItem, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_color');\r\n\r\n  if (borderColorPaginPagesItem) {\r\n    styles += colorPropertyStyled(borderColorPaginPagesItem, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginPagesItem = getResponsiveSetting(settings, 'pagination_count_item_shadow');\r\n\r\n  if (boxShadowPaginPagesItem) {\r\n    styles += shadowControllerToStyles(boxShadowPaginPagesItem);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination-pages__item:hover {`;\r\n\r\n  const marginPaginPagesItemHover = getResponsiveSetting(settings, 'count_button_item_margin', ':hover');\r\n\r\n  if (marginPaginPagesItemHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginPagesItemHover, 'margin');\r\n  }\r\n\r\n  const backgroundColorPaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_count_item_background_color', ':hover');\r\n\r\n  if (backgroundColorPaginPagesItemHover) {\r\n    styles += colorPropertyStyled(backgroundColorPaginPagesItemHover, 'background-color');\r\n  }\r\n\r\n  const borderTypePaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_type', ':hover');\r\n\r\n  if (borderTypePaginPagesItemHover) {\r\n    styles += simplePropertyStyled(borderTypePaginPagesItemHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_width', ':hover');\r\n\r\n  if (borderWidthPaginPagesItemHover) {\r\n    styles += borderWidthStyled(borderWidthPaginPagesItemHover);\r\n  }\r\n\r\n  const borderRadiusPaginPagesItemHover = getResponsiveSetting(settings, 'table_style_count_item_border_radius', ':hover');\r\n\r\n  if (borderRadiusPaginPagesItemHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginPagesItemHover, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_count_item_border_color', ':hover');\r\n\r\n  if (borderColorPaginPagesItemHover) {\r\n    styles += colorPropertyStyled(borderColorPaginPagesItemHover, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginPagesItemHover = getResponsiveSetting(settings, 'pagination_count_item_shadow', ':hover');\r\n\r\n  if (boxShadowPaginPagesItemHover) {\r\n    styles += shadowControllerToStyles(boxShadowPaginPagesItemHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .active.altrp-pagination-pages__item {`;\r\n\r\n  const colorActivePaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_active_count_text_color');\r\n\r\n  if (colorActivePaginPagesItem) {\r\n    styles += colorPropertyStyled(colorActivePaginPagesItem, 'color');\r\n  }\r\n\r\n  const backgroundColorActivePaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_active_count_item_background_color');\r\n\r\n  if (backgroundColorActivePaginPagesItem) {\r\n    styles += colorPropertyStyled(backgroundColorActivePaginPagesItem, 'background-color');\r\n  }\r\n\r\n  const borderColorActivePaginPagesItem = getResponsiveSetting(settings, 'table_style_pagination_active_count_item_border_color');\r\n\r\n  if (borderColorActivePaginPagesItem) {\r\n    styles += colorPropertyStyled(borderColorActivePaginPagesItem, 'border-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .active.altrp-pagination-pages__item:hover {`;\r\n\r\n  const colorActivePaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_active_count_text_color', ':hover');\r\n\r\n  if (colorActivePaginPagesItemHover) {\r\n    styles += colorPropertyStyled(colorActivePaginPagesItemHover, 'color');\r\n  }\r\n\r\n  const backgroundColorActivePaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_active_count_item_background_color', ':hover');\r\n\r\n  if (backgroundColorActivePaginPagesItemHover) {\r\n    styles += colorPropertyStyled(backgroundColorActivePaginPagesItemHover, 'background-color');\r\n  }\r\n\r\n  const borderColorActivePaginPagesItemHover = getResponsiveSetting(settings, 'table_style_pagination_active_count_item_border_color', ':hover');\r\n\r\n  if (borderColorActivePaginPagesItemHover) {\r\n    styles += colorPropertyStyled(borderColorActivePaginPagesItemHover, 'border-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__ellipsis {`;\r\n\r\n  const marginPaginationEllipsis = getResponsiveSetting(settings, 'ellipsis_margin');\r\n\r\n  if (marginPaginationEllipsis) {\r\n    styles += dimensionsControllerToStyles(marginPaginationEllipsis, 'margin');\r\n  }\r\n\r\n  const colorPaginationEllipsis = getResponsiveSetting(settings, 'ellipsis_color');\r\n\r\n  if (colorPaginationEllipsis) {\r\n    styles += colorPropertyStyled(colorPaginationEllipsis, 'color');\r\n  }\r\n\r\n  const typographicPaginationEllipsis = getResponsiveSetting(settings, 'ellipsis_typographic');\r\n\r\n  if (typographicPaginationEllipsis) {\r\n    styles += typographicControllerToStyles(typographicPaginationEllipsis);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__ellipsis:hover {`;\r\n\r\n  const marginPaginationEllipsisHover = getResponsiveSetting(settings, 'ellipsis_margin', ':hover');\r\n\r\n  if (marginPaginationEllipsisHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginationEllipsisHover, 'margin');\r\n  }\r\n\r\n  const colorPaginationEllipsisHover = getResponsiveSetting(settings, 'ellipsis_color', ':hover');\r\n\r\n  if (colorPaginationEllipsisHover) {\r\n    styles += colorPropertyStyled(colorPaginationEllipsisHover, 'color');\r\n  }\r\n\r\n  const typographicPaginationEllipsisHover = getResponsiveSetting(settings, 'ellipsis_typographic', ':hover');\r\n\r\n  if (typographicPaginationEllipsisHover) {\r\n    styles += typographicControllerToStyles(typographicPaginationEllipsisHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__goto-page {`;\r\n\r\n  const marginPaginationGotoPages = getResponsiveSetting(settings, 'goto-page_margin');\r\n\r\n  if (marginPaginationGotoPages) {\r\n    styles += dimensionsControllerToStyles(marginPaginationGotoPages, 'margin');\r\n  }\r\n\r\n  const paddingPaginationGotoPages = getResponsiveSetting(settings, 'page_input_padding');\r\n\r\n  if (paddingPaginationGotoPages) {\r\n    styles += dimensionsControllerToStyles(paddingPaginationGotoPages);\r\n  }\r\n\r\n  const colorPaginationGotoPages = getResponsiveSetting(settings, 'page_input_text_color');\r\n\r\n  if (colorPaginationGotoPages) {\r\n    styles += colorPropertyStyled(colorPaginationGotoPages, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginationGotoPages = getResponsiveSetting(settings, 'page_input_background_color');\r\n\r\n  if (backgroundColorPaginationGotoPages) {\r\n    styles += colorPropertyStyled(backgroundColorPaginationGotoPages, 'background-color');\r\n  }\r\n\r\n  const borderTypePaginationGotoPages = getResponsiveSetting(settings, 'page_input_border_type');\r\n\r\n  if (borderTypePaginationGotoPages) {\r\n    styles += simplePropertyStyled(borderTypePaginationGotoPages, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginationGotoPages = getResponsiveSetting(settings, 'page_input_border_width');\r\n\r\n  if (borderWidthPaginationGotoPages) {\r\n    styles += borderWidthStyled(borderWidthPaginationGotoPages);\r\n  }\r\n\r\n  const borderRadiusPaginationGotoPages = getResponsiveSetting(settings, 'page_input_border_radius');\r\n\r\n  if (borderRadiusPaginationGotoPages) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginationGotoPages, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginationGotoPages = getResponsiveSetting(settings, 'page_input_border_color');\r\n\r\n  if (borderColorPaginationGotoPages) {\r\n    styles += colorPropertyStyled(borderColorPaginationGotoPages, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginationGotoPages = getResponsiveSetting(settings, 'page_input_shadow');\r\n\r\n  if (boxShadowPaginationGotoPages) {\r\n    styles += shadowControllerToStyles(boxShadowPaginationGotoPages);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__goto-page:hover {`;\r\n\r\n  const marginPaginationGotoPagesHover = getResponsiveSetting(settings, 'goto-page_margin', ':hover');\r\n\r\n  if (marginPaginationGotoPagesHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginationGotoPagesHover, 'margin');\r\n  }\r\n\r\n  const paddingPaginationGotoPagesHover = getResponsiveSetting(settings, 'page_input_padding', ':hover');\r\n\r\n  if (paddingPaginationGotoPagesHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginationGotoPagesHover);\r\n  }\r\n\r\n  const colorPaginationGotoPagesHover = getResponsiveSetting(settings, 'page_input_text_color', ':hover');\r\n\r\n  if (colorPaginationGotoPagesHover) {\r\n    styles += colorPropertyStyled(colorPaginationGotoPagesHover, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginationGotoPagesHover = getResponsiveSetting(settings, 'page_input_background_color', ':hover');\r\n\r\n  if (backgroundColorPaginationGotoPagesHover) {\r\n    styles += colorPropertyStyled(backgroundColorPaginationGotoPagesHover, 'background-color');\r\n  }\r\n\r\n  const borderTypePaginationGotoPagesHover = getResponsiveSetting(settings, 'page_input_border_type', ':hover');\r\n\r\n  if (borderTypePaginationGotoPagesHover) {\r\n    styles += simplePropertyStyled(borderTypePaginationGotoPagesHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginationGotoPagesHover = getResponsiveSetting(settings, 'page_input_border_width', ':hover');\r\n\r\n  if (borderWidthPaginationGotoPagesHover) {\r\n    styles += borderWidthStyled(borderWidthPaginationGotoPagesHover);\r\n  }\r\n\r\n  const borderRadiusPaginationGotoPagesHover = getResponsiveSetting(settings, 'page_input_border_radius', ':hover');\r\n\r\n  if (borderRadiusPaginationGotoPagesHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginationGotoPagesHover, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginationGotoPagesHover = getResponsiveSetting(settings, 'page_input_border_color', ':hover');\r\n\r\n  if (borderColorPaginationGotoPagesHover) {\r\n    styles += colorPropertyStyled(borderColorPaginationGotoPagesHover, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginationGotoPagesHover = getResponsiveSetting(settings, 'page_input_shadow', ':hover');\r\n\r\n  if (boxShadowPaginationGotoPagesHover) {\r\n    styles += shadowControllerToStyles(boxShadowPaginationGotoPagesHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__goto-page {`;\r\n\r\n  const typographicPaginPaginGotoPages = getResponsiveSetting(settings, 'table_style_page_input_pagination_typographic');\r\n\r\n  if (typographicPaginPaginGotoPages) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginGotoPages);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__goto-page:hover {`;\r\n\r\n  const typographicPaginPaginGotoPagesHover = getResponsiveSetting(settings, 'table_style_page_input_pagination_typographic', ':hover');\r\n\r\n  if (typographicPaginPaginGotoPagesHover) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginGotoPagesHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size .altrp-field-select2__control {`;\r\n\r\n  const widthPaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_width');\r\n\r\n  if (widthPaginSelectSizeControl) {\r\n    styles += sizeStyled(widthPaginSelectSizeControl, 'width');\r\n  }\r\n\r\n  const paddingPaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_padding');\r\n\r\n  if (paddingPaginSelectSizeControl) {\r\n    styles += dimensionsControllerToStyles(paddingPaginSelectSizeControl);\r\n  }\r\n\r\n  const borderTypePaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_border_type');\r\n\r\n  if (borderTypePaginSelectSizeControl) {\r\n    styles += simplePropertyStyled(borderTypePaginSelectSizeControl, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_border_width');\r\n\r\n  if (borderWidthPaginSelectSizeControl) {\r\n    styles += borderWidthStyled(borderWidthPaginSelectSizeControl);\r\n  }\r\n\r\n  const borderRadiusPaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_border_radius');\r\n\r\n  if (borderRadiusPaginSelectSizeControl) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginSelectSizeControl, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_border_color');\r\n\r\n  if (borderColorPaginSelectSizeControl) {\r\n    styles += colorPropertyStyled(borderColorPaginSelectSizeControl, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_shadow');\r\n\r\n  if (boxShadowPaginSelectSizeControl) {\r\n    styles += shadowControllerToStyles(boxShadowPaginSelectSizeControl);\r\n  }\r\n\r\n  const colorPaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_text_color');\r\n\r\n  if (colorPaginSelectSizeControl) {\r\n    styles += colorPropertyStyled(colorPaginSelectSizeControl, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginSelectSizeControl = getResponsiveSetting(settings, 'pagination_select_background_color');\r\n\r\n  if (backgroundColorPaginSelectSizeControl) {\r\n    styles += colorPropertyStyled(backgroundColorPaginSelectSizeControl, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size .altrp-field-select2__control:hover {`;\r\n\r\n  const widthPaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_width', ':hover');\r\n\r\n  if (widthPaginSelectSizeControlHover) {\r\n    styles += sizeStyled(widthPaginSelectSizeControlHover, 'width');\r\n  }\r\n\r\n  const paddingPaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_padding', ':hover');\r\n\r\n  if (paddingPaginSelectSizeControlHover) {\r\n    styles += dimensionsControllerToStyles(paddingPaginSelectSizeControlHover);\r\n  }\r\n\r\n  const borderTypePaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_border_type', ':hover');\r\n\r\n  if (borderTypePaginSelectSizeControlHover) {\r\n    styles += simplePropertyStyled(borderTypePaginSelectSizeControlHover, 'border-style');\r\n  }\r\n\r\n  const borderWidthPaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_border_width', ':hover');\r\n\r\n  if (borderWidthPaginSelectSizeControlHover) {\r\n    styles += borderWidthStyled(borderWidthPaginSelectSizeControlHover);\r\n  }\r\n\r\n  const borderRadiusPaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_border_radius', ':hover');\r\n\r\n  if (borderRadiusPaginSelectSizeControlHover) {\r\n    styles += dimensionsControllerToStyles(borderRadiusPaginSelectSizeControlHover, 'border-radius');\r\n  }\r\n\r\n  const borderColorPaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_border_color', ':hover');\r\n\r\n  if (borderColorPaginSelectSizeControlHover) {\r\n    styles += colorPropertyStyled(borderColorPaginSelectSizeControlHover, 'border-color');\r\n  }\r\n\r\n  const boxShadowPaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_shadow', ':hover');\r\n\r\n  if (boxShadowPaginSelectSizeControlHover) {\r\n    styles += shadowControllerToStyles(boxShadowPaginSelectSizeControlHover);\r\n  }\r\n\r\n  const colorPaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_text_color', ':hover');\r\n\r\n  if (colorPaginSelectSizeControlHover) {\r\n    styles += colorPropertyStyled(colorPaginSelectSizeControlHover, 'color');\r\n  }\r\n\r\n  const backgroundColorPaginSelectSizeControlHover = getResponsiveSetting(settings, 'pagination_select_background_color', ':hover');\r\n\r\n  if (backgroundColorPaginSelectSizeControlHover) {\r\n    styles += colorPropertyStyled(backgroundColorPaginSelectSizeControlHover, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__select-size {`;\r\n\r\n  const typographicPaginSelectSize = getResponsiveSetting(settings, 'table_style_pagination_select__pagination_typographic');\r\n\r\n  if (typographicPaginSelectSize) {\r\n    styles += typographicControllerToStyles(typographicPaginSelectSize);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination .altrp-pagination__select-size:hover {`;\r\n\r\n  const typographicPaginPaginSelectSizeHover = getResponsiveSetting(settings, 'table_style_pagination_select__pagination_typographic', ':hover');\r\n\r\n  if (typographicPaginPaginSelectSizeHover) {\r\n    styles += typographicControllerToStyles(typographicPaginPaginSelectSizeHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size {`;\r\n\r\n  const marginPaginSelectSize = getResponsiveSetting(settings, 'pagination_select_margin');\r\n\r\n  if (marginPaginSelectSize) {\r\n    styles += dimensionsControllerToStyles(marginPaginSelectSize, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-pagination__select-size:hover {`;\r\n\r\n  const marginPaginSelectSizeHover = getResponsiveSetting(settings, 'pagination_select_margin', ':hover');\r\n\r\n  if (marginPaginSelectSizeHover) {\r\n    styles += dimensionsControllerToStyles(marginPaginSelectSizeHover, 'margin');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--checked svg {`;\r\n\r\n  const marginCheckIconSvg = getResponsiveSetting(settings, 'checked_icon_margin');\r\n\r\n  if (marginCheckIconSvg) {\r\n    styles += dimensionsControllerToStyles(marginCheckIconSvg, 'margin');\r\n  }\r\n\r\n  const sizeCheckIconSvg = getResponsiveSetting(settings, 'checked_size');\r\n\r\n  if (sizeCheckIconSvg) {\r\n    styles += iconSizeStyled(sizeCheckIconSvg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--checked svg:hover {`;\r\n\r\n  const marginCheckIconSvgHover = getResponsiveSetting(settings, 'checked_icon_margin', ':hover');\r\n\r\n  if (marginCheckIconSvgHover) {\r\n    styles += dimensionsControllerToStyles(marginCheckIconSvgHover, 'margin');\r\n  }\r\n\r\n  const sizeCheckIconSvgHover = getResponsiveSetting(settings, 'checked_size', ':hover');\r\n\r\n  if (sizeCheckIconSvgHover) {\r\n    styles += iconSizeStyled(sizeCheckIconSvgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--unchecked svg {`;\r\n\r\n  const marginUncheckIconSvg = getResponsiveSetting(settings, 'unchecked_icon_margin');\r\n\r\n  if (marginUncheckIconSvg) {\r\n    styles += dimensionsControllerToStyles(marginUncheckIconSvg, 'margin');\r\n  }\r\n\r\n  const sizeUncheckIconSvg = getResponsiveSetting(settings, 'unchecked_size');\r\n\r\n  if (sizeUncheckIconSvg) {\r\n    styles += iconSizeStyled(sizeUncheckIconSvg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--unchecked svg:hover {`;\r\n\r\n  const marginUncheckIconSvgHover = getResponsiveSetting(settings, 'unchecked_icon_margin', ':hover');\r\n\r\n  if (marginUncheckIconSvgHover) {\r\n    styles += dimensionsControllerToStyles(marginUncheckIconSvgHover, 'margin');\r\n  }\r\n\r\n  const sizeUncheckIconSvgHover = getResponsiveSetting(settings, 'unchecked_size', ':hover');\r\n\r\n  if (sizeUncheckIconSvgHover) {\r\n    styles += iconSizeStyled(sizeUncheckIconSvgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--indeterminate svg {`;\r\n\r\n  const marginCheckIconIndeterminateSvg = getResponsiveSetting(settings, 'indeterminate_icon_margin');\r\n\r\n  if (marginCheckIconIndeterminateSvg) {\r\n    styles += dimensionsControllerToStyles(marginCheckIconIndeterminateSvg, 'margin');\r\n  }\r\n\r\n  const sizeCheckIconIndeterminateSvg = getResponsiveSetting(settings, 'indeterminate_size');\r\n\r\n  if (sizeCheckIconIndeterminateSvg) {\r\n    styles += iconSizeStyled(sizeCheckIconIndeterminateSvg);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--indeterminate svg:hover {`;\r\n\r\n  const marginCheckIconIndeterminateSvgHover = getResponsiveSetting(settings, 'indeterminate_icon_margin', ':hover');\r\n\r\n  if (marginCheckIconIndeterminateSvgHover) {\r\n    styles += dimensionsControllerToStyles(marginCheckIconIndeterminateSvgHover, 'margin');\r\n  }\r\n\r\n  const sizeCheckIconIndeterminateSvgHover = getResponsiveSetting(settings, 'indeterminate_size', ':hover');\r\n\r\n  if (sizeCheckIconIndeterminateSvgHover) {\r\n    styles += iconSizeStyled(sizeCheckIconIndeterminateSvgHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--checked path {`;\r\n\r\n  const iconFillCheckIconCheckedPath = getResponsiveSetting(settings, 'checked_icon_color');\r\n\r\n  if (iconFillCheckIconCheckedPath) {\r\n    styles += colorPropertyStyled(iconFillCheckIconCheckedPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--checked:hover path {`;\r\n\r\n  const iconFillCheckIconCheckedPathHover = getResponsiveSetting(settings, 'checked_icon_color', ':hover');\r\n\r\n  if (iconFillCheckIconCheckedPathHover) {\r\n    styles += colorPropertyStyled(iconFillCheckIconCheckedPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--unchecked path {`;\r\n\r\n  const iconFillCheckIconUncheckedPath = getResponsiveSetting(settings, 'unchecked_icon_color');\r\n\r\n  if (iconFillCheckIconUncheckedPath) {\r\n    styles += colorPropertyStyled(iconFillCheckIconUncheckedPath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--unchecked:hover path {`;\r\n\r\n  const iconFillCheckIconUncheckedPathHover = getResponsiveSetting(settings, 'unchecked_icon_color', ':hover');\r\n\r\n  if (iconFillCheckIconUncheckedPathHover) {\r\n    styles += colorPropertyStyled(iconFillCheckIconUncheckedPathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--indeterminate path {`;\r\n\r\n  const iconFillCheckIconIndeterminatePath = getResponsiveSetting(settings, 'indeterminate_icon_color');\r\n\r\n  if (iconFillCheckIconIndeterminatePath) {\r\n    styles += colorPropertyStyled(iconFillCheckIconIndeterminatePath, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .check-icon--indeterminate:hover path {`;\r\n\r\n  const iconFillCheckIconIndeterminatePathHover = getResponsiveSetting(settings, 'indeterminate_icon_color', ':hover');\r\n\r\n  if (iconFillCheckIconIndeterminatePathHover) {\r\n    styles += colorPropertyStyled(iconFillCheckIconIndeterminatePathHover, 'fill');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table__resizer {`;\r\n\r\n  const sliderSizeTableResizer = getResponsiveSetting(settings, 'resize_slider_size');\r\n\r\n  if (sliderSizeTableResizer) {\r\n    styles += sizeStyled(sliderSizeTableResizer, 'width');\r\n  }\r\n\r\n  const backgroundColorTableResizer = getResponsiveSetting(settings, 'resize_slider_color');\r\n\r\n  if (backgroundColorTableResizer) {\r\n    styles += colorPropertyStyled(backgroundColorTableResizer, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table__resizer:hover {`;\r\n\r\n  const sliderSizeTableResizerHover = getResponsiveSetting(settings, 'resize_slider_size', ':hover');\r\n\r\n  if (sliderSizeTableResizerHover) {\r\n    styles += sizeStyled(sliderSizeTableResizerHover, 'width');\r\n  }\r\n\r\n  const backgroundColorTableResizerHover = getResponsiveSetting(settings, 'resize_slider_color', ':hover');\r\n\r\n  if (backgroundColorTableResizerHover) {\r\n    styles += colorPropertyStyled(backgroundColorTableResizerHover, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table__resizer.altrp-table__resizer_resizing {`;\r\n\r\n  const backgroundColorTableResizerResizing = getResponsiveSetting(settings, 'active_resize_slider_color');\r\n\r\n  if (backgroundColorTableResizerResizing) {\r\n    styles += colorPropertyStyled(backgroundColorTableResizerResizing, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-table__resizer.altrp-table__resizer_resizing:hover {`;\r\n\r\n  const backgroundColorTableResizerResizingHover = getResponsiveSetting(settings, 'active_resize_slider_color', ':hover');\r\n\r\n  if (backgroundColorTableResizerResizingHover) {\r\n    styles += colorPropertyStyled(backgroundColorTableResizerResizingHover, 'background-color');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-image {`;\r\n\r\n  const filtersImage = getResponsiveSetting(settings, 'filter_style_border_shadow');\r\n\r\n  if (filtersImage) {\r\n    styles += filtersControllerToStyles(filtersImage);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-image:hover {`;\r\n\r\n  const filtersImageHover = getResponsiveSetting(settings, 'filter_style_border_shadow', ':hover');\r\n\r\n  if (filtersImageHover) {\r\n    styles += filtersControllerToStyles(filtersImageHover);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  return styles;\r\n}\r\n","import {getResponsiveSetting} from '../../helpers';\r\nimport {\r\n  simplePropertyStyled,\r\n  borderWidthStyled,\r\n  colorPropertyStyled,\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  sizeStyled,\r\n  shadowControllerToStyles, sliderStyled, colorStyled,\r\n} from \"../../helpers/styles\";\r\n\r\nconst getTabsStyles = (settings, id) => {\r\n  let styles = \"\";\r\n\r\n  let justifyContent, backgroundColor;\r\n  let color, boxShadow, padding, borderType, borderWidth, borderColor, borderRadius, typographic;\r\n  let fill, background, fontSize, marginBottom, marginRight, marginLeft, marginTop;\r\n\r\n  const parentClass = `.altrp-element${id}`;\r\n\r\n  styles += `${parentClass} .altrp-tabs .bp3-tab-list  {`;\r\n\r\n  //Получаем значения justify-content из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    justifyContent = getResponsiveSetting(settings, 'alignment_tabs');\r\n  }\r\n\r\n  if (justifyContent) {\r\n    styles += simplePropertyStyled(justifyContent, 'justify-content');\r\n  }\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'background_tab_style');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tabs .bp3-tab-list:hover {`;\r\n\r\n  //Получаем значения justify-content из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    justifyContent = getResponsiveSetting(settings, 'alignment_tabs', ':hover');\r\n  }\r\n\r\n  if (justifyContent) {\r\n    styles += simplePropertyStyled(justifyContent, 'justify-content');\r\n  }\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'background_tab_style', ':hover');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tabs.altrp-tabs .bp3-tab p {`;\r\n  //Получаем значения color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    color = getResponsiveSetting(settings, 'background_text_color_tab_style');\r\n  }\r\n\r\n  if (color) {\r\n    styles += colorPropertyStyled(color, 'color');\r\n  }\r\n  styles += \"}\";\r\n\r\n  styles += `${parentClass} .altrp-tabs.altrp-tabs-without-animation.altrp-tabs-horizontal .bp3-tab[aria-selected=\"true\"] {`;\r\n  //Получаем значения color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    color = getResponsiveSetting(settings, 'indicator_color');\r\n  }\r\n\r\n  if (color) {\r\n    if (color) {\r\n      if (color.color) {\r\n        styles += `box-shadow: inset 0 -3px 0 ${color.color};`;\r\n      }\r\n    }\r\n  }\r\n  styles += \"}\";\r\n\r\n  styles += `${parentClass} .altrp-tabs.altrp-tabs-without-animation.altrp-tabs-vertical .bp3-tab[aria-selected=\"true\"] {`;\r\n  //Получаем значения color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    color = getResponsiveSetting(settings, 'indicator_color');\r\n  }\r\n\r\n  if (color) {\r\n    if (color) {\r\n      if (color.color) {\r\n        styles += colorStyled(color, \"background-color\");\r\n      }\r\n    }\r\n  }\r\n  styles += \"}\";\r\n\r\n  styles += `${parentClass} .altrp-tabs.altrp-tabs .bp3-tab.active p {`;\r\n  //Получаем значения color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    color = getResponsiveSetting(settings, 'background_text_color_tab_style', \".active\");\r\n  }\r\n\r\n  if (color) {\r\n    styles += colorPropertyStyled(color, 'color');\r\n  }\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `${parentClass} .altrp-tabs  .bp3-tab.bp3-tab.bp3-tab {`;\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'background_type_tab_style');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  //Получаем значения box-shadow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    boxShadow = getResponsiveSetting(settings, 'box_shadow_tab_style');\r\n  }\r\n\r\n  if (boxShadow) {\r\n    styles += shadowControllerToStyles(boxShadow);\r\n  }\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'padding_tab_style');\r\n  }\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderType = getResponsiveSetting(settings, 'border_type_tab_style');\r\n  }\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'border_width_tab_style');\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'border_color_tab_style');\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'border_radius_tab_style');\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += sizeStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения typographic из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    typographic = getResponsiveSetting(settings, 'typographic_tab_style');\r\n  }\r\n\r\n  if (typographic) {\r\n    styles += typographicControllerToStyles(typographic);\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tabs  .bp3-tab.bp3-tab.bp3-tab.active {`;\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'background_type_tab_style', \".active\");\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  //Получаем значения box-shadow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    boxShadow = getResponsiveSetting(settings, 'box_shadow_tab_style', \".active\");\r\n  }\r\n\r\n  if (boxShadow) {\r\n    styles += shadowControllerToStyles(boxShadow);\r\n  }\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'padding_tab_style', \".active\");\r\n  }\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderType = getResponsiveSetting(settings, 'border_type_tab_style', \".active\");\r\n  }\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'border_width_tab_style', \".active\");\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'border_color_tab_style', \".active\");\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'border_radius_tab_style', \".active\");\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += sizeStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения typographic из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    typographic = getResponsiveSetting(settings, 'typographic_tab_style', \".active\");\r\n  }\r\n\r\n  if (typographic) {\r\n    styles += typographicControllerToStyles(typographic);\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tabs.altrp-tabs  .bp3-tab:hover p {`;\r\n  //Получаем значения color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    color = getResponsiveSetting(settings, 'background_text_color_tab_style', \":hover\");\r\n  }\r\n\r\n  if (color) {\r\n    styles += colorPropertyStyled(color, 'color');\r\n  }\r\n\r\n  styles += \"}\";\r\n\r\n  styles += `${parentClass} .altrp-tabs .bp3-tab.bp3-tab.bp3-tab:hover {`;\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'background_type_tab_style', ':hover');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  //Получаем значения box-shadow из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    boxShadow = getResponsiveSetting(settings, 'box_shadow_tab_style', ':hover');\r\n  }\r\n\r\n  if (boxShadow) {\r\n    styles += shadowControllerToStyles(boxShadow);\r\n  }\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'padding_tab_style', ':hover');\r\n  }\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderType = getResponsiveSetting(settings, 'border_type_tab_style', ':hover');\r\n  }\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'border_width_tab_style', ':hover');\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'border_color_tab_style', ':hover');\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'border_radius_tab_style', ':hover');\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += sizeStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n  //Получаем значения typographic из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    typographic = getResponsiveSetting(settings, 'typographic_tab_style', ':hover');\r\n  }\r\n\r\n  if (typographic) {\r\n    styles += typographicControllerToStyles(typographic);\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tab-content {`;\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'background_content_style');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'padding_content_style');\r\n  }\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderType = getResponsiveSetting(settings, 'border_type_content_style');\r\n  }\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'border_width_content_style');\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'border_color_content_style');\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'border_radius_content_style');\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += simplePropertyStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tab-content:hover {`;\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    backgroundColor = getResponsiveSetting(settings, 'background_content_style', ':hover');\r\n  }\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    padding = getResponsiveSetting(settings, 'padding_content_style', ':hover');\r\n  }\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderType = getResponsiveSetting(settings, 'border_type_content_style', ':hover');\r\n  }\r\n\r\n  if (borderType) {\r\n    styles += simplePropertyStyled(borderType, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderWidth = getResponsiveSetting(settings, 'border_width_content_style', ':hover');\r\n  }\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    borderColor = getResponsiveSetting(settings, 'border_color_content_style', ':hover');\r\n  }\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n\r\n  if (settings !== undefined) {\r\n    borderRadius = getResponsiveSetting(settings, 'border_radius_content_style', ':hover');\r\n  }\r\n\r\n  if (borderRadius) {\r\n    styles += simplePropertyStyled(borderRadius, 'border-radius');\r\n  }\r\n\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tab-content div {`;\r\n\r\n  //Получаем значения color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    color = getResponsiveSetting(settings, 'text_color_content_style');\r\n  }\r\n\r\n  if (color) {\r\n    styles += colorPropertyStyled(color, 'color');\r\n  }\r\n\r\n  //Получаем значения typographic из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    typographic = getResponsiveSetting(settings, 'typographic_content_style');\r\n  }\r\n\r\n  if (typographic) {\r\n    styles += typographicControllerToStyles(typographic);\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tab-content div:hover {`;\r\n\r\n  //Получаем значения color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    color = getResponsiveSetting(settings, 'text_color_content_style', ':hover');\r\n  }\r\n\r\n  if (color) {\r\n    styles += colorPropertyStyled(color, 'color');\r\n  }\r\n\r\n  //Получаем значения typographic из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    typographic = getResponsiveSetting(settings, 'typographic_content_style', ':hover');\r\n  }\r\n\r\n  if (typographic) {\r\n    styles += typographicControllerToStyles(typographic);\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  const i_size = getResponsiveSetting(settings, 'i_size')\r\n  if(i_size){\r\n    styles += `${parentClass} .altrp-tab-btn-icon img, ${parentClass} .altrp-tab-btn-icon svg{`;\r\n\r\n    styles += `width:${sliderStyled(i_size)};height:${sliderStyled(i_size)};`\r\n\r\n    styles += \"} \";\r\n\r\n  }\r\n  styles += `${parentClass} .altrp-tab-btn-icon svg path {`;\r\n\r\n  //Получаем значения fill из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    fill = getResponsiveSetting(settings, 'color_icon_style');\r\n  }\r\n\r\n  if (fill) {\r\n    styles += colorPropertyStyled(fill, 'fill');\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tab-btn-icon:hover svg path {`;\r\n\r\n  //Получаем значения fill из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    fill = getResponsiveSetting(settings, 'color_icon_style', ':hover');\r\n  }\r\n\r\n  if (fill) {\r\n    styles += colorPropertyStyled(fill, 'fill');\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n\r\n  styles += `${parentClass} .altrp-tab-btn-column {`;\r\n\r\n  //Получаем значения margin-right в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    marginRight = getResponsiveSetting(settings, 'spacing_column_tabs');\r\n  }\r\n\r\n  if (marginRight) {\r\n    styles += sizeStyled(marginRight, 'margin-right');\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tab-btn-column:hover {`;\r\n\r\n  //Получаем значения margin-right в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    marginRight = getResponsiveSetting(settings, 'spacing_column_tabs', ':hover');\r\n  }\r\n\r\n  if (marginRight) {\r\n    styles += sizeStyled(marginRight, 'margin-right');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-tab-btn-row {`;\r\n\r\n  //Получаем значения margin-bottom в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    marginBottom = getResponsiveSetting(settings, 'spacing_column_tabs');\r\n  }\r\n\r\n  if (marginBottom) {\r\n    styles += sizeStyled(marginBottom, 'margin-bottom');\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tab-btn-row:hover {`;\r\n\r\n  //Получаем значения margin-bottom в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    marginBottom = getResponsiveSetting(settings, 'spacing_column_tabs', ':hover');\r\n  }\r\n\r\n  if (marginBottom) {\r\n    styles += sizeStyled(marginBottom, 'margin-bottom');\r\n  }\r\n\r\n  styles += \"} \";\r\n\r\n  styles += `${parentClass} .altrp-tab-vertical.bp3-tab-panel {`;\r\n\r\n  //Получаем значения margin-right в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    marginRight = getResponsiveSetting(settings, 'spacing_content_tabs');\r\n  }\r\n\r\n  if (marginRight) {\r\n    styles += sizeStyled(marginRight, 'margin-left');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-tab-vertical.bp3-tab {`;\r\n\r\n  //Получаем значения margin-right в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    marginRight = getResponsiveSetting(settings, 'spacing_column_tabs');\r\n  }\r\n\r\n  if (marginRight) {\r\n    styles += sizeStyled(marginRight, 'margin-bottom');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-tab-horizontal.bp3-tab-panel {`;\r\n\r\n  //Получаем значения margin-right в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    marginRight = getResponsiveSetting(settings, 'spacing_content_tabs');\r\n  }\r\n\r\n  if (marginRight) {\r\n    styles += sizeStyled(marginRight, 'margin-top');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-tab-horizontal.bp3-tab {`;\r\n\r\n  //Получаем значения margin-right в точных юнитах из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    marginRight = getResponsiveSetting(settings, 'spacing_column_tabs');\r\n  }\r\n\r\n  if (marginRight) {\r\n    styles += sizeStyled(marginRight, 'margin-right');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .bp3-tab-indicator-wrapper {`;\r\n\r\n  styles += `} `;\r\n\r\n\r\n  styles += `${parentClass} .bp3-tab-indicator.bp3-tab-indicator.bp3-tab-indicator.bp3-tab-indicator {`;\r\n\r\n  let indicatorColor = getResponsiveSetting(settings, 'indicator_color')\r\n\r\n  if (indicatorColor && indicatorColor.color) {\r\n    styles += colorPropertyStyled(indicatorColor, \"background-color\",);\r\n  }\r\n  styles += `} `;\r\n\r\n  if (indicatorColor && indicatorColor.color) {\r\n    styles += `${parentClass} .altrp-tabs-horizontal .bp3-tab-indicator-wrapper ~ .altrp-tab-btn.active {`;\r\n    styles += `box-shadow: inset 0 -3px ${indicatorColor.color};`\r\n    styles += `} `;\r\n  }\r\n  styles += `${parentClass} .altrp-tab {`;\r\n\r\n  let contentBackgroundColor,\r\n    contentPadding,\r\n    contentBorderType,\r\n    contentBorderWidth,\r\n    contentBorderColor,\r\n    contentBorderRadius;\r\n\r\n  //Получаем значения background-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    contentBackgroundColor = getResponsiveSetting(settings, 'background_content_style');\r\n  }\r\n\r\n  if (contentBackgroundColor) {\r\n    styles += colorPropertyStyled(contentBackgroundColor, 'background-color');\r\n  }\r\n\r\n  //Получаем значения padding из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    contentPadding = getResponsiveSetting(settings, 'padding_content_style');\r\n  }\r\n\r\n  if (contentPadding) {\r\n    styles += dimensionsControllerToStyles(contentPadding);\r\n  }\r\n\r\n  //Получаем значения border-type из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    contentBorderType = getResponsiveSetting(settings, 'border_type_content_style');\r\n  }\r\n\r\n  if (contentBorderType) {\r\n    styles += simplePropertyStyled(contentBorderType, 'border-style');\r\n  }\r\n\r\n  //Получаем значения border-width из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    contentBorderWidth = getResponsiveSetting(settings, 'border_width_content_style');\r\n  }\r\n\r\n  if (contentBorderWidth) {\r\n    styles += borderWidthStyled(contentBorderWidth);\r\n  }\r\n\r\n  //Получаем значения border-color из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    contentBorderColor = getResponsiveSetting(settings, 'border_color_content_style');\r\n  }\r\n\r\n  if (contentBorderColor) {\r\n    styles += colorPropertyStyled(contentBorderColor, 'border-color');\r\n  }\r\n\r\n  //Получаем значения border-radius из контроллера, обрабатываем и добавляем в styles\r\n\r\n  if (settings !== undefined) {\r\n    contentBorderRadius = getResponsiveSetting(settings, 'border_radius_content_style');\r\n  }\r\n\r\n  if (contentBorderRadius) {\r\n    styles += `border-radius:${sliderStyled(contentBorderRadius)}`;\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  return styles;\r\n}\r\n\r\nexport default getTabsStyles;\r\n","import {\r\n  dimensionsControllerToStyles,\r\n  typographicControllerToStyles,\r\n  simplePropertyStyled,\r\n  colorPropertyStyled,\r\n  borderWidthStyled,\r\n  borderRadiusStyled,\r\n  columnGapStyled,\r\n  opacityStyled,\r\n  sliderStyled,\r\n  shadowControllerToStyles,\r\n  textShadowControllerToStyles,\r\n  dimensionsStyled,\r\n} from '../../helpers/styles';\r\nimport { getResponsiveSetting } from '../../helpers';\r\n\r\n/**\r\n * Преобразует объект стилей, который задается в виджете Text в строку css для вставки в GlobalStyles\r\n * @param {{}} settings\r\n * @param {string} id\r\n * @return {string}\r\n */\r\n\r\nexport function getTextStyles(settings, id) {\r\n  let styles = '';\r\n\r\n  if (settings === undefined) {\r\n    return styles;\r\n  }\r\n\r\n  const parentClass = `.altrp-element${id}`;\r\n\r\n  styles += `${parentClass} .altrp-text {`;\r\n\r\n  const columnCount = getResponsiveSetting(settings, 'text_style_column-count');\r\n\r\n  if (columnCount) {\r\n    styles += simplePropertyStyled(columnCount, 'column-count');\r\n  }\r\n\r\n  const columnGap = getResponsiveSetting(settings, 'text_style_column-gap');\r\n\r\n  if (columnGap) {\r\n    styles += columnGapStyled(columnGap);\r\n  }\r\n\r\n  const padding = getResponsiveSetting(settings, 'text_style_position_padding');\r\n\r\n  if (padding) {\r\n    styles += dimensionsControllerToStyles(padding);\r\n  }\r\n\r\n  const margin = getResponsiveSetting(settings, 'text_style_position_margin');\r\n\r\n  if (margin) {\r\n    styles += dimensionsControllerToStyles(margin, 'margin');\r\n  }\r\n\r\n  const zIndex = getResponsiveSetting(settings, 'text_position_z_index');\r\n\r\n  if (zIndex) {\r\n    styles += simplePropertyStyled(zIndex, 'z-index');\r\n  }\r\n\r\n  const backgroundColor = getResponsiveSetting(settings, 'text_style_background_color');\r\n\r\n  if (backgroundColor) {\r\n    styles += colorPropertyStyled(backgroundColor, 'background-color');\r\n  }\r\n\r\n  const opacity = getResponsiveSetting(settings, 'text_style_background_opacity');\r\n\r\n  if (opacity) {\r\n    styles += opacityStyled(opacity, 'opacity');\r\n  }\r\n\r\n  const typographic = getResponsiveSetting(settings, 'text_style_font_typographic');\r\n\r\n  if (typographic) {\r\n    styles += typographicControllerToStyles(typographic);\r\n  }\r\n\r\n  const color = getResponsiveSetting(settings, 'text_style_font_color');\r\n\r\n  if (color) {\r\n    styles += colorPropertyStyled(color, 'color');\r\n  }\r\n\r\n  const borderStyle = getResponsiveSetting(settings, 'text_style_border_type');\r\n\r\n  if (borderStyle) {\r\n    styles += simplePropertyStyled(borderStyle, 'border-style');\r\n  }\r\n\r\n  const borderWidth = getResponsiveSetting(settings, 'text_style_border_width');\r\n\r\n  if (borderWidth) {\r\n    styles += borderWidthStyled(borderWidth);\r\n  }\r\n\r\n  const borderColor = getResponsiveSetting(settings, 'text_style_border_color');\r\n\r\n  if (borderColor) {\r\n    styles += colorPropertyStyled(borderColor, 'border-color');\r\n  }\r\n\r\n  const borderRadius = getResponsiveSetting(settings, 'text_style_border_radius');\r\n\r\n  if (borderRadius) {\r\n    styles += borderRadiusStyled(borderRadius);\r\n  }\r\n\r\n  styles += `} `;\r\n  //hover\r\n\r\n  styles+=`${parentClass} .altrp-text p {`\r\n\r\n  const paragraphMargin = getResponsiveSetting(settings, 'text_paragraph_margin');\r\n\r\n  if (paragraphMargin) {\r\n    styles += dimensionsControllerToStyles(paragraphMargin, 'margin');\r\n  }\r\n\r\n  const textIndent = getResponsiveSetting(settings,\"text_paragraph_indent\");\r\n\r\n  if (textIndent){\r\n    styles+=`text-indent:${sliderStyled(textIndent)};`;\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles+=`${parentClass} .altrp-text blockquote {`\r\n\r\n  const blockquoteMargin = getResponsiveSetting(settings, 'text_blockquote_margin');\r\n\r\n  if (blockquoteMargin) {\r\n    styles += dimensionsControllerToStyles(blockquoteMargin, 'margin');\r\n  }\r\n\r\n  const blockquotePadding = getResponsiveSetting(settings, 'text_blockquote_padding');\r\n\r\n  if (blockquotePadding) {\r\n    styles += dimensionsControllerToStyles(blockquotePadding, 'padding');\r\n  }\r\n\r\n  const blockquoteBackgroundColor = getResponsiveSetting(settings, 'text_blockquote_background_color');\r\n\r\n  if (blockquoteBackgroundColor) {\r\n    styles += colorPropertyStyled(blockquoteBackgroundColor, 'background-color');\r\n  }\r\n\r\n  const blockquoteBorderStyle = getResponsiveSetting(settings, 'text_blockquote_border_type');\r\n\r\n  if (blockquoteBorderStyle) {\r\n    styles += simplePropertyStyled(blockquoteBorderStyle, 'border-style');\r\n  }\r\n\r\n  const blockquoteBorderWidth = getResponsiveSetting(settings, 'text_blockquote_border_width');\r\n\r\n  if (blockquoteBorderWidth) {\r\n    styles += borderWidthStyled(blockquoteBorderWidth);\r\n  }\r\n\r\n  const blockquoteBorderColor = getResponsiveSetting(settings, 'text_blockquote_border_color');\r\n\r\n  if (blockquoteBorderColor) {\r\n    styles += colorPropertyStyled(blockquoteBorderColor, 'border-color');\r\n  }\r\n\r\n  const blockquoteBorderRadius = getResponsiveSetting(settings, 'text_blockquote_border_radius');\r\n\r\n  if (blockquoteBorderRadius) {\r\n    styles += borderRadiusStyled(blockquoteBorderRadius);\r\n  }\r\n\r\n  const blockquoteBoxShadow = getResponsiveSetting(\r\n    settings,\r\n    \"text_blockquote_box_shadow\"\r\n  );\r\n\r\n  if (blockquoteBoxShadow) {\r\n    styles += shadowControllerToStyles(blockquoteBoxShadow);\r\n  }\r\n\r\n  const blockquoteTypographic = getResponsiveSetting(settings, 'text_blockquote_font_typographic');\r\n\r\n  if (blockquoteTypographic) {\r\n    styles += typographicControllerToStyles(blockquoteTypographic);\r\n  }\r\n\r\n\r\n  const blockquoteTextShadow = getResponsiveSetting(\r\n    settings,\r\n    \"text_blockquote_text_shadow\"\r\n  );\r\n\r\n  if (blockquoteTextShadow) {\r\n    styles += textShadowControllerToStyles(blockquoteTextShadow);\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-text table {`\r\n\r\n  const tableMargin = getResponsiveSetting(settings, 'text_table_margin');\r\n\r\n  if (tableMargin) {\r\n    styles += dimensionsControllerToStyles(tableMargin, 'margin');\r\n  }\r\n\r\n  const tableBackgroundColor = getResponsiveSetting(settings, 'text_table_background_color');\r\n\r\n  if (tableBackgroundColor) {\r\n    styles += colorPropertyStyled(tableBackgroundColor, 'background-color');\r\n  }\r\n\r\n  const tableBorderStyle = getResponsiveSetting(settings, 'text_table_border_type');\r\n\r\n  if (tableBorderStyle) {\r\n    styles += simplePropertyStyled(tableBorderStyle, 'border-style',\"!important\");\r\n  }\r\n\r\n  const tableBorderWidth = getResponsiveSetting(settings, 'text_table_border_width');\r\n\r\n  if (tableBorderWidth) {\r\n    styles += borderWidthStyled(tableBorderWidth,\"!important\");\r\n  }\r\n\r\n  const tableBorderColor = getResponsiveSetting(settings, 'text_table_border_color');\r\n\r\n  if (tableBorderColor) {\r\n    styles += colorPropertyStyled(tableBorderColor, 'border-color',\"!important\");\r\n  }\r\n\r\n  // const tableBorderRadius = getResponsiveSetting(settings, 'text_table_border_radius');\r\n\r\n  // if (tableBorderRadius) {\r\n  //   styles += borderRadiusStyled(tableBorderRadius);\r\n  // }\r\n\r\n  const tableOddRowsColor = getResponsiveSetting(settings,\"text_table_odd_rows_color\");\r\n\r\n  if(tableOddRowsColor){\r\n    styles+=`tr:nth-child(odd) {${colorPropertyStyled(tableOddRowsColor,\"background\")}}`\r\n  }\r\n\r\n  styles+= \"th,td {\";\r\n\r\n  const tableCellsPadding = getResponsiveSetting(settings, 'text_table_padding');\r\n\r\n  if (tableCellsPadding) {\r\n    styles += dimensionsStyled(tableCellsPadding, 'padding',\"!important\");\r\n  }\r\n\r\n  const tableCellsBorderStyle = getResponsiveSetting(settings, 'text_table_cells_border_type');\r\n\r\n  if (tableCellsBorderStyle) {\r\n    styles += simplePropertyStyled(tableCellsBorderStyle, 'border-style',\"!important\");\r\n  }\r\n\r\n  const tableCellsBorderWidth = getResponsiveSetting(settings, 'text_table_cells_border_width');\r\n\r\n  if (tableCellsBorderWidth) {\r\n    styles += borderWidthStyled(tableCellsBorderWidth,\"!important\");\r\n  }\r\n\r\n  const tableCellsBorderColor = getResponsiveSetting(settings, 'text_table_cells_border_color');\r\n\r\n  if (tableCellsBorderColor) {\r\n    styles += colorPropertyStyled(tableCellsBorderColor, 'border-color',\"!important\");\r\n  }\r\n\r\n  // const tableCellsBorderRadius = getResponsiveSetting(settings, 'text_table_cells_border_radius');\r\n\r\n  // if (tableCellsBorderRadius) {\r\n  //   styles += borderRadiusStyled(tableCellsBorderRadius);\r\n  // }\r\n\r\n  const tableCellsTypographic = getResponsiveSetting(settings, 'text_table_cells_font_typographic');\r\n\r\n  if (tableCellsTypographic) {\r\n    styles += typographicControllerToStyles(tableCellsTypographic);\r\n  }\r\n\r\n\r\n  const tableCellsTextShadow = getResponsiveSetting(\r\n    settings,\r\n    \"text_table_cells_text_shadow\"\r\n  );\r\n\r\n  if (tableCellsTextShadow) {\r\n    styles += textShadowControllerToStyles(tableCellsTextShadow);\r\n  }\r\n\r\n  styles+=\"}\"\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-text a {`;\r\n\r\n  const linkTypographic = getResponsiveSetting(settings, 'text_link_font_typographic');\r\n\r\n  if (linkTypographic) {\r\n    styles += typographicControllerToStyles(linkTypographic);\r\n  }\r\n\r\n  const linkTextShadow = getResponsiveSetting(\r\n    settings,\r\n    \"text_link_text_shadow\"\r\n  );\r\n\r\n  if (linkTextShadow) {\r\n    styles += textShadowControllerToStyles(linkTextShadow);\r\n  }\r\n  //\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-text ol {`;\r\n\r\n  const numberedListMargin = getResponsiveSetting(settings, 'text_numbered_list_margin');\r\n\r\n  if (numberedListMargin) {\r\n    styles += dimensionsControllerToStyles(numberedListMargin, 'margin');\r\n  }\r\n\r\n  const numberedListItemMargin = getResponsiveSetting(settings, 'text_numbered_list_item_margin');\r\n\r\n  if (numberedListItemMargin) {\r\n    styles += `li{ ${dimensionsControllerToStyles(numberedListItemMargin, 'margin')}}`;\r\n  }\r\n\r\n  const numberedListStyle = getResponsiveSetting(settings, 'text_numbered_list_style_type');\r\n\r\n  if (numberedListStyle) {\r\n    styles += simplePropertyStyled(numberedListStyle, 'list-style-type');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-text ul {`;\r\n\r\n  const unorderedListMargin = getResponsiveSetting(settings, 'text_unordered_list_margin');\r\n\r\n  if (unorderedListMargin) {\r\n    styles += dimensionsControllerToStyles(unorderedListMargin, 'margin');\r\n  }\r\n\r\n  const unorderedListItemMargin = getResponsiveSetting(settings, 'text_unordered_list_item_margin');\r\n\r\n  if (unorderedListItemMargin) {\r\n    styles += `li{ ${dimensionsControllerToStyles(unorderedListItemMargin, 'margin')}}`;\r\n  }\r\n\r\n  const unorderedListStyle = getResponsiveSetting(settings, 'text_unordered_list_style_type');\r\n\r\n  if (unorderedListStyle) {\r\n    styles += simplePropertyStyled(unorderedListStyle, 'list-style-type');\r\n  }\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .altrp-text img {`;\r\n\r\n  styles += `max-width: 100%; `\r\n\r\n  styles += `} `;\r\n\r\n  styles += `${parentClass} .ck.ck-editor__editable_inline {`;\r\n\r\n  styles += `padding: 0; `\r\n\r\n  styles += `} `;\r\n\r\n\r\n  return styles;\r\n}\r\n","const FRONT_DEFAULT_AREAS = [\r\n  'content', 'footer', 'header', 'popups',\r\n];\r\nexport default  function getRouteStyles(areas){\r\n  if(! areas || !_.isArray(areas)){\r\n    return '';\r\n  }\r\n  let styles = `\r\n.route-content {\r\n  min-height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n}`\r\n\r\n  areas = areas.filter(area=>FRONT_DEFAULT_AREAS.indexOf(area.id) === -1)\r\n  if(! areas.length){\r\n    return styles;\r\n  }\r\n  styles += `.route-content.route-content{`;\r\n\r\n  styles += 'display:grid;grid-template-rows:auto 1fr auto;'\r\n  let columnsGrid = '';\r\n  let rightSidebar = areas.find(area=>area.settings.area_type === 'sidebar'\r\n    && area.settings.sidebar_location === 'right');\r\n  let leftSidebar = areas.find(area=>area.settings.area_type === 'sidebar'\r\n    && area.settings.sidebar_location === 'left');\r\n  columnsGrid += leftSidebar ? `${leftSidebar.settings.sidebar_width}` : '0px';\r\n  columnsGrid += ` calc(100% - ${leftSidebar ? `${leftSidebar.settings.sidebar_width}` : '0px'} - ${rightSidebar ? `${rightSidebar.settings.sidebar_width}` : '0px'}) `;\r\n  columnsGrid += rightSidebar ? `${rightSidebar.settings.sidebar_width}` : '0px';\r\n\r\n  let contentRow = '';\r\n  contentRow = leftSidebar ? `left-sidebar content` : `content content`;\r\n  contentRow += rightSidebar ? ` right-sidebar` : ` content`;\r\n\r\n  styles += `grid-template-columns:${columnsGrid};grid-template-areas:\r\n    '${_.get(leftSidebar, 'settings.sidebar_type') === 'app_sidebar' ? 'left-sidebar' : 'header'} header ${_.get(rightSidebar, 'settings.sidebar_type') === 'app_sidebar' ? 'right-sidebar' : 'header'}'\r\n    '${contentRow}'\r\n    '${_.get(leftSidebar, 'settings.sidebar_type') === 'app_sidebar' ? 'left-sidebar' : 'footer'} footer ${_.get(rightSidebar, 'settings.sidebar_type') === 'app_sidebar' ? 'right-sidebar' :'footer'}';\r\n    `\r\n\r\n  styles += '}'\r\n  styles += '& .app-area_sidebar-location-left{grid-area:left-sidebar;overflow:hidden;}'\r\n  styles += '& .app-area_sidebar-location-right{grid-area:right-sidebar;overflow:hidden;}'\r\n  styles += '& .app-area_header{grid-area:header;}'\r\n  styles += '& .app-area_footer{grid-area:footer;}'\r\n  styles += '& .app-area_content{grid-area:content;}'\r\n  styles += '& .altrp-section.altrp-section--full-width,& .altrp-section.altrp-section--boxed{max-width:100%;} & .sections-wrapper{max-width: 100%;width: 100%;}'\r\n  if(rightSidebar){\r\n    styles += rightSidebar.getCustomCSS();\r\n    if(rightSidebar.getSetting('sidebar_fixed')){\r\n      styles += `& .app-area_sidebar-location-right .sections-wrapper.sections-wrapper.sections-wrapper{overflow:hidden;position:fixed;top:0;right:0;width:${rightSidebar.getSetting('sidebar_width', '0px')};}`\r\n    }\r\n  }\r\n  if(leftSidebar){\r\n    styles += leftSidebar.getCustomCSS();\r\n    if(leftSidebar.getSetting('sidebar_fixed')){\r\n      styles += `& .app-area_sidebar-location-left .sections-wrapper.sections-wrapper.sections-wrapper{overflow:hidden;position:fixed;top:0;left:0;width:${leftSidebar.getSetting('sidebar_width', '0px')};}`\r\n    }\r\n  }\r\n  styles += `.app-area > .sections-wrapper.sections-wrapper{width:100%;}`\r\n  return  styles;\r\n}\r\n"],"sourceRoot":""}