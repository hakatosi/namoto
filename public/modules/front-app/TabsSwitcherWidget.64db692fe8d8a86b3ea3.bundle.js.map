{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack:///./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./resources/modules/editor/src/js/classes/AltrpModel.js","webpack:///./resources/modules/editor/src/js/components/altrp-image/Skeleton.js","webpack:///./resources/modules/editor/src/js/components/altrp-image/ImagePlaceholder.js","webpack:///./resources/modules/editor/src/js/components/altrp-image/AltrpImage.js","webpack:///./resources/modules/editor/src/js/components/altrp-lightbox/AltrpLightbox.js","webpack:///./resources/modules/editor/src/js/components/widgets/ImageLightboxWidget.js","webpack:///./resources/modules/editor/src/js/components/widgets/TabsSwitcherWidget.js"],"names":["_getPrototypeOf","o","Object","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","TypeError","prototype","create","constructor","value","writable","configurable","_possibleConstructorReturn","self","call","_typeof","obj","Symbol","iterator","AltrpModel","data","this","cloneDeep","clone","isEmpty","name","defaultValue","get","has","getData","set","unset","window","defaultBaseColor","SkeletonSpan","styled","duration","delay","keyframes","Math","floor","undefined","color","highlightColor","props","className","_","isNumber","width","settings","aspect_ratio_size","getResponsiveSetting","Number","height","indexOf","style","custom_aspect","isString","mediaWidth","mediaHeight","altrpHelpers","isEditor","isSSR","renderAsset","AltrpImage","imageRef","React","createRef","visible","element","lazy","altrpImageLazy","state","update","timeoutId","setTimeout","setState","clearTimeout","prevProps","prevState","current","getRoot","popupGUID","popupTrigger","popupID","scrollPosition","scroller","mainScrollbars","document","querySelector","checkElementInViewBox","media","image","noDefault","placeholderStyles","File","default","keys","length","url","assetType","background","placeholder","main_color","ref","getSettings","altrpSkeletonColor","altrpSkeletonHighlightColor","cloneElement","id","Fragment","Component","reactRedux","connect","AltrpLightbox","images","nextSrc","prevSrc","mainSrc","onMovePrevRequest","onMoveNextRequest","wrapperClassName","globalDefaults","push","Link","ImageLightboxWidget","lightbox","component","elementDecorator","baseRender","render","link","image_link","activeLightbox","cursorPointer","background_image","classNames","content_media","model","hasCardModel","getCardModel","currentModel","content_path","isObject","getDataByPath","altrpImage","position_css_id","position_css_classes","onCloseRequest","toPrevPage","onClick","history","back","linkUrl","parseURLTemplate","getCurrentModel","linkProps","openInNew","target","tag","href","to","TemplateLoader","TabsSwitcherWidget","switcher","onChange","bind","s","oneTitle","oneType","oneWysiwyg","oneTemplate","twoTitle","twoType","twoWysiwyg","twoTemplate","getContent","type","contentValue","dangerouslySetInnerHTML","__html","wysiwyg","template","templateId","content","checked"],"mappings":"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","file":"TabsSwitcherWidget.64db692fe8d8a86b3ea3.bundle.js","sourcesContent":["export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","/**\r\n * Имеет интерфейс для доступы к свойствам data (любой вложенности)\r\n * @class AltrpModel\r\n */\r\nimport cloneDeep from 'lodash.clonedeep';\r\nimport get from 'lodash.get';\r\nimport set from 'lodash.set';\r\nimport has from 'lodash.has';\r\nimport unset from 'lodash.unset';\r\nimport isEmpty from 'lodash.isempty';\r\n// import {cloneDeep, get, set, has, unset, isString, isEmpty} from \"lodash\";\r\n\r\nclass AltrpModel {\r\n  constructor(data = {}) {\r\n    this.data = cloneDeep(data);\r\n  }\r\n\r\n  /**\r\n   * Возваращает объект данных\r\n   * @params {boolean} clone - клонировать или ссылку на данные\r\n   * @return {{}}\r\n   */\r\n  getData(clone = true) {\r\n    if(clone){\r\n      return cloneDeep(this.data);\r\n    }\r\n    return this.data;\r\n  }\r\n\r\n  /**\r\n   * Пустой ли объект\r\n   */\r\n  isEmpty(){\r\n    return isEmpty(this.data);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  getProperty(name, defaultValue = '') {\r\n    return get(this.data, name, defaultValue);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {*}\r\n   */\r\n  hasProperty(name, defaultValue = '') {\r\n    return has(this.data, name);\r\n  }\r\n  /**\r\n   * Возврашает значение свойства name\r\n   * @params {string} name\r\n   * @params {*} defaultValue\r\n   * @return {{}}\r\n   */\r\n  setProperty(name, value = '') {\r\n    if(value instanceof AltrpModel){\r\n      value = value.getData(false);\r\n    }\r\n    return set(this.data, name, value);\r\n  }\r\n  /**\r\n   * Удаляет свойства name\r\n   * @params {string} name\r\n   * @return {*}\r\n   */\r\n  unsetProperty(name) {\r\n    return unset(this.data, name);\r\n  }\r\n}\r\nwindow.AltrpModel = AltrpModel;\r\nexport default AltrpModel\r\n","import styled, { keyframes} from 'styled-components';\r\n\r\nexport const defaultBaseColor = \"#eee\";\r\n\r\nexport const defaultHighlightColor = \"#f5f5f5\";\r\n\r\nexport const skeletonKeyframes = (duration, delay) => keyframes`\r\n  0% {\r\n    background-position: -200px 0;\r\n  }\r\n  ${\r\n  delay > 0\r\n    ? `${Math.floor((1 / (duration + delay)) * duration * 100)}% {\r\n    background-position: calc(200px + 100%) 0;\r\n  }`\r\n    : undefined\r\n}\r\n  100% {\r\n    background-position: calc(200px + 100%) 0;\r\n  }\r\n`;\r\nconst SkeletonSpan = styled.span`\r\n  animation: ${skeletonKeyframes} 1.2s ease-in-out infinite;\r\n  background-color: ${({color})=>`${color || defaultBaseColor}`};\r\n  background-size: 200px 100%;\r\n  background-repeat: no-repeat;\r\n  background-image: linear-gradient(90deg, ${({highlightColor, color})=>{\r\n    return `${color || defaultBaseColor}, ${highlightColor || defaultHighlightColor}, ${color || defaultBaseColor}`;\r\n  }});\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  height: 100%;\r\n`;\r\nconst Skeleton = (props) => <div className={props.className}><SkeletonSpan {...props} className=\"altrp-skeleton__span\"/></div>\r\nexport default Skeleton;\r\n","import styled from 'styled-components';\r\nimport {getResponsiveSetting} from \"../../../../../front-app/src/js/helpers\";\r\n\r\nconst ImagePlaceholder = styled.div`& {\r\n  position: relative;\r\n  max-width: 100%;\r\n  overflow: hidden;\r\n  width:${props => {\r\n  if (_.isNumber(props.width)) {\r\n    return props.width + 'px';\r\n  }\r\n  return props.width ? props.width : '100%'\r\n}};\r\n${(props) => {\r\n  const {settings} = props;\r\n  const aspect_ratio_size = getResponsiveSetting(settings, 'aspect_ratio_size');\r\n  if(Number(aspect_ratio_size) !== 0 && aspect_ratio_size === 'custom'|| Number(aspect_ratio_size)){\r\n    return 'height:auto;'\r\n  }\r\n  if(! props.height || props.height.indexOf('%') !== -1) {\r\n    return 'height:auto;'\r\n  }\r\n  return `height:${props.height ? props.height : 'auto'};`;\r\n}}\r\n\r\n  background-color: ${props => props.color ? props.color : '#fff'};\r\n}\r\n&::before{\r\n  display: block;\r\n  content: '';\r\n  width: 100%;\r\n${(props) => {\r\n  const {settings, height} = props;\r\n  let style = '';\r\n  const aspect_ratio_size = getResponsiveSetting(settings, 'aspect_ratio_size');\r\n  if(Number(aspect_ratio_size) !== 0) {\r\n    if(aspect_ratio_size === 'custom') {\r\n      let custom_aspect = getResponsiveSetting(settings, 'custom_aspect');\r\n      custom_aspect = Number(custom_aspect) || 100;\r\n      style += `padding-top:${custom_aspect}%;`;\r\n    } else if(Number(aspect_ratio_size)){\r\n      style += `padding-top:${aspect_ratio_size}%;`;\r\n    }\r\n    return style;\r\n  }\r\n  if (height && _.isString(height) && height.indexOf('%') === -1) {\r\n    return style;\r\n  }\r\n  if (Number(props.mediaWidth) && Number(props.mediaHeight)) {\r\n    style += `padding-top:${(props.mediaHeight / props.mediaWidth) * 100}%;`\r\n  }\r\n  return style;\r\n}};\r\n}\r\n&& .altrp-skeleton,\r\n&& .altrp-image{\r\n  position:absolute;\r\n  top:0;\r\n  left:0;\r\n  right:0;\r\n  bottom:0;\r\n  height:100%;\r\n  width:100%;\r\n}\r\n`;\r\n\r\nexport default ImagePlaceholder;\r\n","import Skeleton from './Skeleton';\nimport ImagePlaceholder from \"./ImagePlaceholder\";\nimport {checkElementInViewBox} from \"../../../../../front-app/src/js/helpers/elements\";\nconst {isEditor, isSSR, renderAsset} = window.altrpHelpers;\n\nclass AltrpImage extends Component {\n  constructor(props) {\n    super(props);\n    this.imageRef = React.createRef();\n    let visible = true;\n    if(isSSR() && ! props.element?.getResponsiveSetting('lazyload_disable')){\n      visible = false;\n    } else if (isEditor() || props.lazy === false) {\n\n    } else if (window.altrpImageLazy\n        && window.altrpImageLazy !== 'none'\n        && props.element\n        && ! props.element?.getResponsiveSetting('lazyload_disable')) {\n      visible = false;\n    }\n    this.state = {\n      visible,\n      update: 0,\n    };\n    this.timeoutId = setTimeout(() => this.setState(state => ({...state, update: state.update++})), 500);\n  }\n\n  /**\n   * очищаем обновление\n   */\n  componentWillUnmount() {\n    clearTimeout(this.timeoutId);\n  }\n\n  /**\n   * Проверим нужно ли обновить видимость\n   * @param {{}} prevProps\n   * @param {{}} prevState\n   */\n\n  componentDidUpdate(prevProps, prevState) {\n    if(this.state.visible){\n      clearTimeout(this.timeoutId);\n    }\n    if (this.state.visible || ! this.imageRef.current) {\n      return;\n    }\n    if(this.props?.element?.getRoot()?.popupGUID && this.props.element.getRoot().popupGUID === this.props.popupTrigger.popupID){\n      this.setState(state => ({...state, visible: true}));\n    }\n    if (prevProps.scrollPosition === this.props.scrollPosition && prevState.update === this.state.update) {\n      return;\n    }\n    let scroller = window.mainScrollbars;\n    if(! scroller){\n      scroller = document.querySelector('.front-app-content');\n    }\n    if(! scroller){\n      scroller = document.querySelector('.front-app');\n    }\n    if (this.imageRef.current && checkElementInViewBox(this.imageRef.current, scroller)) {\n      clearTimeout(this.timeoutId);\n      this.setState(state => ({...state, visible: true}));\n    }\n  }\n\n  render() {\n    let media = {...this.props.image};\n    const {visible} = this.state;\n    const noDefault = this.props.noDefault || false;\n    const placeholderStyles = {};\n\n    let width = this.props.width;\n\n    let height = this.props.height;\n    if (! isSSR() && this.props.image instanceof File) {\n      media = this.props.image\n    } else {\n      if (this.props.default) {\n        if ((Object.keys(media).length === 0)) {\n          media = this.props.default;\n        }\n      } else if (noDefault) {\n        return \"\"\n      } else {\n        media.url = media.url || '/img/nullImage.png';\n        media.name = media.name || 'null';\n        media.assetType = media.assetType || undefined;\n      }\n    }\n    let image = renderAsset(media);\n    if(visible || window.altrpImageLazy === 'skeleton'){\n      placeholderStyles.background = 'transparent';\n    }\n\n    let placeholder = <ImagePlaceholder color={media.main_color}\n                                        className={'altrp-image-placeholder '}\n                                        ref={this.imageRef}\n                                        settings={this.props.element?.getSettings() || {}}\n                                        height={height}\n                                        width={width}\n                                        style={placeholderStyles}\n                                        mediaWidth={media.width || 100}\n                                        mediaHeight={media.height || 75}>\n      {window.altrpImageLazy === 'skeleton'\n        && ! visible\n        &&\n          <Skeleton className=\"altrp-skeleton\"\n                    color={window.altrpSkeletonColor}\n                    highlightColor={window.altrpSkeletonHighlightColor}/>\n\n      }\n      {visible && React.cloneElement(image, {\n        className: this.props.className,\n        id: this.props.id || null,\n        style: this.props.style,\n      })}\n      </ImagePlaceholder>;\n\n    return <React.Fragment>\n      {placeholder}\n    </React.Fragment>\n  }\n}\n\nlet _export;\nif (isEditor()) {\n  _export = AltrpImage;\n} else {\n\n  function mapStateToProps(state) {\n    return {\n      scrollPosition: state.scrollPosition,\n      popupTrigger: state.popupTrigger,\n    };\n  }\n\n  _export = window.reactRedux.connect(mapStateToProps)(AltrpImage)\n}\nexport default _export;\n","import React, {Component} from 'react';\r\nimport Lightbox from 'react-image-lightbox';\r\nimport {isEditor} from \"../../../../../front-app/src/js/helpers\";\r\nimport ('./altrp-lightbox.scss');\r\n\r\nclass AltrpLightbox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      current: props.current || 0\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let images = this.props.images;\r\n    const settings = this.props.settings;\r\n    let nextSrc = null;\r\n    let prevSrc = null;\r\n    const current = this.state.current;\r\n\r\n    if(images.length === 0 || images[0] === \"\") {\r\n      images = [\"/img/nullImage.png\"]\r\n    }\r\n\r\n    if(images.length > 1) {\r\n      nextSrc = images[(current + 1) % images.length];\r\n      prevSrc = images[(current + images.length - 1) % images.length];\r\n    }\r\n\r\n    return (\r\n      <Lightbox\r\n        {...settings}\r\n        mainSrc={images[current]}\r\n        onMovePrevRequest={() => {\r\n          this.setState({\r\n            current: (current + images.length - 1) % images.length,\r\n          })\r\n        }}\r\n        onMoveNextRequest={() => {\r\n          this.setState({\r\n            current: (current + 1) % images.length,\r\n          })\r\n        }}\r\n\r\n        prevSrc={prevSrc} nextSrc={nextSrc}\r\n        wrapperClassName=\"altrp-lightbox\"\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default AltrpLightbox\r\n\r\n","import {\r\n  getDataByPath,\r\n  isEditor, parseURLTemplate\r\n} from \"../../../../../front-app/src/js/helpers\";\r\nimport AltrpImage from \"../altrp-image/AltrpImage\";\r\nimport AltrpLightbox from \"../altrp-lightbox/AltrpLightbox\";\r\n\r\n(window.globalDefaults = window.globalDefaults || []).push(`\r\n  .altrp-image {\r\n    margin-top: 0;\r\n    margin-right: 0;\r\n    margin-bottom: 0;\r\n    margin-left: 0;\r\n    padding-top: 0;\r\n    padding-right: 0;\r\n    padding-bottom: 0;\r\n    padding-left: 0;\r\n    opacity: 1;\r\n    object-fit: cover;\r\n    border-color: rgb(50,168,82);\r\n    border-radius: 0;\r\n  }\r\n`)\r\n\r\nconst Link = window.Link\r\nclass ImageLightboxWidget extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      settings: props.element.getSettings(),\r\n      lightbox: false\r\n    };\r\n    props.element.component = this;\r\n    if (window.elementDecorator) {\r\n      window.elementDecorator(this);\r\n    }\r\n    if(props.baseRender){\r\n      this.render = props.baseRender(this);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { element } = this.props;\r\n    const link = this.state.settings.image_link || {};\r\n    const activeLightbox = this.props.element.getSettings(\"lightbox_switch\", false);\r\n    const cursorPointer = this.props.element.getSettings(\"cursor_pointer\", false);\r\n    const background_image = this.props.element.getSettings(\r\n      \"background_image\",\r\n      {}\r\n    );\r\n    let classNames = \"altrp-image-container\";\r\n    let media = this.state.settings.content_media;\r\n\r\n    if(cursorPointer) {\r\n      classNames += \" cursor-pointer\"\r\n    }\r\n\r\n    /**\r\n     * Для карточки модель может быть другой\r\n     * @type {AltrpModel}\r\n     */\r\n    let model = element.hasCardModel()\r\n      ? element.getCardModel()\r\n      : this.props.currentModel;\r\n    /**\r\n     * Возьмем данные из окружения\r\n     */\r\n    if (\r\n      this.state.settings.content_path &&\r\n      _.isObject(getDataByPath(this.state.settings.content_path, null, model))\r\n    ) {\r\n      media = getDataByPath(this.state.settings.content_path, null, model);\r\n      /**\r\n       * Проверим массив ли с файлами content_path\r\n       */\r\n      if (_.get(media, \"0\") instanceof File) {\r\n        media = _.get(media, \"0\");\r\n      } else {\r\n        media.assetType = \"media\";\r\n      }\r\n    } else if (\r\n      this.state.settings.content_path &&\r\n      _.isString(getDataByPath(this.state.settings.content_path, null, model))\r\n    ) {\r\n      media = getDataByPath(this.state.settings.content_path, null, model);\r\n      media = {\r\n        assetType: \"media\",\r\n        url: media,\r\n        name: \"null\"\r\n      };\r\n    } else if (this.props.element.getSettings('default_url')){\r\n      media = {\r\n        assetType: \"media\",\r\n        url: this.props.element.getSettings('default_url'),\r\n        name: \"default\"\r\n      };\r\n    }\r\n    let width = this.props.element.getResponsiveSetting('width_size');\r\n    let height = this.props.element.getResponsiveSetting('height_size');\r\n    width = _.get(width, 'size', '100') + _.get(width, 'unit', '%');\r\n    height = _.get(height, 'size', '100') + _.get(height, 'unit', '%');\r\n\r\n    if(_.get(this.props.element.getResponsiveSetting('height_size'), 'size', '100') === \"0\") {\r\n      height = \"\"\r\n    }\r\n\r\n    let altrpImage = (\r\n      <AltrpImage\r\n        image={media}\r\n        width={width}\r\n        element={this.props.element}\r\n        height={height}\r\n        id={this.state.settings.position_css_id}\r\n        className={\r\n          this.state.settings.position_css_classes +\r\n          \" altrp-image\" +\r\n          (background_image ? \" altrp-background-image\" : \"\")\r\n        }\r\n      />\r\n    );\r\n\r\n    const lightbox = (\r\n      <AltrpLightbox\r\n        images={[(media ? media.url : \"\")]}\r\n        settings={{\r\n          onCloseRequest: () => this.setState({lightbox: false})\r\n        }}\r\n        // color={this.props.color_lightbox_style}\r\n      />\r\n    );\r\n\r\n    if (link.toPrevPage && !isEditor()) {\r\n      return (\r\n        <div\r\n          className={classNames}\r\n          onClick={() => {\r\n            history.back();\r\n            if(activeLightbox) {\r\n              this.setState({lightbox: true})\r\n            }\r\n          }}\r\n        >\r\n          {altrpImage}\r\n        </div>\r\n      );\r\n    } else {\r\n      let linkUrl = link.url || '';\r\n      linkUrl = parseURLTemplate(linkUrl, this.props.element.getCurrentModel().getData());\r\n      const linkProps = {\r\n\r\n      };\r\n      if(link.openInNew){\r\n        linkProps.target = '_blank';\r\n      }\r\n\r\n      return (\r\n        <div\r\n          className={classNames}\r\n          onClick={() => {\r\n            if(activeLightbox) {\r\n              this.setState({lightbox: true})\r\n            }\r\n          }}\r\n        >\r\n          {linkUrl && ! isEditor() ? (\r\n            link.tag === \"a\" ? (\r\n              <a href={linkUrl} {...linkProps}>{altrpImage}</a>\r\n            ) : (\r\n              <Link to={linkUrl} {...linkProps}>{altrpImage}</Link>\r\n            )\r\n          ) : (\r\n            altrpImage\r\n          )}\r\n          {\r\n            activeLightbox && this.state.lightbox ? lightbox : \"\"\r\n          }\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default ImageLightboxWidget;\r\n","import { Switch } from \"@blueprintjs/core\";\r\nconst {TemplateLoader} = window.altrpHelpers;\r\n\r\n(window.globalDefaults = window.globalDefaults || []).push(`\r\n  .altrp-tabs-switcher_wrapper {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: row;\r\n  }\r\n\r\n  .altrp-tabs-switcher {\r\n    width: 100%;\r\n  }\r\n\r\n  .altrp-tabs-switcher_switch-wrapper {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: calc(100% + 4px)\r\n  }\r\n\r\n  label.bp3-switch.bp3-switch.altrp-tabs-switcher_switch {\r\n    margin: 0;\r\n    padding: 0;\r\n\r\n    & span.bp3-control-indicator.bp3-control-indicator {\r\n      width: 50px;\r\n      height: 25px;\r\n      border-radius: 50px;\r\n      margin: 0;\r\n\r\n      &:before {\r\n        height: calc(25px - 4px);\r\n        width: calc(25px - 4px);\r\n      }\r\n    }\r\n\r\n    & input:checked ~ span.bp3-control-indicator.bp3-control-indicator {\r\n      &:before {\r\n        left: calc(100% - 25px);\r\n      }\r\n    }\r\n  }\r\n\r\n  .altrp-tabs-switcher_label {\r\n    display: flex;\r\n    flex-wrap: nowrap;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  .altrp-tabs-switcher_label-one {\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .altrp-tabs-switcher_label-two {\r\n    margin-left: 10px;\r\n  }\r\n`);\r\n\r\nclass TabsSwitcherWidget extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    props.element.component = this;\r\n    if (window.elementDecorator) {\r\n      window.elementDecorator(this);\r\n    }\r\n    if(props.baseRender){\r\n      this.render = props.baseRender(this);\r\n    }\r\n    this.state = {\r\n      switcher: false\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  onChange() {\r\n\r\n    this.setState((s) => ({\r\n      ...s,\r\n      switcher: !s.switcher\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    // section 1\r\n    const oneTitle = this.props.element.getResponsiveSetting(\"one_title\", \"\", \"\");\r\n    const oneType = this.props.element.getResponsiveSetting(\"one_type\", \"\", \"text\");\r\n    const oneWysiwyg = this.props.element.getResponsiveSetting(\"one_wysiwyg\", \"\", \"\");\r\n    const oneTemplate = this.props.element.getResponsiveSetting(\"one_template\", \"\", \"\");\r\n    // section 2\r\n    const twoTitle = this.props.element.getResponsiveSetting(\"two_title\", \"\", \"\");\r\n    const twoType = this.props.element.getResponsiveSetting(\"two_type\", \"\", \"text\");\r\n    const twoWysiwyg = this.props.element.getResponsiveSetting(\"two_wysiwyg\", \"\", \"\");\r\n    const twoTemplate = this.props.element.getResponsiveSetting(\"two_template\", \"\", null);\r\n\r\n    function getContent(type, contentValue) {\r\n      if(type === \"text\") {\r\n        return <div\r\n          className={`altrp-tabs-switcher_content-text ${contentValue.className}`}\r\n          dangerouslySetInnerHTML={{ __html: contentValue.wysiwyg }}\r\n        />\r\n      } else if(type === \"template\") {\r\n        if(contentValue.template) {\r\n          return <TemplateLoader\r\n            templateId={contentValue.template}\r\n          />\r\n        }\r\n      }\r\n    }\r\n\r\n    let content = !this.state.switcher ?\r\n      getContent(oneType, {\r\n        wysiwyg: oneWysiwyg,\r\n        template: oneTemplate,\r\n        className: \"altrp-tabs-switcher_content-one\"\r\n      }) :\r\n      getContent(twoType, {\r\n        wysiwyg: twoWysiwyg,\r\n        template: twoTemplate,\r\n        className: \"altrp-tabs-switcher_content-two\"\r\n      });\r\n\r\n    return <div className=\"altrp-tabs-switcher\">\r\n      <div className=\"altrp-tabs-switcher_wrapper\">\r\n        <div className=\"altrp-tabs-switcher_label altrp-tabs-switcher_label-one\">\r\n          {\r\n            oneTitle\r\n          }\r\n        </div>\r\n        <div className=\"altrp-tabs-switcher_switch-wrapper\">\r\n          <Switch\r\n            checked={this.state.switcher}\r\n            onChange={this.onChange}\r\n            className=\"altrp-tabs-switcher_switch\"\r\n          />\r\n        </div>\r\n        <div  className=\"altrp-tabs-switcher_label altrp-tabs-switcher_label-two\">\r\n          {\r\n            twoTitle\r\n          }\r\n        </div>\r\n      </div>\r\n      <div className=\"altrp-tabs-switcher_content\">\r\n        {\r\n          content\r\n        }\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default TabsSwitcherWidget\r\n"],"sourceRoot":""}