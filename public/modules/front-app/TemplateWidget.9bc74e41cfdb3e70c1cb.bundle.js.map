{"version":3,"sources":["webpack:///./resources/modules/editor/src/js/classes/modules/TemplateLoader.js","webpack:///./resources/modules/editor/src/js/components/altrp-template/AltrpTemplate.js","webpack:///./resources/modules/editor/src/js/components/widgets/TemplateWidget.js","webpack:///./resources/modules/front-app/src/js/classes/FrontElementsFabric.js","webpack:///./resources/modules/editor/src/js/components/widgets/styled-components/ElementWrapperComponent.js","webpack:///./resources/modules/front-app/src/js/constants/DEFAULT_REACT_ELEMENTS.js","webpack:///./resources/modules/front-app/src/js/components/ElementWrapper.js","webpack:///./resources/modules/front-app/src/js/store/elements-storage/actions.js"],"names":["TemplateLoader","this","resource","Resource","route","templatesCache","AltrpModel","_","get","window","__altrp_settings__","templateId","force","update","Number","hasProperty","Promise","resolve","reject","pendingCallbacks","push","statuses","template","setProperty","getProperty","isArray","forEach","callback","loadTemplate","templateData","JSON","parse","frontElementsFabric","templateLoader","props","mbGetParsedTemplate","settings","state","templateGUID","updateTemplate","loading","loadParsedTemplate","setState","className","React","createElement","componentClass","element","ElementWrapper","children","Component","getSettings","elementDecorator","baseRender","render","FrontElementsFabric","object","parent","pageId","models","FrontElement","addModelInfo","modelName","modelId","model","length","child","frontElementsManager","checkElementExists","name","parseData","id","lastElement","type","dynamicContentSettings","setParent","clonedElement","cloneDeep","updateParents","c","ElementWrapperDivComponent","styled","div","styles","layout_column_width","getResponsiveSetting","_export","altrpHelpers","altrpCompare","altrpRandomId","conditionsChecker","isEditor","replaceContentWithData","setTitle","updateStore","currentModel","appStore","getState","currentUser","currentDataStorage","elementDisplay","reactElement","elementId","getId","wrapper","elementWrapperRef","createRef","elementRef","dispatch","addElement","error","errorInfo","frontApp","onWidgetMount","isFunction","updateFonts","checkElementDisplay","stylesModule","stylesContainer","current","getElementsByClassName","prevProps","prevState","getName","title","currentTitle","altrpPage","changeCurrentPageProperty","updateToken","conditions","map","modelField","conditional_model_field","operator","conditional_other_operator","value","conditional_other_condition_value","getCurrentModel","formsStore","formId","logic","formConditions","display","field_id","hide_on_wide_screen","hide_on_desktop","hide_on_laptop","hide_on_tablet","hide_on_big_phone","hide_on_small_phone","isFixed","hide_on_trigger","classes","getType","getPrefixClasses","getData","style","whiteSpace","toString","componentStack","width","CSSId","ContentComponent","getComponentClass","content","ref","rootElement","getChildren","match","altrpresponses","altrpPageState","altrpMeta","currentScreen","history","getTemplateType","WrapperComponent","NavComponent","wrapperProps","DEFAULT_REACT_ELEMENTS","isEmpty","tooltip_position","tooltip_text","tooltip_minimal","tooltip_show_type","tooltip_horizontal_offset","tooltip_vertical_offset","AltrpTooltip","position","minimal","horizontal","vertical","text","withRouter","reactRedux","connect","forwardRef","ADD_ELEMENT","CLEAR_ELEMENTS","elementComponent","clearElements"],"mappings":"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","file":"TemplateWidget.9bc74e41cfdb3e70c1cb.bundle.js","sourcesContent":["import Resource from \"../Resource\";\r\nimport AltrpModel from \"../AltrpModel\";\r\nimport frontElementsFabric from \"../../../../../front-app/src/js/classes/FrontElementsFabric\";\r\n\r\n/**\r\n * @class TemplateLoader\r\n */\r\nexport class TemplateLoader {\r\n  /**\r\n   * Хранилище статусов получения данных, чтобы не делать много параллельных запросов\r\n   * @type {{}}\r\n   */\r\n  static statuses = {};\r\n  /**\r\n   * Хранилище обратных вызовов, чтобы не делать много параллельных запросов\r\n   * @type {{}}\r\n   */\r\n  static pendingCallbacks = {};\r\n\r\n\r\n  constructor(){\r\n    this.resource = new Resource({route: '/ajax/templates'});\r\n    this.templatesCache = new AltrpModel(_.get(window.__altrp_settings__, 'templates_data',{}));\r\n  }\r\n\r\n  /**\r\n   * Загрузить шаблон по ид\r\n   * @param {integer | string} templateId\r\n   * @param {boolean} force\r\n   * @param {*} templateId\r\n   * @return {[]}\r\n   */\r\n  async loadTemplate(templateId, force = false){\r\n\r\n    let update = force;\r\n    templateId = Number(templateId) ? Number(templateId) : templateId;\r\n\r\n    if(! update){\r\n      update = ! this.templatesCache.hasProperty(templateId);\r\n    }\r\n\r\n    if(_.get(TemplateLoader, `statuses.${templateId}`) === 'loading'){\r\n      return new Promise((resolve, reject) => {\r\n        TemplateLoader.pendingCallbacks[templateId] = TemplateLoader.pendingCallbacks[templateId] || [];\r\n        TemplateLoader.pendingCallbacks[templateId].push(resolve);\r\n      })\r\n    }\r\n\r\n    TemplateLoader.statuses[templateId] = 'loading';\r\n\r\n    try {\r\n\r\n      let template = null;\r\n\r\n      if (update) {\r\n        template = await this.resource.get(templateId);\r\n        this.templatesCache.setProperty(templateId, template);\r\n      } else {\r\n        template = this.templatesCache.getProperty(templateId);\r\n      }\r\n\r\n      if(_.isArray(TemplateLoader.pendingCallbacks[templateId])){\r\n        TemplateLoader.pendingCallbacks[templateId].forEach(callback=>{\r\n          callback(template);\r\n        });\r\n      }\r\n\r\n      TemplateLoader.statuses[templateId] = 'loaded';\r\n      TemplateLoader.pendingCallbacks[templateId] = [];\r\n      return template;\r\n\r\n    }catch(error){\r\n      if(_.isArray(TemplateLoader.pendingCallbacks[templateId])){\r\n        TemplateLoader.pendingCallbacks[templateId].forEach(callback=>{\r\n          callback(null);\r\n        });\r\n      }\r\n      TemplateLoader.statuses[templateId] = 'loaded';\r\n      TemplateLoader.pendingCallbacks[templateId] = [];\r\n      return null;\r\n    }\r\n\r\n    //return Promise.resolve(this.templatesCache.getProperty(templateId));\r\n  }\r\n\r\n  /**\r\n   * Загрузить шаблон по ид\r\n   * @param {integer | string} templateId\r\n   * @param {boolean} force\r\n   * @param {*} templateId\r\n   */\r\n  async loadParsedTemplate(templateId, force = false){\r\n\r\n    if(! templateId){\r\n      return null;\r\n    }\r\n    templateId = Number(templateId) ? Number(templateId) : templateId;\r\n\r\n    let templateData = _.get((await this.loadTemplate(templateId, force)), 'data');\r\n    templateData = JSON.parse(templateData);\r\n\r\n    return frontElementsFabric.parseData(templateData);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string} templateId\r\n   * @returns {null|{}}\r\n   */\r\n  mbGetParsedTemplate(templateId){\r\n    if(! this.templatesCache.hasProperty(templateId)){\r\n      return null;\r\n    }\r\n    let templateData = _.get(this.templatesCache.getProperty(templateId), 'data');\r\n    templateData = JSON.parse(templateData);\r\n    return frontElementsFabric.parseData(templateData)\r\n  }\r\n}\r\n\r\n window.templateLoader =  new TemplateLoader();\r\n\r\nexport default window.templateLoader;\r\n","import  \"../../classes/modules/TemplateLoader\";\r\nimport ElementWrapper from \"../../../../../front-app/src/js/components/ElementWrapper\";\r\nimport frontElementsFabric from \"../../../../../front-app/src/js/classes/FrontElementsFabric\";\r\n\r\nclass AltrpTemplate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let template = window.templateLoader.mbGetParsedTemplate(this.props.settings.template)\r\n    if(template){\r\n      template = frontElementsFabric.cloneElement(template);\r\n    }\r\n    this.state = {\r\n      template,\r\n      templateGUID: this.props.settings.template\r\n    };\r\n    this.template = template;\r\n  }\r\n  componentDidMount() {\r\n    this.updateTemplate();\r\n  }\r\n  componentDidUpdate() {\r\n    this.updateTemplate();\r\n  }\r\n\r\n  /**\r\n   * Обновляем данные шалона\r\n   * @return {Promise<void>}\r\n   */\r\n  async updateTemplate() {\r\n    // console.log(this.props.element.getSettings('template'));\r\n    const templateGUID = this.props.settings.template;\r\n    if (\r\n      templateGUID !== this.state.templateGUID ||\r\n      !(this.state.template || this.loading)\r\n    ) {\r\n      let template;\r\n      if (!templateGUID) {\r\n        return;\r\n      } else {\r\n        this.loading = true;\r\n        template = await window.templateLoader.loadParsedTemplate(templateGUID);\r\n        this.loading = false;\r\n        this.template = null;\r\n      }\r\n      this.setState(state => ({ ...state, template, templateGUID }));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.settings.template) {\r\n      return null;\r\n    }\r\n    if (_.get(this.state, \"template.componentClass\")) {\r\n      let template =\r\n        this.template || frontElementsFabric.cloneElement(this.state.template);\r\n      this.template = template;\r\n      return (\r\n        <div className=\"altrp-posts\">\r\n          <div className=\"altrp-post\">\r\n            {React.createElement(template.componentClass, {\r\n              element: template,\r\n              ElementWrapper: ElementWrapper,\r\n              children: template.children\r\n            })}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default AltrpTemplate;\r\n","import AltrpTemplate from'../altrp-template/AltrpTemplate';\r\n\r\nclass TemplateWidget extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      templateGUID: this.props.element.getSettings('template'),\r\n    };\r\n    if (window.elementDecorator) {\r\n      window.elementDecorator(this);\r\n    }\r\n    if(props.baseRender){\r\n      this.render = props.baseRender(this);\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return <AltrpTemplate settings={this.props.element.getSettings() || {}}/>\r\n  }\r\n}\r\n\r\nexport default TemplateWidget\r\n","import FrontElement from \"./FrontElement\";\nclass FrontElementsFabric {\n  /**\n   * парсим данные шаблона\n   * @param {object} object\n   * @param {FrontElement | null} parent\n   * @param {int | null} pageId\n   * @param {array | null} models\n   * @return {FrontElement}\n   */\n  parseData(object, parent, pageId, models){\n    let children = [];\n    /**\n     * @member {FrontElement} element\n     * */\n    let element = new FrontElement(object);\n    if(pageId){\n      element.addModelInfo({\n        modelName: 'page',\n        modelId: pageId,\n      });\n    }\n    if(_.isArray(models)){\n      for(let model of models){\n        element.addModelInfo({\n            ...model,\n        });\n      }\n    }\n    if(object.children && object.children.length ){\n      for(let child of object.children){\n        window.frontElementsManager.checkElementExists(child.name) ?\n            children.push( this.parseData(child, element) ) : '';\n      }\n    }\n    element.id = object.id;\n    element.lastElement = object.lastElement;\n    element.children = children;\n    element.settings = object.settings;\n    element.name = object.name;\n    element.type = object.type;\n    element.dynamicContentSettings = object.dynamicContentSettings;\n    if(parent){\n      element.setParent(parent);\n    }\n    element.update();\n    return element;\n  }\n\n  /**\n   * Правильное клонирование элемента\n   * @params {FrontElement} element\n   * @return {FrontElement | null}\n   */\n  cloneElement(element){\n    if(! element){\n      return null;\n    }\n    let clonedElement = _.cloneDeep(element);\n    // console.log(element.idForAction);\n    this.updateParents(clonedElement);\n    return clonedElement\n  }\n\n  /**\n   * Обновляет ссылку на родителя у элементов\n   * @params {FrontElement} element\n   */\n\n  updateParents(element){\n    if(_.isArray(element.children)){\n      element.children.forEach(c=>{\n        c.setParent(element);\n        this.updateParents(c);\n        // console.log(c);\n      });\n    }\n  }\n}\n\nwindow.frontElementsFabric = new FrontElementsFabric();\nexport default window.frontElementsFabric;\n","\r\nimport { getResponsiveSetting } from \"../../../../../../front-app/src/js/helpers\";\r\n\r\nconst settingsToStyles = ({ settings }) => {\r\n   let styles = '';\r\n\r\n   styles += '&.altrp-column{';\r\n   const layout_column_width = getResponsiveSetting(settings, 'layout_column_width');\r\n   if (layout_column_width) {\r\n      if (Number(layout_column_width)) {\r\n         styles += `width:${layout_column_width}%;`;\r\n      } else {\r\n         styles += `width:${layout_column_width};`;\r\n      }\r\n   }\r\n\r\n   styles += '}';\r\n   return styles;\r\n};\r\n\r\nexport const ElementWrapperDivComponent = styled.div`${settingsToStyles}`;\r\n","const DEFAULT_REACT_ELEMENTS = [\n  'input',\n  'input-select',\n  'input-multi-select',\n  'input-select2',\n  'input-radio',\n  'input-checkbox',\n  'input-wysiwyg',\n  'input-textarea',\n  'input-slider',\n  'input-range-slider',\n  'input-image-select',\n  'input-accept',\n  'input-text',\n  'input-text-common',\n  'input-password',\n  'input-number',\n  'input-tel',\n  'input-email',\n  'input-date',\n  'input-hidden',\n  'input-file',\n  'input-gallery',\n  'breadcrumbs',\n  'map',\n  'map_builder',\n  'menu',\n  'diagram',\n  'input',\n  'nav',\n  'dashboards',\n  'tour',\n  'icon',\n  'export',\n  'template',\n  'gallery',\n  'dropbar',\n  'posts',\n  'table',\n  'tabs',\n  'heading-type-animating',\n]\nexport default DEFAULT_REACT_ELEMENTS\n","import { withRouter } from \"react-router-dom\";\nimport { addElement } from \"../store/elements-storage/actions\";\nimport AltrpTooltip from \"../../../../editor/src/js/components/altrp-tooltip/AltrpTooltip\";\nimport { changeCurrentPageProperty } from \"../store/current-page/actions\";\nimport { ElementWrapperDivComponent } from \"../../../../editor/src/js/components/widgets/styled-components/ElementWrapperComponent\";\nimport NavComponent from \"../../../../editor/src/js/components/widgets/styled-components/NavComponent\";\nimport DEFAULT_REACT_ELEMENTS from \"../constants/DEFAULT_REACT_ELEMENTS\";\nconst {\n  altrpCompare,\n  altrpRandomId,\n  conditionsChecker,\n  isEditor,\n  replaceContentWithData,\n  setTitle\n} = window.altrpHelpers;\n\nclass ElementWrapper extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      elementDisplay: !this.props.element.getSettings(\"default_hidden\")\n    };\n    this.reactElement = this.props.element.getSettings(\"react_element\");\n    this.elementId = this.props.element.getId();\n    this.settings = this.props.element.getSettings();\n    props.element.wrapper = this;\n    this.elementWrapperRef = React.createRef();\n    this.elementRef = React.createRef();\n    if(! isEditor()){\n      appStore.dispatch(addElement(this));\n    }\n  }\n\n  /**\n   * Отлавливаем ошибки\n   * @param error\n   * @param errorInfo\n   */\n  componentDidCatch(error, errorInfo) {\n    this.setState(state => ({\n      ...state,\n      error: error,\n      errorInfo: errorInfo\n    }));\n  }\n\n  /**\n   * Иногда надо обновить элемент (FrontElement)\n   */\n  componentDidMount() {\n    !isEditor() && window?.frontApp?.onWidgetMount();\n    if (_.isFunction(this.props.element.update)) {\n      this.props.element.update();\n      this.props.element.updateFonts();\n    }\n    this.checkElementDisplay();\n  }\n  /**\n   * Подписываемся на обновление store редакса\n   */\n  updateStore = () => {\n    if (this.state.currentModel !== appStore.getState().currentModel) {\n      this.setState(state => ({\n        ...state,\n        currentModel: appStore.getState().currentModel\n      }));\n    }\n    /**\n     * Обновляем пользователя\n     */\n    if (this.state.currentUser !== appStore.getState().currentUser) {\n      this.setState(state => ({\n        ...state,\n        currentModel: appStore.getState().currentUser\n      }));\n    }\n\n    /**\n     * Обновляем currentDataStorage\n     */\n    if (\n      this.state.currentDataStorage !== appStore.getState().currentDataStorage\n    ) {\n      this.setState(state => ({\n        ...state,\n        currentDataStorage: appStore.getState().currentDataStorage\n      }));\n    }\n  };\n\n  /**\n   * Вернет HTMLElement, в котором записаны css стили текущего компонента\n   * @return {null | HTMLElement}\n   */\n  getStylesHTMLElement() {\n    if (!_.get(window, \"stylesModule.stylesContainer.current\")) {\n      return null;\n    }\n\n    return (\n      window.stylesModule.stylesContainer.current.getElementsByClassName(\n        `altrp-styles${this.props.element.getId()}`\n      )[0] || null\n    );\n  }\n\n  /**\n   * Нужно ли обновить отображение обертки элементов\n   * @param {{}} prevProps\n   * @param {{}} prevState\n   */\n  componentDidUpdate(prevProps, prevState) {\n    this.checkElementDisplay();\n    if (\n      appStore.getState().currentModel.getProperty(\"altrpModelUpdated\") &&\n      appStore\n        .getState()\n        .currentDataStorage.getProperty(\"currentDataStorageLoaded\") &&\n      !isEditor() &&\n      this.props.element.getName() === \"section\"\n    ) {\n      let title = appStore.getState().currentTitle;\n      title = replaceContentWithData(title);\n      if (appStore.getState().altrpPage.getProperty(\"title\") !== title) {\n        appStore.dispatch(changeCurrentPageProperty(\"title\", title));\n      }\n      setTitle(title);\n    }\n  }\n\n  /**\n   * Обновить элемент изменив this.state.updateToken\n   */\n  updateElement() {\n    this.setState(state => ({ ...state, updateToken: altrpRandomId() }));\n  }\n\n  /**\n   * Проверка видимости элемента\n   * @param {{}} prevProps\n   * @param {{}} prevState\n   */\n  checkElementDisplay(prevProps, prevState) {\n    /**\n     * @member {FrontElement} element\n     */\n    const { element } = this.props;\n    if (!element.getSettings(\"conditional_other\")) {\n      return;\n    }\n    let conditions = element.getSettings(\"conditions\", []);\n    conditions = conditions.map(c => {\n      const {\n        conditional_model_field: modelField,\n        conditional_other_operator: operator,\n        conditional_other_condition_value: value\n      } = c;\n      return {\n        modelField,\n        operator,\n        value\n      };\n    });\n    let elementDisplay = conditionsChecker(\n      conditions,\n      element.getSettings(\"conditional_other_display\") === \"AND\",\n      this.props.element.getCurrentModel(),\n      true\n    );\n\n    if (this.state.elementDisplay === elementDisplay) {\n      return;\n    }\n\n    this.setState(state => ({\n      ...state,\n      elementDisplay\n    }));\n  }\n\n  /**\n   * Переключает видимость элемента\n   */\n  toggleElementDisplay() {\n    this.setState(state => ({\n      ...state,\n      elementDisplay: !state.elementDisplay\n    }));\n  }\n  /**\n   * Метод для проверки видимости поля формы\n   * @return {boolean}\n   */\n  inputIsDisplay() {\n    const { formsStore } = this.state;\n    const formId = this.props.element.getSettings(\"form_id\", \"\");\n    const logic = this.props.element.getSettings(\n      \"form_condition_display_on\",\n      \"AND\"\n    );\n    const formConditions = this.props.element.getSettings(\n      \"form_conditions\",\n      []\n    );\n    let display = true;\n    formConditions.forEach(c => {\n      if (logic === \"AND\") {\n        display *= altrpCompare(\n          _.get(formsStore, `${formId}.${c.field_id}`),\n          c.value,\n          c.operator\n        );\n      } else {\n        display += altrpCompare(\n          _.get(formsStore, `${formId}.${c.field_id}`),\n          c.value,\n          c.operator\n        );\n      }\n    });\n    return display;\n  }\n\n  render() {\n    const {element} = this.props;\n    const {\n      hide_on_wide_screen,\n      hide_on_desktop,\n      hide_on_laptop,\n      hide_on_tablet,\n      hide_on_big_phone,\n      hide_on_small_phone,\n      hide_on_trigger,\n      isFixed,\n    } = element.settings;\n    let classes = `altrp-element altrp-element${element.getId()} altrp-element_${element.getType()}`;\n    classes += element.getPrefixClasses() + \" \";\n    if (element.getType() === \"widget\") {\n      classes += ` altrp-widget_${element.getName()}`;\n    }\n    if(this.props.element.getResponsiveSetting('css_class')){\n      classes += ` ${replaceContentWithData(\n        this.props.element.getResponsiveSetting('css_class'),\n        this.props.element.getCurrentModel().getData()\n      )} `;\n    }\n    if (hide_on_wide_screen) {\n      classes += \" hide_on_wide_screen\";\n    }\n    if (hide_on_desktop) {\n      classes += \" hide_on_desktop\";\n    }\n    if (hide_on_laptop) {\n      classes += \" hide_on_laptop\";\n    }\n    if (hide_on_tablet) {\n      classes += \" hide_on_tablet\";\n    }\n    if (hide_on_big_phone) {\n      classes += \" hide_on_big_phone\";\n    }\n    if (hide_on_small_phone) {\n      classes += \" hide_on_small_phone\";\n    }\n    if (isFixed) {\n      classes += \" fixed-section\";\n    }\n    if (this.state.errorInfo) {\n      return (\n        <div className=\"altrp-error\" data-eltype={element.getType()}>\n          <h2>Something went wrong.</h2>\n          <details style={{ whiteSpace: \"pre-wrap\" }}>\n            {this.state.error && this.state.error.toString()}\n            <br />\n            {this.state.errorInfo.componentStack}\n          </details>\n        </div>\n      );\n    }\n    const styles = {};\n\n    if (element.getResponsiveSetting(\"layout_column_width\")) {\n      if (\n        Number(element.getResponsiveSetting(\"layout_column_width\"))\n      ) {\n        styles.width =\n          element.getResponsiveSetting(\"layout_column_width\") + \"%\";\n      } else {\n        styles.width = element.getResponsiveSetting(\n          \"layout_column_width\"\n        );\n      }\n    }\n    if (!this.state.elementDisplay) {\n      styles.display = \"none\";\n    }\n    let CSSId = element.getSettings(\"advanced_element_id\", \"\");\n    CSSId = replaceContentWithData(\n      CSSId,\n      element.getCurrentModel().getData()\n    );\n    if (this.CSSId !== CSSId) {\n      this.CSSId = CSSId;\n    }\n    let ContentComponent = frontElementsManager.getComponentClass(\n      element.getName()\n    );\n    const content = React.createElement(ContentComponent, {\n      ref: this.elementRef,\n      rootElement: this.props.rootElement,\n      ElementWrapper: this.props.ElementWrapper,\n      element: element,\n      children: element.getChildren(),\n      match: this.props.match,\n      currentModel: this.props.currentModel,\n      currentUser: this.props.currentUser,\n      currentDataStorage: this.props.currentDataStorage,\n      altrpresponses: this.props.altrpresponses,\n      formsStore: this.props.formsStore,\n      elementDisplay: this.state.elementDisplay,\n      altrpPageState: this.props.altrpPageState,\n      altrpMeta: this.props.altrpMeta,\n      updateToken: this.state.updateToken,\n      currentScreen: this.props.currentScreen,\n      baseRender: this.props.baseRender,\n      history: this.props.history,\n      appStore\n    });\n    if (element.getTemplateType() === \"email\") {\n      if (!this.state.elementDisplay) {\n        return null;\n      }\n      return <>{content}</>;\n    }\n\n    let WrapperComponent = ElementWrapperDivComponent;\n    switch (element.getName()) {\n      case \"nav\":\n        WrapperComponent = NavComponent;\n        break;\n    }\n\n\n    const wrapperProps = {\n      className: classes,\n      ref: this.elementWrapperRef,\n      elementId: this.elementId,\n      settings: this.settings,\n      style: styles,\n      id: this.CSSId,\n    };\n    if (\n      this.reactElement ||\n      DEFAULT_REACT_ELEMENTS.indexOf(element.getName()) !== -1\n    ) {\n      wrapperProps[\"data-react-element\"] = element.getId();\n    }\n    if(! _.isEmpty(element.getResponsiveSetting('wrapper_click_actions'))){\n      wrapperProps[\"data-altrp-wrapper-click-actions\"] = element.getId();\n    }\n    if(! _.isEmpty(element.getResponsiveSetting('sticky'))){\n      wrapperProps[\"data-altrp-sticky\"] = element.getResponsiveSetting('sticky');\n      wrapperProps[\"data-altrp-sticky-spacing\"] = element.getResponsiveSetting('st_spacing');\n      wrapperProps[\"data-margin-top\"] = element.getResponsiveSetting('st_spacing') || 0;\n    }\n    wrapperProps[\"data-altrp-id\"] = element.getId();\n\n    const tooltip_position = this.props.element.getResponsiveSetting('tooltip_position')\n    let tooltip_text = this.props.element.getResponsiveSetting('tooltip_text')\n\n    tooltip_text = replaceContentWithData(\n      tooltip_text,\n      element.getCurrentModel().getData()\n    );\n    const tooltip_minimal = this.props.element.getResponsiveSetting('tooltip_minimal')\n    const tooltip_show_type = this.props.element.getResponsiveSetting('tooltip_show_type')\n    const tooltip_horizontal_offset = this.props.element.getResponsiveSetting('tooltip_horizontal_offset')\n    const tooltip_vertical_offset = this.props.element.getResponsiveSetting('tooltip_vertical_offset')\n    return  (\n      <WrapperComponent {...wrapperProps} element={element.getId()}>\n\n        {tooltip_show_type && tooltip_show_type !== \"never\" ? (\n          <AltrpTooltip\n            position={tooltip_position}\n            id={this.props.element.getId()}\n            state={tooltip_show_type}\n            minimal={tooltip_minimal}\n            horizontal={tooltip_horizontal_offset}\n            vertical={tooltip_vertical_offset}\n            text={tooltip_text}>\n            {content}\n          </AltrpTooltip>\n        ) : content}\n      </WrapperComponent>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    altrpresponses: state.altrpresponses,\n    formsStore: state.formsStore,\n    currentDataStorage: state.currentDataStorage,\n    currentModel: state.currentModel,\n    currentUser: state.currentUser,\n    altrpMeta: state.altrpMeta,\n    altrpPageState: state.altrpPageState,\n    currentScreen: state.currentScreen\n  };\n}\nlet _export;\nif(window['h-altrp']){\n  _export = ElementWrapper;\n} else {\n  _export = withRouter(ElementWrapper)\n}\nexport default window.reactRedux.connect(mapStateToProps, null, null, {\n  forwardRef: true\n})(_export);\n","export const ADD_ELEMENT = 'ADD_ELEMENT';\r\nexport const CLEAR_ELEMENTS = 'CLEAR_ELEMENTS';\r\n\r\n/**\r\n *\r\n * @param {React.Component}elementComponent\r\n * @return {{}} - {\r\n *     type: {string},\r\n *     sectionComponent: {React.Component},\r\n *   }\r\n */\r\nexport function addElement(elementComponent) {\r\n  return {\r\n    type: ADD_ELEMENT,\r\n    elementComponent\r\n  };\r\n}\r\n\r\n/**\r\n * Перед загрузкой новых данных, старые удаляем\r\n * @return {{type: string}}\r\n */\r\nexport function clearElements() {\r\n  return {\r\n    type: CLEAR_ELEMENTS,\r\n  };\r\n}\r\n\r\n"],"sourceRoot":""}