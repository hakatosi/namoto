{"version":3,"sources":["webpack:///./resources/modules/front-app/src/js/components/FrontPopupWrapper.js","webpack:///./resources/modules/front-app/src/js/components/FrontPopup.js"],"names":["getResponsiveSetting","window","altrpHelpers","styled","div","settings","styles","layout_bg","_","get","width_popup_layout","size","unit","content_position_popup_layout","height_custom_popup_layout","sliderStyled","popup_bg","color","popup_pa","dimensionsControllerToStyles","popup_border","popup_border_width","popup_radius","popup_border_color","top","left","right","bottom","horizontal_position_popup_layout","close_pa","close_right","close_top","close_c","colorPropertyStyled","icon_fill","time_offcanvas","iconsManager","FrontPopup","props","ElementWrapper","state","isVisible","rootElement","frontElementsFabric","parseData","template","data","page","models","isShownOnScroll","close","bind","prevProps","popupTrigger","this","getSettings","setState","popupID","closePopup","classes","popupGUID","rootElementSettings","popup_close_icon","popup_close_icon_width_size","popup_close_icon_height_size","push","rootElementId","getId","close_context","overlayCondition","height_popup_layout","vertical_position_popup_layout","closeButtonCondition","popup_close_icon_alignment","closeButton","className","onClick","AltrpImage","image","lazy","width","height","default","assetType","name","url","renderIcon","join","e","stopPropagation","autoHide","renderThumbHorizontal","renderTrackHorizontal","renderTrackVertical","autoHideTimeout","autoHideDuration","React","createElement","componentClass","element","children","Component","reactRedux","connect","scrollPosition","dispatch","togglePopup"],"mappings":"+QAAOA,EAAwBC,OAAOC,aAA/BF,qBAoLP,EA3K0BC,OAAOE,OAAOC,IAAjB,ybAGrB,YAAgB,IAAdC,EAAc,EAAdA,SACEC,EAAS,GACPC,EAAYP,EAAqBK,EAAU,aAEjD,OADAC,EAAU,oBAAJ,OAAwBE,EAAEC,IAAIF,EAAW,QAAS,mBAAlD,QAKJ,YAAgB,IAAdF,EAAc,EAAdA,SACAC,EAAS,GAQb,OAPmCN,EAAqBK,EAAU,8BAI9DA,EAASK,oBAAsBL,EAASK,mBAAmBC,OAC7DL,GAAU,UAAJ,OAAcD,EAASK,mBAAmBC,KAA1C,YAAkDN,EAASK,mBAAmBE,KAA9E,MAEDN,KAIL,YAAgB,IAAdD,EAAc,EAAdA,SACAC,EAAS,GACPO,EAAgCb,EAAqBK,EAAU,iCAKrE,OAJIQ,GAAmE,eAAlCA,IACnCP,GAAU,eAAJ,OAAmBO,EAAnB,KACNP,GAAU,iBAELA,KAIL,YAAgB,IAAdD,EAAc,EAAdA,SACAC,EAAS,GACPQ,EAA6Bd,EAAqBK,EAAU,8BAC9DS,IACFR,GAAU,UAAJ,QAAcS,kBAAaD,GAA3B,MAER,IAAMD,EAAgCb,EAAqBK,EAAU,iCACjEQ,IACFP,GAAU,mBAAJ,OAAuBO,EAAvB,MAER,IAAMH,EAAqBV,EAAqBK,EAAU,sBACtDK,IACFJ,GAAU,SAAJ,QAAaS,kBAAaL,GAA1B,MAGR,IAAMM,EAAWhB,EAAqBK,EAAU,YAC5CW,IACFV,GAAU,oBAAJ,OAAwBU,EAASC,MAAjC,MAER,IAAMC,EAAWlB,EAAqBK,EAAU,YAC5Ca,IACFZ,IAAUa,kCAA6BD,EAAU,YAEnD,IAAME,EAAepB,EAAqBK,EAAU,gBAChDe,IACFd,GAAU,gBAAJ,OAAoBc,EAApB,MAER,IAAMC,EAAqBrB,EAAqBK,EAAU,sBACtDgB,IACFf,IAAUa,kCAA6BE,EAAoB,iBAE7D,IAAMC,EAAetB,EAAqBK,EAAU,gBAChDiB,IACFhB,IAAUa,kCAA6BG,EAAc,kBAEvD,IAAMC,EAAqBvB,EAAqBK,EAAU,sBAI1D,OAHIkB,IACFjB,GAAU,gBAAJ,OAAoBiB,EAAmBN,MAAvC,MAEDX,KAWP,YAAgB,IAAdD,EAAc,EAAdA,SACEC,EAAS,GAEb,GAAkB,cADCN,EAAqBK,EAAU,cAEhD,OAAQC,EAEV,IAAIkB,EAAM,EAAGC,EAAO,EAAGC,EAAQ,OAAQC,EAAS,OAC1CC,EAAmC5B,EAAqBK,EAAU,oCAGxE,OAFuCL,EAAqBK,EAAU,mCAGpE,IAAK,SACHsB,EAAS,EACTH,EAAM,OACP,MACD,IAAK,SACHlB,GAAU,eAGd,OAAOsB,GACL,IAAK,QACHF,EAAQ,EACRD,EAAO,OACR,MACD,IAAK,SACHnB,GAAU,cAId,OADAA,EAAU,OAAJ,OAAWkB,EAAX,iBAAuBC,EAAvB,kBAAqCC,EAArC,mBAAqDC,EAArD,QAMJ,YAAgB,IAAdtB,EAAc,EAAdA,SACAC,EAAS,GACPuB,EAAW7B,EAAqBK,EAAU,YAC5CwB,IACFvB,IAAUa,kCAA6BU,EAAU,YAEnD,IAAMC,EAAc9B,EAAqBK,EAAU,eAC/CyB,IACFxB,GAAU,SAAJ,QAAaS,kBAAae,GAA1B,MAER,IAAMC,EAAY/B,EAAqBK,EAAU,aAC7C0B,IACFzB,GAAU,OAAJ,QAAWS,kBAAagB,GAAxB,MAER,IAAIC,EAAUhC,EAAqBK,EAAU,WACzC2B,IACF1B,IAAU2B,yBAAoBD,EAAS,sBAEzCA,EAAUhC,EAAqBK,EAAU,UAAW,cAElDC,GAAU,YAAJ,QAAgB2B,yBAAoBD,EAAS,oBAA7C,OAERA,EAAUhC,EAAqBK,EAAU,UAAW,aAElDC,GAAU,WAAJ,QAAe2B,yBAAoBD,EAAS,oBAA5C,MAER,IAAIE,EAAYlC,EAAqBK,EAAU,aAY/C,OAXI6B,IACF5B,GAAU,WAAJ,QAAe2B,yBAAoBC,EAAW,QAA9C,OAERA,EAAYlC,EAAqBK,EAAU,YAAa,aAEtDC,GAAU,iBAAJ,QAAqB2B,yBAAoBC,EAAW,QAApD,OAERA,EAAYlC,EAAqBK,EAAU,YAAa,cAEtDC,GAAU,kBAAJ,QAAsB2B,yBAAoBC,EAAW,QAArD,MAED5B,KAIL,YAAgB,IAAdD,EAAc,EAAdA,SACAC,EAAS,GAIb,OAHID,EAAS8B,gBAAkB9B,EAAS8B,eAAexB,OACrDL,GAAU,uBAAJ,OAA2BD,EAAS8B,eAAexB,MAAnD,OAA0DN,EAAS8B,eAAevB,KAAlF,iBAEDN,KC/KT,IAAO8B,EAAgBnC,OAAOC,aAAvBkC,aAODC,E,wcACJ,WAAYC,GAAO,6BACjB,cAAMA,IACDC,eAAiBD,EAAMC,gBAAkBtC,OAAOsC,eACrD,EAAKC,MAAQ,CACXC,WAAW,EACXC,YAAazC,OAAO0C,oBAAoBC,UACtC,EAAKN,MAAMO,SAASC,KACpB,KACA,EAAKR,MAAMS,KACX,EAAKT,MAAMU,QAEbC,iBAAiB,GAEnB,EAAKC,MAAQ,EAAKA,MAAMC,MAAX,WAbI,E,iDAkBnB,SAAmBC,GACjB,IAAMC,EAAiBC,KAAKhB,MAAtBe,aAEN,OAAQC,KAAKd,MAAME,YAAYa,YAAY,aAAc,UACvD,IAAK,QAoCL,IAAK,YAwBCF,IAAiBD,EAAUC,cAC7BC,KAAKE,SAAS,CACZf,UACEY,EAAaI,UAAYjD,EAAEC,IAAI6C,KAAKhB,MAAO,sB,mBAOvD,WACEgB,KAAKE,SAAS,CAAEf,WAAW,EAAOQ,iBAAiB,IACnDK,KAAKhB,MAAMoB,e,oBAGb,WAAS,WACCjB,EAAca,KAAKd,MAAnBC,UACJkB,EAAU,CAAC,aAETjB,EAAcY,KAAKd,MAAME,YAC/BA,EAAYkB,UAAYpD,EAAEC,IAAI6C,KAAKhB,MAAO,iBAC1C,IAAMuB,EAAsBnB,EAAYa,YAAY,IAC/CO,EAAoBpB,EAAY1C,qBAAqB,oBACrD+D,EAA+BrB,EAAY1C,qBAAqB,+BAChEgE,EAAgCtB,EAAY1C,qBAAqB,gCAIpEgE,EAHGA,EAG4B,GAAH,OAAMA,EAA6BrD,MAAQ,KAA3C,OAAiDqD,EAA6BpD,MAF3E,OAQ/BmD,EAHGA,EAG2B,GAAH,OAAMA,EAA4BpD,MAAQ,KAA1C,OAAgDoD,EAA4BnD,MAFzE,OAKd,cADC8B,EAAY1C,qBAAqB,eAElD2D,EAAQM,KAAK,uBAEf,IAAMC,EAAgBxB,EAAYyB,QAC5BC,EAAgB1B,EAAY1C,qBAAsB,iBAExD2D,EAAQM,KAAR,UAAgBC,EAAhB,eACA,IAAMG,EACJ3B,EAAY1C,qBAAqB,8BAOnC,OALIqE,GACFV,EAAQM,KAAK,qBAIPJ,EAAoBS,qBAC1B,IAAK,cACHX,EAAQM,KAAK,kCACb,MACF,IAAK,SACHN,EAAQM,KAAK,2BAKjB,OAAQJ,EAAoBjC,kCAC1B,IAAK,OACH+B,EAAQM,KAAK,6BACb,MACF,IAAK,SACHN,EAAQM,KAAK,+BACb,MACF,IAAK,QACHN,EAAQM,KAAK,8BACb,MACF,QACEN,EAAQM,KAAK,+BAIjB,OAAQJ,EAAoBU,gCAC1B,IAAK,MACHZ,EAAQM,KAAK,0BACb,MACF,IAAK,SACHN,EAAQM,KAAK,6BACb,MACF,IAAK,SACHN,EAAQM,KAAK,6BACb,MACF,QACEN,EAAQM,KAAK,6BAGjB,IACMO,EACJ9B,EAAY1C,qBAAqB,sCAC7ByE,EAA+BZ,EAA/BY,2BACNA,EAA6BA,GAA8B,QAC3D,IAAMC,EAAcF,EAClB,8BACEG,UACE,sBACgC,UAA/BF,EACG,4BACA,4BAENG,QAAS,WACP,EAAKpB,SAAS,CAAEf,WAAW,IAC3B,EAAKH,MAAMoB,eAGb,oBAACmB,EAAA,EAAD,CACEC,MAAOhB,EACPiB,MAAM,EACNC,MAAOjB,EACPkB,OAAQjB,EACRkB,QAAS,CACPC,UAAW,OACXC,KAAM,YACNC,IAAK,sBAEPV,UAAU,6BAId,8BACEA,UACE,sBACgC,UAA/BF,EACG,4BACA,4BAENG,QAAS,WACP,EAAKpB,SAAS,CAAEf,WAAW,IAC3B,EAAKH,MAAMoB,eAGZtB,IAAekD,WAAW,QAAS,CAClCN,MAAMjB,EACNkB,OAAOjB,EACPW,UAAW,6BAMjB,OAAOlC,EACL,oBAAC,EAAD,CACEpC,SAAUwD,EACVc,UAAWhB,EAAQ4B,KAAK,KACxBX,QAAS,WAELP,IAEA,EAAKb,SAAS,CAAEf,WAAW,IAC3B,EAAKH,MAAMoB,gBAII,WAAlBU,GAA8BM,EAC/B,2BACEC,UAAU,eAEVC,QAAS,SAAAY,GAAC,OAAIA,EAAEC,oBAEG,WAAlBrB,GAA8BM,EAC/B,oBAAC,KAAD,CACEgB,UAAQ,EACRC,sBAAuB,SAAArD,GAAK,OAC1B,qCAASA,EAAT,CAAgBqC,UAAU,+BAE5BiB,sBAAuB,kBACrB,2BAAKjB,UAAU,sCAEjBkB,oBAAqB,SAAAvD,GAAK,OACxB,qCAASA,EAAT,CAAgBqC,UAAU,qCAE5BA,UAAU,kBACVmB,gBAAiB,IACjBC,iBAAkB,KAElB,2BAAKpB,UAAU,iBACZqB,MAAMC,cAAcvD,EAAYwD,eAAgB,CAC/CC,QAASzD,EACTH,eAAgBe,KAAKf,eACrB6D,SAAU1D,EAAY0D,eAM9B,S,GAhRiBC,WAkSzB,EAAepG,OAAOqG,WAAWC,SAbT,SAAA/D,GACtB,MAAO,CACLgE,eAAgBhE,EAAMgE,eACtBnD,aAAcb,EAAMa,iBAIG,SAAAoD,GACzB,MAAO,CACL/C,WAAY,kBAAM+C,GAASC,OAAY,WAI3C,CAA8ErE","file":"3825.editor.js","sourcesContent":["const {getResponsiveSetting} = window.altrpHelpers;\nimport {\n  shadowControllerToStyles,\n  dimensionsControllerToStyles,\n  sliderStyled,\n  colorPropertyStyled\n} from '../helpers/styles';\n\n\nconst FrontPopupWrapper = window.styled.div`\n&{\n  overflow: hidden;\n${({settings}) => {\n  let styles = \"\";\n  const layout_bg = getResponsiveSetting(settings, 'layout_bg')\n  styles += `background-color:${_.get(layout_bg, 'color', 'rgba(0,0,0,0.7)')};`\n  return styles\n}\n}\n& .popup-content {\n  ${({settings}) => {\n  let styles = \"\";\n  const height_custom_popup_layout = getResponsiveSetting(settings, 'height_custom_popup_layout')\n  if (height_custom_popup_layout) {\n\n  }\n  if (settings.width_popup_layout && settings.width_popup_layout.size)\n    styles += `width: ${settings.width_popup_layout.size} ${settings.width_popup_layout.unit};`;\n\n  return styles;\n}}\n}\n& .popup-window > .popup-scrollbar > div{\n  ${({settings}) => {\n  let styles = \"\";\n  const content_position_popup_layout = getResponsiveSetting(settings, 'content_position_popup_layout')\n  if (content_position_popup_layout && content_position_popup_layout !== 'flex-start') {\n    styles += `align-items:${content_position_popup_layout};`\n    styles += `display:flex;`\n  }\n  return styles;\n}}\n}\n&& .popup-window{\n  ${({settings}) => {\n  let styles = \"\";\n  const height_custom_popup_layout = getResponsiveSetting(settings, 'height_custom_popup_layout')\n  if (height_custom_popup_layout) {\n    styles += `height:${sliderStyled(height_custom_popup_layout)};`\n  }\n  const content_position_popup_layout = getResponsiveSetting(settings, 'content_position_popup_layout')\n  if (content_position_popup_layout) {\n    styles += `justify-content:${content_position_popup_layout};`\n  }\n  const width_popup_layout = getResponsiveSetting(settings, 'width_popup_layout')\n  if (width_popup_layout) {\n    styles += `width:${sliderStyled(width_popup_layout)};`\n  }\n\n  const popup_bg = getResponsiveSetting(settings, 'popup_bg')\n  if (popup_bg) {\n    styles += `background-color:${popup_bg.color};`\n  }\n  const popup_pa = getResponsiveSetting(settings, 'popup_pa')\n  if (popup_pa) {\n    styles += dimensionsControllerToStyles(popup_pa, 'padding')\n  }\n  const popup_border = getResponsiveSetting(settings, 'popup_border')\n  if (popup_border) {\n    styles += `border-style:${popup_border};`\n  }\n  const popup_border_width = getResponsiveSetting(settings, 'popup_border_width')\n  if (popup_border_width) {\n    styles += dimensionsControllerToStyles(popup_border_width, 'border-width')\n  }\n  const popup_radius = getResponsiveSetting(settings, 'popup_radius')\n  if (popup_radius) {\n    styles += dimensionsControllerToStyles(popup_radius, 'border-radius')\n  }\n  const popup_border_color = getResponsiveSetting(settings, 'popup_border_color')\n  if (popup_border_color) {\n    styles += `border-color:${popup_border_color.color};`\n  }\n  return styles;\n}}\n  max-height: 100%;\n  max-width: 100%;\n}\n& .popup-close-button .altrp-image-placeholder svg{\n  width: 100%;\n  height: 100%;\n  display: block;\n}\n&.app-popup_offcanvas .popup-window{\n${({settings}) => {\n  let styles = ''\n  const type_popup = getResponsiveSetting(settings, 'type_popup')\n  if(type_popup !== 'offcanvas'){\n    return  styles\n  }\n  let top = 0, left = 0, right = 'auto', bottom = 'auto';\n  const horizontal_position_popup_layout = getResponsiveSetting(settings, 'horizontal_position_popup_layout')\n  const vertical_position_popup_layout = getResponsiveSetting(settings, 'vertical_position_popup_layout')\n\n  switch(vertical_position_popup_layout){\n    case 'bottom':{\n      bottom = 0\n      top = 'auto'\n    }break;\n    case 'center':{\n      styles += 'height:100%;';\n    }break;\n  }\n  switch(horizontal_position_popup_layout){\n    case 'right':{\n      right = 0\n      left = 'auto'\n    }break;\n    case 'center':{\n      styles += 'width:100%;';\n    }break;\n  }\n  styles += `top:${top};left:${left};right:${right};bottom:${bottom};`\n  return styles\n}}\n}\n&&& .popup-close-button{\n  padding: 0;\n  ${({settings}) => {\n  let styles = ''\n  const close_pa = getResponsiveSetting(settings, 'close_pa')\n  if (close_pa) {\n    styles += dimensionsControllerToStyles(close_pa, 'padding')\n  }\n  const close_right = getResponsiveSetting(settings, 'close_right')\n  if (close_right) {\n    styles += `right:${sliderStyled(close_right)};`\n  }\n  const close_top = getResponsiveSetting(settings, 'close_top')\n  if (close_top) {\n    styles += `top:${sliderStyled(close_top)};`\n  }\n  let close_c = getResponsiveSetting(settings, 'close_c');\n  if (close_c) {\n    styles += colorPropertyStyled(close_c, 'background-color')\n  }\n  close_c = getResponsiveSetting(settings, 'close_c', '.active');\n  if (close_c) {\n    styles += `&:active{${colorPropertyStyled(close_c, 'background-color')}}`\n  }\n  close_c = getResponsiveSetting(settings, 'close_c', ':hover');\n  if (close_c) {\n    styles += `&:hover{${colorPropertyStyled(close_c, 'background-color')}}`\n  }\n  let icon_fill = getResponsiveSetting(settings, 'icon_fill');\n  if (icon_fill) {\n    styles += `& svg *{${colorPropertyStyled(icon_fill, 'fill')}}`\n  }\n  icon_fill = getResponsiveSetting(settings, 'icon_fill', ':hover');\n  if (icon_fill) {\n    styles += `&:hover svg *{${colorPropertyStyled(icon_fill, 'fill')}}`\n  }\n  icon_fill = getResponsiveSetting(settings, 'icon_fill', '.active');\n  if (icon_fill) {\n    styles += `&:active svg *{${colorPropertyStyled(icon_fill, 'fill')}}`\n  }\n  return styles;\n}\n}\n& .altrp-offcanvas {\n  ${({settings}) => {\n  let styles = '';\n  if (settings.time_offcanvas && settings.time_offcanvas.size) {\n    styles += `animation-duration: ${settings.time_offcanvas.size}${settings.time_offcanvas.unit} !important;`\n  }\n  return styles;\n}}\n}\n`\n\nexport default FrontPopupWrapper;\n","const {iconsManager} = window.altrpHelpers\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport { togglePopup } from \"../store/popup-trigger/actions\";\nimport AltrpImage from \"../../../../editor/src/js/components/altrp-image/AltrpImage\";\nimport FrontPopupWrapper from \"./FrontPopupWrapper\";\nimport '../../sass/altrp-popup.scss'\n\nclass FrontPopup extends Component {\n  constructor(props) {\n    super(props);\n    this.ElementWrapper = props.ElementWrapper || window.ElementWrapper;\n    this.state = {\n      isVisible: false,\n      rootElement: window.frontElementsFabric.parseData(\n        this.props.template.data,\n        null,\n        this.props.page,\n        this.props.models\n      ),\n      isShownOnScroll: false\n    };\n    this.close = this.close.bind(this);\n  }\n\n\n\n  componentDidUpdate(prevProps) {\n    let { popupTrigger } = this.props;\n\n    switch (this.state.rootElement.getSettings(\"type_popup\", \"popup\")) {\n      case \"popup\":\n        // if (on_scroll && !isShownOnScroll && on_scroll.size <= this.props.scrollPosition.top * 100) {\n        //   this.setState({ isVisible: true, isShownOnScroll: true });\n        //\n        // }\n        // if (this.resetTimer && this.props.scrollPosition.top !== prevProps.scrollPosition.top) {\n        //\n        //  this.resetTimer();\n        //\n        // }\n        // if (to_element && this.props.scrollPosition.top !== prevProps.scrollPosition.top) {\n        //\n        //  // console.log(this.elements)\n        //\n        //  console.log(this.props.scrollPosition.scrollTop)\n        //  const { scrollTop, clientHeight } = this.props.scrollPosition;\n        //\n        //  for (let index = 0; index < this.elements.length; index++) {\n        //\n        //    const element = this.elements[index];\n        //\n        //     if (isElementTopInViewport(element, scrollTop, clientHeight)) {\n        //\n        //      this.setState({ isVisible: true });\n        //       // this.elements.splice(index, 1);\n        //     }\n        //   }\n\n        // }\n        if (popupTrigger !== prevProps.popupTrigger) {\n          this.setState({\n            isVisible:\n              popupTrigger.popupID === _.get(this.props, \"template.guid\")\n          });\n        }\n        break;\n      case \"offcanvas\":\n        // if (on_scroll && !isShownOnScroll && on_scroll.size <= this.props.scrollPosition.top * 100) {\n        //   this.setState({ isVisible: true, isShownOnScroll: true });\n        // }\n        //\n        // if (this.resetTimer && this.props.scrollPosition.top !== prevProps.scrollPosition.top) {\n        //   this.resetTimer();\n        // }\n\n        // if (to_element && this.props.scrollPosition.top !== prevProps.scrollPosition.top) {\n        //   // console.log(this.elements)\n        //   console.log(this.props.scrollPosition.scrollTop)\n        //   const { scrollTop, clientHeight } = this.props.scrollPosition;\n\n        //   for (let index = 0; index < this.elements.length; index++) {\n        //     const element = this.elements[index];\n\n        //     if (isElementTopInViewport(element, scrollTop, clientHeight)) {\n        //       this.setState({ isVisible: true });\n        //       // this.elements.splice(index, 1);\n        //     }\n        //   }\n\n        // }\n        if (popupTrigger !== prevProps.popupTrigger) {\n          this.setState({\n            isVisible:\n              popupTrigger.popupID === _.get(this.props, \"template.guid\")\n          });\n        }\n        break;\n    }\n  }\n\n  close() {\n    this.setState({ isVisible: false, isShownOnScroll: false });\n    this.props.closePopup();\n  }\n\n  render() {\n    const { isVisible } = this.state;\n    let classes = [`app-popup`];\n    // const { positioning_custom_top } = this.props.template.data.rootElementSettings;\n    const rootElement = this.state.rootElement;\n    rootElement.popupGUID = _.get(this.props, \"template.guid\");\n    const rootElementSettings = rootElement.getSettings(\"\");\n    let  popup_close_icon =  rootElement.getResponsiveSetting('popup_close_icon')\n    let  popup_close_icon_width_size =  rootElement.getResponsiveSetting('popup_close_icon_width_size')\n    let  popup_close_icon_height_size =  rootElement.getResponsiveSetting('popup_close_icon_height_size')\n    if(! popup_close_icon_height_size){\n      popup_close_icon_height_size = '50px'\n    } else {\n      popup_close_icon_height_size = `${popup_close_icon_height_size.size || '0'}${popup_close_icon_height_size.unit}`\n    }\n\n    if(! popup_close_icon_width_size){\n      popup_close_icon_width_size = '50px'\n    } else {\n      popup_close_icon_width_size = `${popup_close_icon_width_size.size || '0'}${popup_close_icon_width_size.unit}`\n    }\n    const type_popup = rootElement.getResponsiveSetting('type_popup')\n    if(type_popup === 'offcanvas'){\n      classes.push(\"app-popup_offcanvas\")\n    }\n    const rootElementId = rootElement.getId();\n    const close_context = rootElement.getResponsiveSetting( 'close_context')\n\n    classes.push(`${rootElementId}-app-popup`);\n    const overlayCondition =\n      rootElement.getResponsiveSetting('overlay_close_popup_layout');\n\n    if (overlayCondition) {\n      classes.push(\"app-popup-overlay\");\n    }\n\n    //height popup\n    switch (rootElementSettings.height_popup_layout) {\n      case \"fitToScreen\":\n        classes.push(\"app-popup-height-fit-to-screen\");\n        break;\n      case \"custom\":\n        classes.push(\"app-popup-height-custom\");\n        break;\n    }\n\n    //horizontal position horizontal_position_popup_layout\n    switch (rootElementSettings.horizontal_position_popup_layout) {\n      case \"left\":\n        classes.push(\"app-popup-horizontal-left\");\n        break;\n      case \"center\":\n        classes.push(\"app-popup-horizontal-center\");\n        break;\n      case \"right\":\n        classes.push(\"app-popup-horizontal-right\");\n        break;\n      default:\n        classes.push(\"app-popup-horizontal-center\");\n    }\n\n    //vertical position vertical_position_popup_layout\n    switch (rootElementSettings.vertical_position_popup_layout) {\n      case \"top\":\n        classes.push(\"app-popup-vertical-top\");\n        break;\n      case \"center\":\n        classes.push(\"app-popup-vertical-center\");\n        break;\n      case \"bottom\":\n        classes.push(\"app-popup-vertical-bottom\");\n        break;\n      default:\n        classes.push(\"app-popup-vertical-center\");\n    }\n\n    let content = \"\";\n    const closeButtonCondition =\n      rootElement.getResponsiveSetting('switcher_close_button_popup_layout');\n    let { popup_close_icon_alignment } = rootElementSettings;\n    popup_close_icon_alignment = popup_close_icon_alignment || \"right\";\n    const closeButton = closeButtonCondition ? (\n      <button\n        className={\n          \"popup-close-button\" +\n          (popup_close_icon_alignment === \"right\"\n            ? \" popup-close-button-right\"\n            : \" popup-close-button-left\")\n        }\n        onClick={() => {\n          this.setState({ isVisible: false });\n          this.props.closePopup();\n        }}\n      >\n        <AltrpImage\n          image={popup_close_icon}\n          lazy={false}\n          width={popup_close_icon_width_size}\n          height={popup_close_icon_height_size}\n          default={{\n            assetType: \"icon\",\n            name: \"deleteOne\",\n            url: \"/img/nullImage.png\"\n          }}\n          className=\"popup-close-button-icon\"\n        />\n      </button>\n    ) : (\n      <button\n        className={\n          \"popup-close-button\" +\n          (popup_close_icon_alignment === \"right\"\n            ? \" popup-close-button-right\"\n            : \" popup-close-button-left\")\n        }\n        onClick={() => {\n          this.setState({ isVisible: false });\n          this.props.closePopup();\n        }}\n      >\n        {iconsManager().renderIcon('times' ,{\n          width:popup_close_icon_width_size,\n          height:popup_close_icon_height_size,\n          className: \"popup-close-button-icon\"\n        })}\n      </button>\n    );\n\n\n    return isVisible ? (\n      <FrontPopupWrapper\n        settings={rootElementSettings}\n        className={classes.join(\" \")}\n        onClick={() => {\n          if (\n            overlayCondition\n          ) {\n            this.setState({ isVisible: false });\n            this.props.closePopup();\n          }\n        }}\n      >\n        {close_context === 'window' && closeButton}\n        <div\n          className=\"popup-window\"\n          // style={{ top: positioning_custom_top.size + positioning_custom_top.unit}}\n          onClick={e => e.stopPropagation()}\n        >\n          {close_context !== 'window' && closeButton}\n          <Scrollbars\n            autoHide\n            renderThumbHorizontal={props => (\n              <div {...props} className=\"popup-scrollbar-vertical\" />\n            )}\n            renderTrackHorizontal={() => (\n              <div className=\"popup-scrollbar-track-horizontal\" />\n            )}\n            renderTrackVertical={props => (\n              <div {...props} className=\"popup-scrollbar-track-vertical\" />\n            )}\n            className=\"popup-scrollbar\"\n            autoHideTimeout={1000}\n            autoHideDuration={200}\n          >\n            <div className=\"popup-content\">\n              {React.createElement(rootElement.componentClass, {\n                element: rootElement,\n                ElementWrapper :this.ElementWrapper,\n                children: rootElement.children\n              })}\n            </div>\n          </Scrollbars>\n        </div>\n      </FrontPopupWrapper>\n    ) : null;\n\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    scrollPosition: state.scrollPosition,\n    popupTrigger: state.popupTrigger\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    closePopup: () => dispatch(togglePopup(null))\n  };\n};\n\nexport default window.reactRedux.connect(mapStateToProps, mapDispatchToProps)(FrontPopup);\n"],"sourceRoot":""}